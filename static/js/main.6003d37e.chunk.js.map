{"version":3,"sources":["styles/themes/core.ts","styles/themes/default.ts","context/ThemeContext/ThemeContext.tsx","context/UserContext/UserContext.tsx","components/Navigation/Navigation.css.ts","constants/paths.ts","styles/styledElements.css.ts","views/Dashboard/Dashboard.css.ts","views/Dashboard/Dashboard.tsx","constants/calendar.ts","hooks/useCalendar/useCalendar.tsx","hooks/useQuery/useQuery.tsx","utils/types.ts","hooks/useWindowSize/useWindowSize.jsx","utils/validators.ts","views/CalendarPage/CalendarPage.css.ts","constants/enums.ts","views/CalendarPage/components/CalendarTile/CalendarTile.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.tsx","views/CalendarPage/components/CalendarGrid/CalendarGrid.css.ts","views/CalendarPage/components/CalendarGrid/CalendarGrid.tsx","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.css.ts","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.tsx","constants/APIpaths.ts","views/CalendarPage/CalendarPage.api.ts","views/CalendarPage/components/DayCard/DayCard.css.ts","views/CalendarPage/components/DayCard/DayCard.tsx","views/CalendarPage/components/Habbit/Habbit.css.ts","views/CalendarPage/components/Habbit/Habbit.tsx","views/CalendarPage/CalendarPage.tsx","views/LoginPage/LoginPage.css.ts","views/LoginPage/LoginPage.api.ts","views/LoginPage/LoginPage.tsx","views/RegisterPage/RegisterPage.api.ts","constants/routes.ts","views/RegisterPage/RegisterPage.tsx","components/Navigation/components/OpenedNavigation/OpenedNavigation.css.ts","components/Navigation/components/OpenedNavigation/OpenedNavigation.tsx","components/Navigation/Navigation.tsx","components/Button/Button.ts","components/Logo/Logo.css.ts","components/Logo/Logo.tsx","components/Container/Container.tsx","components/Input/Input.css.ts","components/Input/Input.tsx","components/Alert/Alert.css.ts","components/Alert/Alert.tsx","styles/GlobalStyle.js","root/App/App.tsx","root/PrivateRoute/PrivateRoute.tsx","root/Router/Router.tsx","reportWebVitals.ts","index.tsx"],"names":["font","base","family","light","regular","medium","bold","sizes","xs","s","sm","m","ml","l","core","colors","common","black","white","margin","time","short","long","zIndex","max","low","chooseFS","fontSize","isValidSize","Object","keys","find","fs","undefined","nav","dot","media","phone","tablet","desktop","lightBlue","defaultTheme","gridTile","size","body","calendar","navigation","text","primary","secondary","button","background","topLeft","topRight","bottomLeft","bottomRight","tile","backgroundActive","border","modalBackground","error","main","loading","ThemeContext","createContext","Provider","ThemeProvider","children","value","theme","cookies","Cookies","UserContext","token","login","logout","setCookieDate","date","Date","setDate","getDate","useUserContext","useContext","UserProvider","useState","get","setToken","user","newToken","set","path","expires","remove","StyledNavButton","styled","open","StyledDot","div","StyledTLDot","StyledTRDot","StyledBLDot","StyledBRDot","StyledLine","StyledRotatedLine","DASHBOARD","CALENDAR","LOGIN","REGISTER","FlexColCenter","section","StyledWrapper","StyledContentWrapper","StyledHeader","h2","StyledDescription","p","StyledSeparator","Dashboard","Container","as","Link","to","paths","weekDays","weekDaysFull","months","calculateDayInYear","now","start","getFullYear","diff","getTimezoneOffset","Math","floor","getISODate","toISOString","match","useCalendar","events","month","year","days","setDays","useEffect","firstDay","getDay","daysInMonth","eventsCopy","map","event","numericStart","dateStart","numericEnd","dateEnd","eventsArray","daysArray","dayInYear","i","j","push","id","day","filter","daysOfWeek","includes","useQuery","SIDES","dependency","fn","setError","setLoading","data","setData","a","response","message","fetchData","useWindowSize","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","createRequiredObject","name","required","emailValidation","pattern","createRestrictedLengthObject","minLength","maxLength","AlertTypes","StyledCenter","StyledButtonWrapper","StyledTile","StyledCircle","alone","color","position","StyledDay","generateCircles","edge","length","shift","CalendarTile","handleDayChange","width","onClick","data-testid","StyledCalendar","StyledGrid","StyledDayGrid","CalendarGrid","moveDate","navId","header","eventsArr","label","idEvent","_id","StyledNavigation","StyledButton","StyledTitle","h3","CalendarNavigation","LEFT","icon","faCaretLeft","RIGHT","faCaretRight","process","USER","EVENTS","LABELS","APIpaths","LOGOUT","getEvents","from","fetch","headers","Authorization","method","status","json","Error","getEventsInDay","getLabels","StyledCard","StyledWeekDay","DayCard","split","dayNumber","parseInt","eventsF","weekDay","habbit","StyledHabbit","StyledTime","Habbit","title","timeEnd","timeStart","description","my","noMaxWidth","close","CalendarPage","getMonth","actualMonth","setActualMonth","actualYear","setActualYear","setEvents","openCard","setOpenCard","setDay","loadingE","errorE","labels","loadingL","errorL","mappedResponse","side","prevYear","prevMonth","moveDateDay","numericYear","numericMonth","numericDay","handleChangeView","prevState","CalendarGridView","useMemo","mt","loginUser","JSON","stringify","LoginPage","useForm","register","handleSubmit","errors","history","useHistory","onSubmit","noValidate","refVal","type","autoComplete","password","registerUser","routes","link","routesForRouter","Component","exact","isPrivate","passwordRepeat","email","StyledOpenNav","StyledContainner","StyledLink","OpenedNavigation","handleClose","Navigation","setOpen","Button","StyledLogo","Logo","StyledContainer","StyledInputWrapper","StyledLabel","StyledInput","input","StyledMessage","Input","rest","htmlFor","ref","StyledAlert","Alert","ERROR","AlertMessage","LOADING","GlobalStyle","createGlobalStyle","App","basename","PrivateRoute","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6003d37e.chunk.js","sourcesContent":["import { CoreTheme } from 'styled-components';\nimport { fontInterface } from 'styles/styled.d';\n\nconst font: fontInterface = {\n  base: '10px',\n  family: 'Arial',\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  sizes: {\n    xs: '0.75rem',\n    s: '1rem',\n    sm: '1.25rem',\n    m: '1.5rem',\n    ml: '2rem',\n    l: '3rem',\n  },\n};\n\nconst chooseFS = (fontSize: string) => {\n  const { sizes } = font;\n  const isValidSize: string | undefined = Object.keys(sizes).find((fs) => fs === fontSize);\n  if (isValidSize !== undefined) {\n    return sizes[isValidSize];\n  }\n  return sizes.xs;\n};\n\nconst core: CoreTheme = {\n  colors: {\n    common: {\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n  },\n  font,\n  margin: {\n    xs: '0.5rem',\n    s: '0.75rem',\n    sm: '1rem',\n    m: '1.25rem',\n    ml: '1.5rem',\n    l: '1.75rem',\n  },\n  time: {\n    short: 100,\n    medium: 300,\n    long: 500,\n  },\n  zIndex: {\n    max: 1000,\n    medium: 500,\n    low: 100,\n  },\n  chooseFS,\n  sizes: {\n    nav: '50px',\n    dot: '20px',\n  },\n  media: {\n    phone: { s: '320px' },\n    tablet: { s: '768px', l: '1024px' },\n    desktop: { s: '1366px', l: '1920px' },\n  },\n};\n\nexport default core;\n","import core from 'styles/themes/core';\nimport { DefaultTheme } from 'styled-components';\n\nconst lightBlue = '#AFE9FF';\n\nconst defaultTheme: DefaultTheme = {\n  ...core,\n  gridTile: {\n    size: 50,\n  },\n  colors: {\n    ...core.colors,\n    body: '#F3FFF2',\n    calendar: {\n      navigation: '#EDEFFF',\n    },\n    text: {\n      primary: core.colors.common.black,\n      secondary: '#808080',\n      nav: '#A5A5A5',\n    },\n    button: {\n      background: '#FFC136',\n      text: '#fff',\n    },\n    nav: {\n      topLeft: '#B7FF96',\n      topRight: '#89FFED',\n      bottomLeft: '#FDF194',\n      bottomRight: '#FFADFC',\n      background: '#A4FF9D',\n      button: '#FFED67',\n    },\n    tile: {\n      background: '#FFFCAF',\n      backgroundActive: lightBlue,\n      border: '#77CBFF',\n    },\n    modalBackground: lightBlue,\n    error: {\n      main: '#FF9191',\n      border: '#730000',\n      text: '#730000',\n    },\n    loading: {\n      main: '#a6fff9',\n      border: '#1b968e',\n      text: '#1b968e',\n    },\n    border: '#707070',\n  },\n};\n\nexport default defaultTheme;\n","import React, { createContext, useContext } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\n\nimport { defaultTheme } from 'styles/themes';\n\nconst ThemeContext = createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\n\ntype ThemeProps = {\n  children: Object;\n};\n\nconst ThemeProvider = ({ children }: ThemeProps) => (\n  <Provider value={defaultTheme}>\n    <SCThemeProvider theme={defaultTheme}>{children}</SCThemeProvider>\n  </Provider>\n);\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React, { createContext, useContext, useState } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\ninterface UserProviderProps {\n  token: string | undefined;\n  login: Function;\n  logout: Function;\n}\n\nconst UserContext = createContext<UserProviderProps>({\n  token: undefined,\n  login: () => {},\n  logout: () => {},\n});\n\nconst { Provider } = UserContext;\n\ntype UserProps = {\n  children: Object;\n};\n\nconst setCookieDate = () => {\n  const date = new Date();\n  date.setDate(date.getDate() + 14);\n  return date;\n};\n\nconst UserProvider = ({ children }: UserProps) => {\n  const [token, setToken] = useState<string | undefined>(cookies.get('token'));\n  const user: UserProviderProps = {\n    token,\n    login: (newToken: string) => {\n      cookies.set('token', newToken, {\n        path: '/',\n        expires: setCookieDate(),\n      });\n      setToken(newToken);\n    },\n    logout: () => {\n      cookies.remove('token', { path: '/' });\n      setToken(undefined);\n    },\n  };\n  return <Provider value={user}>{children}</Provider>;\n};\n\nexport const useUserContext = () => useContext(UserContext);\n\nexport default UserProvider;\n","import styled from 'styled-components';\n// import { getKey } from 'utils/objectsFunctions';\n\n// const topLeft = css`\n//   top: 0;\n//   left: 0;\n// `;\n\n// const topRight = css`\n//   top: 0;\n//   right: 0;\n// `;\n\n// const bottomLeft = css`\n//   bottom: 0;\n//   left: 0;\n// `;\n\n// const bottomRight = css`\n//   bottom: 0;\n//   right: 0;\n// `;\n\n// interface Position {\n//   topLeft: FlattenSimpleInterpolation;\n//   topRight: FlattenSimpleInterpolation;\n//   bottomLeft: FlattenSimpleInterpolation;\n//   bottomRight: FlattenSimpleInterpolation;\n//   [key: string]: FlattenSimpleInterpolation;\n// }\n\n// const positionObject: Position = { topLeft, topRight, bottomLeft, bottomRight };\n\n// interface DotProps {\n//   topLeft?: boolean;\n//   topRight?: boolean;\n//   bottomLeft?: boolean;\n//   bottomRight?: boolean;\n//   [key: string]: boolean | undefined;\n// }\n\n/* background-color: ${({ theme, ...rest }) => theme.colors.nav[getKey(rest)]};\n  ${({ theme, ...rest }) => positionObject[getKey(rest)]} */\n\ninterface ClicableProps {\n  open: boolean;\n}\n\nexport const StyledNavButton = styled.button<ClicableProps>`\n  position: fixed;\n  height: ${({ theme }) => theme.sizes.nav};\n  width: ${({ theme }) => theme.sizes.nav};\n  top: ${({ theme }) => theme.margin.sm};\n  background-color: transparent;\n  border: none;\n  right: ${({ theme }) => theme.margin.sm};\n  padding: 0;\n  ${({ open }) => open && `transform: rotate(-45deg);`}\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StyledDot = styled.div<ClicableProps>`\n  width: ${({ theme }) => theme.sizes.dot};\n  height: ${({ theme }) => theme.sizes.dot};\n  border-radius: 50%;\n  position: absolute;\n  opacity: ${({ open }) => (open ? '0' : '1')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledTLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topLeft};\n  top: 0;\n  left: 0;\n`;\n\nexport const StyledTRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topRight};\n  top: 0;\n  right: 0;\n`;\n\nexport const StyledBLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomLeft};\n  bottom: 0;\n  left: 0;\n`;\n\nexport const StyledBRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomRight};\n  bottom: 0;\n  right: 0;\n`;\n\nexport const StyledLine = styled.div<ClicableProps>`\n  position: absolute;\n  height: 3px;\n  width: ${({ theme }) => theme.sizes.nav};\n  background-color: ${({ theme }) => theme.colors.error.main};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledRotatedLine = styled(StyledLine)<ClicableProps>`\n  transform: rotate(90deg);\n  top: 50%;\n`;\n","const path = {\n  DASHBOARD: '/',\n  CALENDAR: '/calendar',\n  LOGIN: '/login',\n  REGISTER: '/register',\n};\n\nexport default path;\n","import styled from 'styled-components';\n\nexport const FlexColCenter = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  padding: 0 1rem;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n`;\n\nexport const StyledContentWrapper = styled(FlexColCenter)`\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    margin-right: ${({ theme }) => theme.margin.l};\n  }\n`;\n\nexport const StyledHeader = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.l};\n  margin: ${({ theme }) => theme.margin.sm} 0;\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n\nexport const StyledDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: justify;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.l};\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.sm};\n  }\n`;\n\nexport const StyledSeparator = styled.p`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  margin: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'components';\nimport paths from 'constants/paths';\nimport { FlexColCenter } from 'styles';\nimport {\n  StyledHeader,\n  StyledWrapper,\n  StyledDescription,\n  StyledSeparator,\n  StyledContentWrapper,\n} from './Dashboard.css';\n\nconst Dashboard = () => (\n  <Container>\n    <StyledWrapper>\n      <StyledContentWrapper>\n        <StyledHeader>Habbit tracker</StyledHeader>\n        <StyledDescription>\n          Track your progress in very simple and personalized app\n        </StyledDescription>\n      </StyledContentWrapper>\n      <FlexColCenter>\n        <Button as={Link} to={paths.REGISTER} size=\"m\">\n          Create account for free\n        </Button>\n        <StyledSeparator>or</StyledSeparator>\n        <Button as={Link} to={paths.LOGIN} size=\"m\">\n          Log in\n        </Button>\n      </FlexColCenter>\n    </StyledWrapper>\n  </Container>\n);\n\nexport default Dashboard;\n","export const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nexport const weekDaysFull = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\nexport const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'Juny',\n  'Juni',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const calculateDayInYear = (date: string) => {\n  const now: any = new Date(date);\n  const start: any = new Date(now.getFullYear(), 0, 0);\n  const diff = now - start + (start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000;\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.floor(diff / oneDay);\n};\n\nexport const getISODate = (date: Date) => date.toISOString().match(/\\d{4}-\\d{2}-\\d{2}/)![0];\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-loop-func */\nimport { useEffect, useState } from 'react';\nimport { Event, EventLoop, CalendarTile } from 'utils';\nimport { calculateDayInYear } from 'constants/calendar';\n\nconst useCalendar = (events: Event[], month: number, year: number) => {\n  const [days, setDays] = useState<CalendarTile[]>([]);\n\n  useEffect(() => {\n    let firstDay = new Date(year, month).getDay();\n    const daysInMonth = 32 - new Date(year, month, 32).getDate();\n    if (firstDay === 0) {\n      firstDay = 7;\n    }\n    firstDay -= 1;\n    let eventsCopy: EventLoop[] = [];\n    eventsCopy = events.map((event) => ({\n      ...event,\n      numericStart: calculateDayInYear(event.dateStart),\n      numericEnd: calculateDayInYear(event.dateEnd),\n    }));\n\n    let eventsArray: EventLoop[] = [];\n    const daysArray: CalendarTile[] = [];\n    let dayInYear = calculateDayInYear(`${year}-${month + 1}-1`);\n\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (i === 0 && j < firstDay) {\n          daysArray.push({ id: i * 13 + j * 17 + i * j, day: -1, events: [] });\n        } else {\n          eventsArray = eventsArray.filter(\n            (event) => event.numericEnd > dayInYear && event.daysOfWeek.includes(j),\n          );\n          const day = i * 7 + j - firstDay + 1;\n\n          if (day > daysInMonth) {\n            break;\n          }\n\n          eventsCopy = eventsCopy.filter((event) => {\n            if (\n              event.numericStart <= dayInYear &&\n              dayInYear <= event.numericEnd &&\n              !eventsArray.includes(event) &&\n              event.daysOfWeek.includes(j)\n            ) {\n              eventsArray.push(event);\n            }\n            return dayInYear <= event.numericEnd;\n          });\n\n          daysArray.push({ id: i * 13 + j * 17, day, events: eventsArray });\n\n          dayInYear += 1;\n        }\n      }\n    }\n    setDays(daysArray);\n  }, [month, year, events]);\n\n  return [days];\n};\n\nexport default useCalendar;\n","import { useState, useEffect } from 'react';\n\ntype PromiseAnyReturn = () => Promise<any>;\n\ntype MultipleFunction = Function | PromiseAnyReturn;\n\ntype QueryReturn<T> = [Array<T>, boolean, string];\n\nfunction useQuery<T>(dependency: Array<any>, fn: MultipleFunction): QueryReturn<T> {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<Array<T>>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fn();\n        setData(response);\n      } catch (err) {\n        setError(err.message);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, dependency);\n\n  return [data, loading, error];\n}\n\nexport default useQuery;\n","export type GridProps = {\n  events: Event[];\n  month: number;\n  year: number;\n  moveDate: Function;\n  handleDayChange: Function;\n};\n\nexport interface Event {\n  _id: string;\n  daysOfWeek: number[];\n  title: string;\n  timeStart?: string;\n  timeEnd?: string;\n  dateStart: string;\n  dateEnd: string;\n  label?: string | Label;\n  description?: string;\n  userId: string;\n  checked?: [\n    {\n      day: number;\n      month: number;\n      year: number;\n      _id: string;\n    },\n  ];\n}\n\nexport interface EventLoop extends Event {\n  numericStart: number;\n  numericEnd: number;\n}\n\nexport type Label = {\n  _id: string;\n  title: string;\n  color: string;\n  userId: string;\n};\n\nexport type CalendarTile = {\n  day: number;\n  events: EventLoop[];\n  id: number;\n};\n\nexport enum SIDES {\n  LEFT = -1,\n  RIGHT = 1,\n}\n\nexport type Color = { color?: string; id?: string };\n\nexport type NavProps = {\n  navId: string;\n  header: string;\n  moveDate: Function;\n};\n\nexport interface DayCardProps {\n  day: string;\n  token: string | undefined;\n}\n","import { useState, useLayoutEffect } from \"react\";\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n};\n\nexport default useWindowSize;\n","export const createRequiredObject = (name: string) => ({\n  required: `Field ${name} is required.`,\n});\n\nexport const validatePattern = (pattern: RegExp) => ({\n  pattern: {\n    value: pattern,\n    message: 'Incorrect characters.',\n  },\n});\n\nexport const emailValidation = validatePattern(\n  // eslint-disable-next-line no-control-regex\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n);\n\nexport const createRestrictedLengthObject = (name: string) => ({\n  ...createRequiredObject(name),\n  minLength: {\n    value: 6,\n    message: `Field ${name} must have at least 6 characters.`,\n  },\n  maxLength: {\n    value: 30,\n    message: `Field ${name} must have maximum 30 characters.`,\n  },\n});\n","import styled from 'styled-components';\n\nexport const StyledCenter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n","export enum AlertTypes {\n  ERROR = 'error',\n  LOADING = 'loading',\n}\n","import styled from 'styled-components';\n\nexport const StyledTile = styled.button`\n  border: none;\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  height: ${({ theme }) => `${theme.gridTile.size}px`};\n  position: relative;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.common.white};\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    width: ${({ theme }) => `${theme.gridTile.size * 2}px`};\n    height: ${({ theme }) => `${theme.gridTile.size * 2}px`};\n  }\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ntype CirlcleProps = {\n  size: number;\n  alone: boolean;\n  position: number;\n  color: string | undefined;\n};\n\nexport const StyledCircle = styled.div<CirlcleProps>`\n  position: absolute;\n  border-radius: 50%;\n  width: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  height: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  background-color: ${({ color }) => color};\n  top: ${({ position }) => `${position}px`};\n  left: ${({ position }) => `${position}px`};\n  ${({ alone }) => alone && 'transform: translate(-50%,-50%);top: 50%;left:50%'}\n`;\n\nexport const StyledDay = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: ${({ theme }) => theme.zIndex.low};\n`;\n","import React, { MouseEventHandler } from 'react';\nimport { useThemeContext } from 'context';\nimport { Color } from 'utils';\nimport { useWindowSize } from 'hooks';\nimport { StyledCircle, StyledTile, StyledDay } from './CalendarTile.css';\n\nconst generateCircles = (colors: Color[], edge: number) => {\n  const size = (edge * (1.3 + (colors.length - 2) * 0.1)) / colors.length;\n  const shift = (edge - size) / (colors.length - 1);\n  let position = -shift;\n  return colors.map((color) => {\n    position += shift;\n    return (\n      <StyledCircle\n        key={color.id}\n        position={position}\n        alone={colors.length === 1}\n        color={color.color}\n        size={size}\n      />\n    );\n  });\n};\n\ntype TileProps = {\n  colors?: Color[];\n  day: number;\n  handleDayChange: Function;\n};\n\nconst CalendarTile = ({ colors, day, handleDayChange }: TileProps) => {\n  const {\n    gridTile: { size },\n  } = useThemeContext();\n  const [width] = useWindowSize();\n\n  return (\n    <StyledTile onClick={handleDayChange as MouseEventHandler<HTMLButtonElement>}>\n      {day === -1 ? null : (\n        <>\n          {colors && generateCircles(colors, width > 768 ? size * 2 : size)}\n          <StyledDay data-testid=\"day\">{day}</StyledDay>\n        </>\n      )}\n    </StyledTile>\n  );\n};\n\nexport default CalendarTile;\n","import styled from 'styled-components';\n\nexport const StyledCalendar = styled.div`\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    margin-top: 5rem;\n  }\n`;\n\nexport const StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(0, 1fr));\n  grid-template-rows: auto;\n  max-width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-top: none;\n  background-color: #fff;\n`;\n\nexport const StyledDayGrid = styled(StyledGrid)`\n  background-color: ${({ theme }) => theme.colors.calendar.navigation};\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n  border-bottom: none;\n`;\n\nexport const StyledDay = styled.div`\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  padding: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { weekDays, months } from 'constants/calendar';\nimport { useCalendar } from 'hooks';\nimport { GridProps } from 'utils';\nimport { CalendarTile, CalendarNavigation } from '..';\nimport { StyledGrid, StyledDay, StyledDayGrid, StyledCalendar } from './CalendarGrid.css';\n\nconst CalendarGrid = ({ events, month, year, moveDate, handleDayChange }: GridProps) => {\n  const [days] = useCalendar(events, month, year);\n\n  return (\n    <StyledCalendar>\n      <CalendarNavigation navId=\"main\" header={`${months[month]} ${year}`} moveDate={moveDate} />\n      <StyledDayGrid>\n        {weekDays.map((day) => (\n          <StyledDay key={day}>{day}</StyledDay>\n        ))}\n      </StyledDayGrid>\n      <StyledGrid>\n        {days.map(({ id, day, events: eventsArr }) => (\n          <CalendarTile\n            key={id}\n            handleDayChange={() => handleDayChange(`${year}-${month}-${day}`)}\n            colors={eventsArr.map(({ label, _id: idEvent }) =>\n              typeof label === 'object' ? { color: label?.color, id: `${idEvent}${id}` } : {},\n            )}\n            day={day}\n          />\n        ))}\n      </StyledGrid>\n    </StyledCalendar>\n  );\n};\n\nexport default CalendarGrid;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: ${({ theme }) => theme.margin.s};\n`;\n\nexport const StyledButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n`;\n\nexport const StyledTitle = styled.h3`\n  width: 200px;\n  text-align: center;\n  line-height: 100%;\n  margin: 0;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    width: 400px;\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretLeft, faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SIDES, NavProps } from 'utils';\nimport { StyledNavigation, StyledButton, StyledTitle } from './CalendarNavigation.css';\n\nconst CalendarNavigation = ({ header, moveDate, navId }: NavProps) => (\n  <StyledNavigation>\n    <StyledButton data-testid={`moveLeft-${navId}`} onClick={() => moveDate(SIDES.LEFT)}>\n      <FontAwesomeIcon icon={faCaretLeft} />\n    </StyledButton>\n    <StyledTitle data-testid={`dateCalendar-${navId}`}>{header}</StyledTitle>\n    <StyledButton data-testid={`moveRight-${navId}`} onClick={() => moveDate(SIDES.RIGHT)}>\n      <FontAwesomeIcon icon={faCaretRight} />\n    </StyledButton>\n  </StyledNavigation>\n);\n\nexport default CalendarNavigation;\n","const APIurl = process.env.REACT_APP_BACKEND;\n\nconst DASHBOARD = `${APIurl}/`;\nconst USER = `${DASHBOARD}users/`;\nconst EVENTS = `${DASHBOARD}events/`;\nconst LABELS = `${DASHBOARD}labels/`;\n\nconst APIpaths = {\n  LOGIN: `${USER}login/`,\n  REGISTER: `${USER}register/`,\n  LOGOUT: `${USER}logout/`,\n  EVENTS,\n  LABELS,\n};\n\nexport default APIpaths;\n","import APIpaths from 'constants/APIpaths';\n\nexport const getEvents = async (token: string | undefined, from: string, to: string) => {\n  const response = await fetch(`${APIpaths.EVENTS}?from=${from}&to=${to}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n\n  if (response.status === 200) {\n    return response.json();\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const getEventsInDay = async (token: string | undefined, day: string) => {\n  const response = await fetch(`${APIpaths.EVENTS}${day}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n\n  if (response.status === 200) {\n    return response.json();\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const getLabels = async (token: string | undefined) => {\n  const response = await fetch(`${APIpaths.LABELS}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message);\n};\n","import styled from 'styled-components';\n\nexport const StyledCard = styled.div`\n  background-color: ${({ theme }) => theme.colors.tile.background};\n  width: 275px;\n  height: 500px;\n`;\n\nexport const StyledWeekDay = styled.h3`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin: ${({ theme }) => theme.margin.m} 0;\n  text-align: center;\n`;\n","import React from 'react';\nimport { DayCardProps, Event } from 'utils';\nimport { weekDaysFull } from 'constants/calendar';\nimport { useQuery } from 'hooks';\nimport { getEventsInDay } from '../../CalendarPage.api';\nimport { StyledCard, StyledWeekDay } from './DayCard.css';\nimport { Habbit } from '..';\n\nconst DayCard = ({ day, token }: DayCardProps) => {\n  const [year, month, dayNumber] = day.split('-');\n\n  const date = new Date(parseInt(year, 10), parseInt(month, 10), parseInt(dayNumber, 10));\n  const from = `${year}-${month.length !== 2 ? `0${parseInt(month, 10) + 1}` : month}-${\n    dayNumber.length !== 2 ? `0${dayNumber}` : dayNumber\n  }`;\n\n  const [eventsF] = useQuery<Event>([from, token], () => getEventsInDay(token, from));\n\n  let weekDay = date.getDay() - 1;\n\n  if (weekDay === -1) {\n    weekDay = 6;\n  }\n\n  return (\n    <StyledCard>\n      <StyledWeekDay>{`${weekDaysFull[weekDay]}`}</StyledWeekDay>\n      {eventsF.map((event) => (\n        <Habbit key={event._id} habbit={event} />\n      ))}\n    </StyledCard>\n  );\n};\n\nexport default DayCard;\n","import styled from 'styled-components';\n\nexport const StyledHabbit = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 ${({ theme }) => theme.margin.s};\n  border-left: 1px solid ${({ theme }) => theme.colors.tile.border};\n  margin: 0 ${({ theme }) => theme.margin.s};\n  margin-top: ${({ theme }) => theme.margin.xs};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.ml};\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n  margin-top: 0;\n`;\n\nexport const StyledTime = styled.p`\n  color: gray;\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: justify;\n`;\n","import React from 'react';\nimport { Button } from 'components';\nimport { Event } from 'utils';\nimport { StyledHabbit, StyledTime, StyledDescription, StyledTitle } from './Habbit.css';\n\nconst Habbit = ({ habbit }: { habbit: Event }) => {\n  const { title, timeEnd, timeStart, description } = habbit;\n  return (\n    <>\n      <Button size=\"s\" my=\"0.75rem\" noMaxWidth data-testid=\"edit\">\n        Edit habbit\n      </Button>\n      <Button size=\"s\" close noMaxWidth data-testid=\"delete\">\n        X\n      </Button>\n      <StyledHabbit>\n        <StyledTitle>{title}</StyledTitle>\n        <StyledTime>{`${timeStart}-${timeEnd}`}</StyledTime>\n        <StyledDescription>{description}</StyledDescription>\n      </StyledHabbit>\n    </>\n  );\n};\n\nexport default Habbit;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Alert, Button } from 'components';\nimport { useUserContext } from 'context';\nimport { getISODate, months } from 'constants/calendar';\nimport { useQuery, useWindowSize } from 'hooks';\nimport { Label, SIDES } from 'utils';\nimport { Event } from 'utils/types';\nimport { StyledButtonWrapper, StyledCenter } from './CalendarPage.css';\nimport { CalendarGrid, DayCard, CalendarNavigation } from './components';\nimport { getEvents, getLabels } from './CalendarPage.api';\n\n/* eslint-disable */\n\nconst CalendarPage = () => {\n  const [date, setDate] = useState(new Date());\n  const [actualMonth, setActualMonth] = useState(date.getMonth());\n  const [actualYear, setActualYear] = useState(date.getFullYear());\n\n  const from = getISODate(new Date(actualYear, actualMonth, 2));\n  const daysInMonth = 33 - new Date(actualYear, actualMonth, 32).getDate();\n  const to = getISODate(new Date(actualYear, actualMonth, daysInMonth));\n  const { token } = useUserContext();\n  const [events, setEvents] = useState<Event[]>([]);\n  const [width] = useWindowSize();\n\n  const [openCard, setOpenCard] = useState(false);\n  const [day, setDay] = useState(`${actualYear}-${actualMonth}-${date.getDate()}`);\n  const [year, month, dayNumber] = day.split('-');\n\n  const [eventsF, loadingE, errorE] = useQuery<Event>([from, to, token], () =>\n    getEvents(token, from, to),\n  );\n  const [labels, loadingL, errorL] = useQuery<Label>([token], () => getLabels(token));\n\n  useEffect(() => {\n    if (labels.length !== 0) {\n      const mappedResponse: Event[] = eventsF?.map((event: Event) => {\n        const label = labels?.filter((label: Label) => event?.label === label?._id)[0];\n        return { ...event, label };\n      });\n      setEvents(mappedResponse);\n    }\n  }, [eventsF, labels]);\n\n  const moveDate = (side: SIDES) => {\n    if (side === SIDES.LEFT) {\n      if (actualMonth === 0) {\n        setActualMonth(11);\n        setActualYear((prevYear) => prevYear - 1);\n      } else {\n        setActualMonth((prevMonth) => prevMonth + side);\n      }\n    } else {\n      if (actualMonth === 11) {\n        setActualMonth(0);\n        setActualYear((prevYear) => prevYear + 1);\n      } else {\n        setActualMonth((prevMonth) => prevMonth + side);\n      }\n    }\n  };\n\n  const moveDateDay = (side: SIDES) => {\n    const [year, month, dayNumber] = day.split('-');\n    const numericYear = parseInt(year, 10);\n    const numericMonth = parseInt(month, 10);\n    const numericDay = parseInt(dayNumber, 10);\n    const daysInMonth = new Date(numericYear, numericMonth + 1, 0).getDate();\n    if (side === SIDES.RIGHT) {\n      if (numericDay === daysInMonth) {\n        if (numericMonth === 11) {\n          setDay(`${numericYear + 1}-0-1`);\n        } else {\n          setDay(`${numericYear}-${numericMonth + 1}-1`);\n        }\n      } else {\n        setDay(`${numericYear}-${numericMonth}-${numericDay + 1}`);\n      }\n    } else {\n      if (numericDay === 1) {\n        if (numericMonth === 0) {\n          setDay(`${numericYear - 1}-11-31`);\n        } else {\n          const daysInMonth = new Date(numericYear, numericMonth, 0).getDate();\n          setDay(`${numericYear}-${numericMonth - 1}-${daysInMonth}`);\n        }\n      } else {\n        setDay(`${numericYear}-${numericMonth}-${numericDay - 1}`);\n      }\n    }\n  };\n\n  const handleChangeView = (day?: string) => {\n    setOpenCard((prevState) => !prevState);\n    if (day) {\n      setDay(day);\n    }\n  };\n\n  const CalendarGridView = useMemo(() => {\n    return (\n      <>\n        <CalendarGrid\n          events={events}\n          month={actualMonth}\n          moveDate={moveDate}\n          year={actualYear}\n          handleDayChange={handleChangeView}\n        />\n        <Alert loading={loadingE || loadingL} error={errorE || errorL} />\n        <StyledButtonWrapper>\n          <Button size=\"s\" noMaxWidth mt=\"16px\" data-testid=\"addh\">\n            Add habbit\n          </Button>\n          <Button size=\"s\" noMaxWidth mt=\"16px\" my=\"16px\" data-testid=\"addl\">\n            Add label\n          </Button>\n          <Button size=\"s\" noMaxWidth mt=\"16px\" data-testid=\"labell\">\n            Label list\n          </Button>\n        </StyledButtonWrapper>\n      </>\n    );\n  }, [events, actualMonth, actualYear, loadingE, loadingL, errorE, errorL]);\n\n  return (\n    <StyledCenter>\n      {width >= 768 ? (\n        <>\n          {CalendarGridView}\n          <CalendarNavigation\n            navId=\"desktopDay\"\n            header={`${dayNumber} ${months[parseInt(month, 10)]} ${year}`}\n            moveDate={moveDateDay}\n          />\n          <DayCard day={day} token={token} />\n        </>\n      ) : !openCard ? (\n        CalendarGridView\n      ) : (\n        <>\n          <CalendarNavigation\n            navId=\"mobileDay\"\n            header={`${dayNumber} ${months[parseInt(month, 10)]} ${year}`}\n            moveDate={moveDateDay}\n          />\n          <DayCard day={day} token={token} />\n        </>\n      )}\n    </StyledCenter>\n  );\n};\n\nexport default CalendarPage;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  &::last-child {\n    margin-bottom: 0;\n  }\n`;\n","import APIpaths from 'constants/APIpaths';\n\nexport type LoginInputs = {\n  login: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const loginUser = async (data: LoginInputs) => {\n  const response = await fetch(APIpaths.LOGIN, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRestrictedLengthObject } from 'utils';\nimport { StyledWrapper } from './LoginPage.css';\nimport { loginUser, LoginInputs } from './LoginPage.api';\n\nconst LoginPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<LoginInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: LoginInputs) => {\n    setLoading(true);\n    try {\n      const response = await loginUser(data);\n      setLoading(false);\n      user.login(response.token);\n      history.push(paths.CALENDAR);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  return user.token ? (\n    <Redirect to={paths.CALENDAR} />\n  ) : (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" mt=\"16px\" type=\"submit\" data-testid=\"submit\">\n          Log in\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import APIpaths from 'constants/APIpaths';\n\nexport interface RegisterInputs {\n  login: string;\n  password: string;\n  email: string;\n}\n\nexport interface RegisterFormInputs extends RegisterInputs {\n  passwordRepeat: string;\n  [key: string]: string;\n}\n\nexport const registerUser = async (data: RegisterInputs) => {\n  const response = await fetch(APIpaths.REGISTER, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import { Dashboard, LoginPage, CalendarPage, RegisterPage } from 'views';\nimport paths from './paths';\n\nconst { DASHBOARD, CALENDAR, LOGIN, REGISTER } = paths;\n\ninterface Route {\n  link: string;\n  name: string;\n}\n\nexport const routes: Array<Route> = [\n  { link: DASHBOARD, name: 'Home page' },\n  { link: CALENDAR, name: 'Your tracker' },\n  { link: LOGIN, name: 'Login' },\n  { link: REGISTER, name: 'Register' },\n];\n\nconst routesForRouter = [\n  {\n    path: DASHBOARD,\n    Component: Dashboard,\n    exact: true,\n  },\n  {\n    path: CALENDAR,\n    Component: CalendarPage,\n    isPrivate: true,\n  },\n  { path: LOGIN, Component: LoginPage },\n  { path: REGISTER, Component: RegisterPage },\n];\n\nexport default routesForRouter;\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRequiredObject, createRestrictedLengthObject, emailValidation } from 'utils';\nimport { StyledWrapper } from 'views/LoginPage/LoginPage.css';\nimport { registerUser, RegisterFormInputs } from './RegisterPage.api';\n\nconst RegisterPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<RegisterFormInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: RegisterFormInputs) => {\n    if (data.password === data.passwordRepeat) {\n      setLoading(true);\n      try {\n        const response = await registerUser(data);\n        setLoading(false);\n        user.login(response.token);\n        history.push(paths.CALENDAR);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    } else {\n      setError('Passwords must be equal.');\n    }\n  };\n\n  return user.token ? (\n    <Redirect to={paths.CALENDAR} />\n  ) : (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <h2>Create new account</h2>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          id=\"email\"\n          type=\"email\"\n          refVal={register({ ...createRequiredObject('email'), ...emailValidation })}\n          error={errors.email}\n          data-testid=\"email\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Input\n          name=\"passwordRepeat\"\n          label=\"Repeat password\"\n          id=\"passwordRepeat\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('repeat password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.passwordRepeat}\n          data-testid=\"passwordRepeat\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" type=\"submit\" data-testid=\"submit\">\n          Create account\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\ninterface ClicableProps {\n  open: boolean;\n}\n\ninterface LinkProps {\n  onClick: Function;\n  open: boolean;\n}\n\nexport const StyledOpenNav = styled.nav<ClicableProps>`\n  transform: ${({ open }) => `scale(${open ? '1' : '0'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `opacity ${theme.time.medium}ms`};\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  position: fixed;\n  background-color: ${({ theme }) => theme.colors.nav.background};\n  z-index: ${({ theme }) => theme.zIndex.medium};\n`;\n\nexport const StyledContainner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const StyledLink = styled(Link)<LinkProps>`\n  color: ${({ theme }) => theme.colors.text.nav};\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.m};\n  transform: ${({ open }) => `scale(${open ? '1' : '2'}) translateY(${open ? '0px' : '-50px'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme, open }) => (open ? `${theme.time.medium}ms` : '0')};\n`;\n","import React from 'react';\nimport { routes } from 'constants/routes';\nimport { StyledOpenNav, StyledLink, StyledContainner } from './OpenedNavigation.css';\n\ninterface OpenNavProps {\n  open: boolean;\n  handleClose: Function;\n}\n\nconst OpenedNavigation = ({ open, handleClose }: OpenNavProps) => (\n  <StyledOpenNav open={open}>\n    <StyledContainner>\n      {routes.map(({ name, link }) => (\n        <StyledLink open={open} to={link} key={name} onClick={() => handleClose()}>\n          {name}\n        </StyledLink>\n      ))}\n    </StyledContainner>\n  </StyledOpenNav>\n);\n\nexport default OpenedNavigation;\n","import React, { useState } from 'react';\nimport {\n  StyledNavButton,\n  StyledTLDot,\n  StyledTRDot,\n  StyledBLDot,\n  StyledBRDot,\n  StyledLine,\n  StyledRotatedLine,\n} from './Navigation.css';\nimport { OpenedNavigation } from './components';\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <StyledNavButton\n        open={open}\n        data-testid=\"navButton\"\n        onClick={() => setOpen((prevState) => !prevState)}\n      >\n        <StyledTLDot open={open} />\n        <StyledTRDot open={open} />\n        <StyledBLDot open={open} />\n        <StyledBRDot open={open} />\n        <StyledLine open={open} />\n        <StyledRotatedLine open={open} />\n      </StyledNavButton>\n      <OpenedNavigation open={open} handleClose={() => setOpen(false)} />\n    </>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\ninterface ButtonProps {\n  size?: string;\n  noMaxWidth?: boolean;\n  as?: any;\n  mt?: string;\n  my?: string;\n  close?: boolean;\n}\n\nconst Button = styled.button<ButtonProps>`\n  color: ${({ theme, close }) => (close ? theme.colors.common.black : theme.colors.button.text)};\n  background-color: ${({ theme, close }) =>\n    close ? theme.colors.error.main : theme.colors.button.background};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  padding: ${({ theme, size }) => (size ? theme.margin[size] : theme.margin.s)};\n  font-size: ${({ theme, size }) => (size ? theme.font.sizes[size] : theme.font.sizes.s)};\n  min-width: ${({ noMaxWidth }) => (noMaxWidth ? 'none' : '150px')};\n  display: inline-block;\n  text-align: center;\n  margin-top: ${({ mt }) => mt || 0};\n  margin-left: ${({ my }) => my || 0};\n  margin-right: ${({ my }) => my || 0};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLogo = styled.header`\n  position: fixed;\n  top: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  text-align: center;\n  height: ${({ theme }) => theme.sizes.nav};\n  line-height: ${({ theme }) => theme.sizes.nav};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.xs};\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.common.black};\n  text-decoration: none;\n`;\n","import React from 'react';\nimport paths from 'constants/paths';\nimport { StyledLogo, StyledLink } from './Logo.css';\n\nconst Logo = () => (\n  <StyledLogo>\n    <StyledLink to={paths.DASHBOARD}>\n      <h1>Habbit tracker</h1>\n    </StyledLink>\n  </StyledLogo>\n);\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.main`\n  min-height: 100vh;\n  width: 100%;\n`;\n\nexport default StyledContainer;\n","import styled from 'styled-components';\n\ntype InputProps = {\n  error: boolean;\n};\n\nexport const StyledInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  max-width: 300px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.s};\n`;\n\nexport const StyledInput = styled.input<InputProps>`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  width: 100%;\n  max-width: 300px;\n  border: ${({ error, theme }) => error && `1px solid ${theme.colors.error.main}`};\n  &:focus {\n    outline: thin dotted;\n  }\n`;\n\nexport const StyledMessage = styled.p`\n  margin-top: ${({ theme }) => theme.margin.xs};\n  color: ${({ theme }) => theme.colors.error.main};\n  text-align: justify;\n`;\n","/* eslint-disable react/require-default-props */\nimport React, { InputHTMLAttributes } from 'react';\nimport { FieldError } from 'react-hook-form';\nimport { StyledInputWrapper, StyledInput, StyledLabel, StyledMessage } from './Input.css';\n\ninterface InputProps {\n  label: string;\n  refVal: any;\n  error?: FieldError;\n  rest?: Rest;\n}\n\ntype Rest = {\n  [prop: string]: string;\n};\n\nconst Input = ({\n  label,\n  id,\n  refVal,\n  error,\n  type = 'text',\n  ...rest\n}: InputProps & InputHTMLAttributes<HTMLInputElement>) => (\n  <StyledInputWrapper>\n    <StyledLabel htmlFor={id}>{label}</StyledLabel>\n    <StyledInput error={!!error} id={id} type={type} {...rest} ref={refVal} />\n    {error && <StyledMessage>{error?.message}</StyledMessage>}\n  </StyledInputWrapper>\n);\n\nexport default Input;\n","import styled from 'styled-components';\nimport { AlertTypes } from 'constants/enums';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: ${({ theme }) => theme.margin.s};\n`;\n\ntype AlertProps = { type: AlertTypes };\n\nconst StyledAlert = styled.div<AlertProps>`\n  border: ${({ type, theme }) => `1px solid ${theme.colors[type].border}`};\n  background-color: ${({ type, theme }) => `${theme.colors[type].main}`};\n  color: ${({ type, theme }) => `${theme.colors[type].text}`};\n  border-radius: 5px;\n  padding: ${({ theme }) => theme.margin.xs};\n  font-size: ${({ theme }) => theme.font.sizes.s};\n`;\n\nexport { StyledAlert, StyledWrapper };\n","import React from 'react';\nimport { AlertTypes } from 'constants/enums';\nimport { StyledAlert, StyledWrapper } from './Alert.css';\n\ntype AlertProps = {\n  children?: string;\n  type?: AlertTypes;\n};\n\nconst Alert = ({ children = 'Ładowanie...', type = AlertTypes.ERROR }: AlertProps) => (\n  <StyledWrapper>\n    <StyledAlert data-testid=\"alert\" type={type}>\n      {children}\n    </StyledAlert>\n  </StyledWrapper>\n);\n\ntype MessageProps = {\n  error: string;\n  loading: boolean;\n  rest?: { [prop: string]: string };\n};\n\nconst AlertMessage = ({ error, loading, ...rest }: MessageProps) =>\n  error ? (\n    <Alert {...rest}>{error}</Alert>\n  ) : loading ? (\n    <Alert {...rest} type={AlertTypes.LOADING} />\n  ) : null;\n\nexport default AlertMessage;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        color: ${({ theme }) => theme.colors.text};\n        background-color: ${({ theme }) => theme.colors.body};\n        font-family: 'Roboto', sans-serif;\n        overflow-x: hidden;\n    }\n    * {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider, UserProvider } from 'context';\nimport { Navigation, Logo } from 'components';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport { Router } from '..';\n\nconst App = () => (\n  <ThemeProvider>\n    <UserProvider>\n      <GlobalStyle />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Logo />\n        <Navigation />\n        <Router />\n      </HashRouter>\n    </UserProvider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport { useUserContext } from 'context';\nimport { Redirect, Route } from 'react-router-dom';\nimport paths from 'constants/paths';\n\ntype PrivateRouteProps = {\n  path: string;\n  children: any;\n};\n\nconst PrivateRoute = ({ ...rest }: PrivateRouteProps) => {\n  const { token } = useUserContext();\n  return token ? <Route {...rest} /> : <Redirect to={paths.LOGIN} />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from 'constants/routes';\nimport PrivateRoute from 'root/PrivateRoute';\n\nconst Router = () => (\n  <Switch>\n    {routes.map(({ path, Component, isPrivate }) =>\n      !isPrivate ? (\n        <Route path={path} exact key={path}>\n          <Component />\n        </Route>\n      ) : (\n        <PrivateRoute path={path} key={path}>\n          <Component />\n        </PrivateRoute>\n      ),\n    )}\n  </Switch>\n);\n\nexport default Router;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/reset.css';\nimport { App } from 'root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}