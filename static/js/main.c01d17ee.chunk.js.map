{"version":3,"sources":["constants/enums.ts","styles/themes/core.ts","styles/themes/default.ts","context/ThemeContext/ThemeContext.tsx","context/UserContext/UserContext.tsx","components/Navigation/Navigation.css.ts","constants/paths.ts","styles/styledElements.css.ts","views/Dashboard/Dashboard.css.ts","views/Dashboard/Dashboard.tsx","constants/calendar.ts","views/CalendarPage/CalendarPage.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.tsx","views/CalendarPage/components/CalendarGrid/CalendarGrid.css.ts","views/CalendarPage/components/CalendarGrid/CalendarGrid.tsx","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.css.ts","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.tsx","constants/APIpaths.ts","views/CalendarPage/CalendarPage.api.ts","views/CalendarPage/CalendarPage.tsx","utils/validators.ts","views/LoginPage/LoginPage.css.ts","views/LoginPage/LoginPage.api.ts","views/LoginPage/LoginPage.tsx","views/RegisterPage/RegisterPage.api.ts","constants/routes.ts","views/RegisterPage/RegisterPage.tsx","components/Navigation/components/OpenedNavigation/OpenedNavigation.css.ts","components/Navigation/components/OpenedNavigation/OpenedNavigation.tsx","components/Navigation/Navigation.tsx","components/Button/Button.ts","components/Logo/Logo.css.ts","components/Logo/Logo.tsx","components/Container/Container.tsx","components/Input/Input.css.ts","components/Input/Input.tsx","components/Alert/Alert.css.ts","components/Alert/Alert.tsx","styles/GlobalStyle.js","root/App/App.tsx","root/Router/Router.tsx","reportWebVitals.ts","index.tsx"],"names":["AlertTypes","font","base","family","light","regular","medium","bold","sizes","xs","s","sm","m","ml","l","core","colors","common","black","white","margin","time","short","long","zIndex","max","low","chooseFS","fontSize","isValidSize","Object","keys","find","fs","undefined","nav","dot","media","phone","tablet","desktop","lightBlue","defaultTheme","gridTile","size","body","calendar","navigation","text","primary","secondary","button","background","topLeft","topRight","bottomLeft","bottomRight","tile","backgroundActive","modalBackground","error","main","border","loading","ThemeContext","createContext","Provider","ThemeProvider","children","value","theme","cookies","Cookies","UserContext","token","login","logout","setCookieDate","date","Date","setDate","getDate","useUserContext","useContext","UserProvider","useState","get","setToken","user","newToken","set","path","expires","remove","StyledNavButton","styled","open","StyledDot","div","StyledTLDot","StyledTRDot","StyledBLDot","StyledBRDot","StyledLine","StyledRotatedLine","DASHBOARD","CALENDAR","LOGIN","REGISTER","FlexColCenter","section","StyledWrapper","StyledContentWrapper","StyledHeader","h2","StyledDescription","p","StyledSeparator","Dashboard","Container","as","Link","to","paths","weekDays","getISODate","toISOString","match","StyledCenter","StyledTile","StyledCircle","alone","color","position","StyledDay","generateCircles","edge","length","shift","map","CalendarTile","day","StyledGrid","StyledDayGrid","CalendarGrid","events","_id","StyledNavigation","StyledButton","StyledTitle","h3","CalendarNavigation","icon","faCaretLeft","faCaretRight","process","USER","EVENTS","LABELS","APIpaths","LOGOUT","getEvents","from","a","fetch","headers","Authorization","method","response","status","json","Error","getLabels","CalendarPage","getMonth","actualMonth","getFullYear","actualYear","setEvents","setLabels","useEffect","daysInMonth","console","log","fetchEvents","event","label","filter","createRequiredObject","name","required","emailValidation","pattern","message","createRestrictedLengthObject","minLength","maxLength","loginUser","data","JSON","stringify","LoginPage","setError","setLoading","useForm","register","handleSubmit","errors","history","useHistory","onSubmit","push","noValidate","id","refVal","data-testid","type","autoComplete","password","registerUser","routes","link","routesForRouter","Component","exact","passwordRepeat","email","StyledOpenNav","StyledContainner","StyledLink","OpenedNavigation","handleClose","onClick","Navigation","setOpen","prevState","Button","noMaxWidth","StyledLogo","header","Logo","StyledContainer","StyledInputWrapper","StyledLabel","StyledInput","input","StyledMessage","Input","rest","htmlFor","ref","StyledAlert","Alert","ERROR","AlertMessage","LOADING","GlobalStyle","createGlobalStyle","App","basename","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c01d17ee.chunk.js","sourcesContent":["export enum AlertTypes {\n  ERROR = 'error',\n  LOADING = 'loading',\n}\n","import { CoreTheme } from 'styled-components';\nimport { fontInterface } from 'styles/styled.d';\n\nconst font: fontInterface = {\n  base: '10px',\n  family: 'Arial',\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  sizes: {\n    xs: '0.75rem',\n    s: '1rem',\n    sm: '1.25rem',\n    m: '1.5rem',\n    ml: '2rem',\n    l: '3rem',\n  },\n};\n\nconst chooseFS = (fontSize: string) => {\n  const { sizes } = font;\n  const isValidSize: string | undefined = Object.keys(sizes).find((fs) => fs === fontSize);\n  if (isValidSize !== undefined) {\n    return sizes[isValidSize];\n  }\n  return sizes.xs;\n};\n\nconst core: CoreTheme = {\n  colors: {\n    common: {\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n  },\n  font,\n  margin: {\n    xs: '0.5rem',\n    s: '0.75rem',\n    sm: '1rem',\n    m: '1.25rem',\n    ml: '1.5rem',\n    l: '1.75rem',\n  },\n  time: {\n    short: 100,\n    medium: 300,\n    long: 500,\n  },\n  zIndex: {\n    max: 1000,\n    medium: 500,\n    low: 100,\n  },\n  chooseFS,\n  sizes: {\n    nav: '50px',\n    dot: '20px',\n  },\n  media: {\n    phone: { s: '320px' },\n    tablet: { s: '768px', l: '1024px' },\n    desktop: { s: '1366px', l: '1920px' },\n  },\n};\n\nexport default core;\n","import core from 'styles/themes/core';\nimport { DefaultTheme } from 'styled-components';\n\nconst lightBlue = '#AFE9FF';\n\nconst defaultTheme: DefaultTheme = {\n  ...core,\n  gridTile: {\n    size: 50,\n  },\n  colors: {\n    ...core.colors,\n    body: '#F3FFF2',\n    calendar: {\n      navigation: '#EDEFFF',\n    },\n    text: {\n      primary: core.colors.common.black,\n      secondary: '#808080',\n      nav: '#A5A5A5',\n    },\n    button: {\n      background: '#FFC136',\n      text: '#fff',\n    },\n    nav: {\n      topLeft: '#B7FF96',\n      topRight: '#89FFED',\n      bottomLeft: '#FDF194',\n      bottomRight: '#FFADFC',\n      background: '#A4FF9D',\n      button: '#FFED67',\n    },\n    tile: {\n      background: '#FFFCAF',\n      backgroundActive: lightBlue,\n    },\n    modalBackground: lightBlue,\n    error: {\n      main: '#FF9191',\n      border: '#730000',\n      text: '#730000',\n    },\n    loading: {\n      main: '#a6fff9',\n      border: '#1b968e',\n      text: '#1b968e',\n    },\n    border: '#707070',\n  },\n};\n\nexport default defaultTheme;\n","import React, { createContext, useContext } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\n\nimport { defaultTheme } from 'styles/themes';\n\nconst ThemeContext = createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\n\ntype ThemeProps = {\n  children: Object;\n};\n\nconst ThemeProvider = ({ children }: ThemeProps) => (\n  <Provider value={defaultTheme}>\n    <SCThemeProvider theme={defaultTheme}>{children}</SCThemeProvider>\n  </Provider>\n);\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React, { createContext, useContext, useState } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\ninterface UserProviderProps {\n  token: string | undefined;\n  login: Function;\n  logout: Function;\n}\n\nconst UserContext = createContext<UserProviderProps>({\n  token: undefined,\n  login: () => {},\n  logout: () => {},\n});\n\nconst { Provider } = UserContext;\n\ntype UserProps = {\n  children: Object;\n};\n\nconst setCookieDate = () => {\n  const date = new Date();\n  date.setDate(date.getDate() + 14);\n  return date;\n};\n\nconst UserProvider = ({ children }: UserProps) => {\n  const [token, setToken] = useState<string | undefined>(cookies.get('token'));\n  const user: UserProviderProps = {\n    token,\n    login: (newToken: string) => {\n      cookies.set('token', newToken, {\n        path: '/',\n        expires: setCookieDate(),\n      });\n      setToken(newToken);\n    },\n    logout: () => {\n      cookies.remove('token', { path: '/' });\n      setToken(undefined);\n    },\n  };\n  return <Provider value={user}>{children}</Provider>;\n};\n\nexport const useUserContext = () => useContext(UserContext);\n\nexport default UserProvider;\n","import styled from 'styled-components';\n// import { getKey } from 'utils/objectsFunctions';\n\n// const topLeft = css`\n//   top: 0;\n//   left: 0;\n// `;\n\n// const topRight = css`\n//   top: 0;\n//   right: 0;\n// `;\n\n// const bottomLeft = css`\n//   bottom: 0;\n//   left: 0;\n// `;\n\n// const bottomRight = css`\n//   bottom: 0;\n//   right: 0;\n// `;\n\n// interface Position {\n//   topLeft: FlattenSimpleInterpolation;\n//   topRight: FlattenSimpleInterpolation;\n//   bottomLeft: FlattenSimpleInterpolation;\n//   bottomRight: FlattenSimpleInterpolation;\n//   [key: string]: FlattenSimpleInterpolation;\n// }\n\n// const positionObject: Position = { topLeft, topRight, bottomLeft, bottomRight };\n\n// interface DotProps {\n//   topLeft?: boolean;\n//   topRight?: boolean;\n//   bottomLeft?: boolean;\n//   bottomRight?: boolean;\n//   [key: string]: boolean | undefined;\n// }\n\n/* background-color: ${({ theme, ...rest }) => theme.colors.nav[getKey(rest)]};\n  ${({ theme, ...rest }) => positionObject[getKey(rest)]} */\n\ninterface ClicableProps {\n  open: boolean;\n}\n\nexport const StyledNavButton = styled.button<ClicableProps>`\n  position: fixed;\n  height: ${({ theme }) => theme.sizes.nav};\n  width: ${({ theme }) => theme.sizes.nav};\n  top: ${({ theme }) => theme.margin.sm};\n  background-color: transparent;\n  border: none;\n  right: ${({ theme }) => theme.margin.sm};\n  padding: 0;\n  ${({ open }) => open && `transform: rotate(-45deg);`}\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StyledDot = styled.div<ClicableProps>`\n  width: ${({ theme }) => theme.sizes.dot};\n  height: ${({ theme }) => theme.sizes.dot};\n  border-radius: 50%;\n  position: absolute;\n  opacity: ${({ open }) => (open ? '0' : '1')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledTLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topLeft};\n  top: 0;\n  left: 0;\n`;\n\nexport const StyledTRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topRight};\n  top: 0;\n  right: 0;\n`;\n\nexport const StyledBLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomLeft};\n  bottom: 0;\n  left: 0;\n`;\n\nexport const StyledBRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomRight};\n  bottom: 0;\n  right: 0;\n`;\n\nexport const StyledLine = styled.div<ClicableProps>`\n  position: absolute;\n  height: 3px;\n  width: ${({ theme }) => theme.sizes.nav};\n  background-color: ${({ theme }) => theme.colors.error.main};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledRotatedLine = styled(StyledLine)<ClicableProps>`\n  transform: rotate(90deg);\n  top: 50%;\n`;\n","const path = {\n  DASHBOARD: '/',\n  CALENDAR: '/calendar',\n  LOGIN: '/login',\n  REGISTER: '/register',\n};\n\nexport default path;\n","import styled from 'styled-components';\n\nexport const FlexColCenter = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  padding: 0 1rem;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n`;\n\nexport const StyledContentWrapper = styled(FlexColCenter)`\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    margin-right: ${({ theme }) => theme.margin.l};\n  }\n`;\n\nexport const StyledHeader = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.l};\n  margin: ${({ theme }) => theme.margin.sm} 0;\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n\nexport const StyledDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: justify;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.l};\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.sm};\n  }\n`;\n\nexport const StyledSeparator = styled.p`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  margin: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'components';\nimport paths from 'constants/paths';\nimport { FlexColCenter } from 'styles';\nimport {\n  StyledHeader,\n  StyledWrapper,\n  StyledDescription,\n  StyledSeparator,\n  StyledContentWrapper,\n} from './Dashboard.css';\n\nconst Dashboard = () => (\n  <Container>\n    <StyledWrapper>\n      <StyledContentWrapper>\n        <StyledHeader>Habbit tracker</StyledHeader>\n        <StyledDescription>\n          Track your progress in very simple and personalized app\n        </StyledDescription>\n      </StyledContentWrapper>\n      <FlexColCenter>\n        <Button as={Link} to={paths.REGISTER} size=\"m\">\n          Create account for free\n        </Button>\n        <StyledSeparator>or</StyledSeparator>\n        <Button as={Link} to={paths.LOGIN} size=\"m\">\n          Log in\n        </Button>\n      </FlexColCenter>\n    </StyledWrapper>\n  </Container>\n);\n\nexport default Dashboard;\n","export const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nexport const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'Juny',\n  'Juni',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport type Event = {\n  _id: string;\n  daysOfWeek: number[];\n  title: string;\n  timeStart?: string;\n  timeEnd?: string;\n  dateStart: string;\n  dateEnd: string;\n  label?: string;\n  description?: string;\n  userId: string;\n};\n\nexport type Label = {\n  _id: string;\n  title: string;\n  color: string;\n};\n\nexport const getISODate = (date: Date) => date.toISOString().match(/\\d{4}-\\d{2}-\\d{2}/)![0];\n","import styled from 'styled-components';\n\nexport const StyledCenter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTile = styled.div`\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  height: ${({ theme }) => `${theme.gridTile.size}px`};\n  position: relative;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.common.white};\n`;\n\ntype CirlcleProps = {\n  size: number;\n  alone: boolean;\n  position: number;\n  color: string;\n};\n\nexport const StyledCircle = styled.div<CirlcleProps>`\n  position: absolute;\n  border-radius: 50%;\n  width: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  height: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  background-color: ${({ color }) => color};\n  top: ${({ position }) => `${position}px`};\n  left: ${({ position }) => `${position}px`};\n  ${({ alone }) => alone && 'transform: translate(-50%,-50%);top: 50%;left:50%'}\n`;\n\nexport const StyledDay = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: ${({ theme }) => theme.zIndex.low};\n`;\n","import React from 'react';\nimport { useThemeContext } from 'context';\nimport { StyledCircle, StyledTile, StyledDay } from './CalendarTile.css';\n\nconst generateCircles = (colors: string[], edge: number) => {\n  const size = (edge * (1.3 + (colors.length - 2) * 0.1)) / colors.length;\n  const shift = (edge - size) / (colors.length - 1);\n  let position = -shift;\n  return colors.map((color) => {\n    position += shift;\n    return (\n      <StyledCircle\n        key={color}\n        position={position}\n        alone={colors.length === 1}\n        color={color}\n        size={size}\n      />\n    );\n  });\n};\n\ntype TileProps = {\n  colors: string[];\n  day: number;\n};\n\nconst CalendarTile = ({ colors, day }: TileProps) => {\n  const {\n    gridTile: { size },\n  } = useThemeContext();\n\n  return (\n    <StyledTile>\n      {generateCircles(colors, size)}\n      <StyledDay>{day}</StyledDay>\n    </StyledTile>\n  );\n};\n\nexport default CalendarTile;\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(0, 1fr));\n  grid-template-rows: auto;\n  max-width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-top: none;\n`;\n\nexport const StyledDayGrid = styled(StyledGrid)`\n  background-color: ${({ theme }) => theme.colors.calendar.navigation};\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n  border-bottom: none;\n`;\n\nexport const StyledDay = styled.div`\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  padding: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { weekDays, Event } from 'constants/calendar';\nimport { CalendarTile, CalendarNavigation } from '..';\nimport { StyledGrid, StyledDay, StyledDayGrid } from './CalendarGrid.css';\n\ntype GridProps = {\n  events: Event[];\n};\n\nconst CalendarGrid = ({ events }: GridProps) => (\n  <>\n    <CalendarNavigation />\n    <StyledDayGrid>\n      {weekDays.map((day) => (\n        <StyledDay key={day}>{day}</StyledDay>\n      ))}\n    </StyledDayGrid>\n    <StyledGrid>\n      {events.map(({ _id }) => (\n        <CalendarTile key={_id} colors={['#fff']} day={1} />\n      ))}\n    </StyledGrid>\n  </>\n);\n\nexport default CalendarGrid;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n`;\n\nexport const StyledTitle = styled.h3`\n  width: 200px;\n  text-align: center;\n  line-height: 100%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretLeft, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { StyledNavigation, StyledButton, StyledTitle } from './CalendarNavigation.css';\n\nconst CalendarNavigation = () => (\n  <StyledNavigation>\n    <StyledButton>\n      <FontAwesomeIcon icon={faCaretLeft} />\n    </StyledButton>\n    <StyledTitle>Marzec 2021</StyledTitle>\n    <StyledButton>\n      <FontAwesomeIcon icon={faCaretRight} />\n    </StyledButton>\n  </StyledNavigation>\n);\n\nexport default CalendarNavigation;\n","const APIurl = process.env.REACT_APP_BACKEND;\n\nconst DASHBOARD = `${APIurl}/`;\nconst USER = `${DASHBOARD}users/`;\nconst EVENTS = `${DASHBOARD}events/`;\nconst LABELS = `${DASHBOARD}labels/`;\n\nconst APIpaths = {\n  LOGIN: `${USER}login/`,\n  REGISTER: `${USER}register/`,\n  LOGOUT: `${USER}logout/`,\n  EVENTS,\n  LABELS,\n};\n\nexport default APIpaths;\n","import APIpaths from 'constants/APIpaths';\n\nexport const getEvents = async (token: string | undefined, from: string, to: string) => {\n  const response = await fetch(`${APIpaths.EVENTS}?from=${from}&to=${to}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw new Error('Something went wrong.');\n};\n\nexport const getLabels = async (token: string | undefined) => {\n  const response = await fetch(`${APIpaths.LABELS}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw new Error('Something went wrong.');\n};\n","import React, { useEffect, useState } from 'react';\nimport { useUserContext } from 'context';\nimport { getISODate, Event, Label } from 'constants/calendar';\nimport { StyledCenter } from './CalendarPage.css';\nimport { CalendarGrid } from './components';\nimport { getEvents, getLabels } from './CalendarPage.api';\n\n/* eslint-disable */\n\nconst CalendarPage = () => {\n  const [date, setDate] = useState(new Date());\n  const [actualMonth, setActualMonth] = useState(date.getMonth());\n  const [actualYear, setActualYear] = useState(date.getFullYear());\n  const [events, setEvents] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const { token } = useUserContext();\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const from = getISODate(new Date(actualYear, actualMonth, 2));\n        const daysInMonth = 33 - new Date(actualYear, actualMonth, 32).getDate();\n        const to = getISODate(new Date(actualYear, actualMonth, daysInMonth));\n        const response = await getEvents(token, from, to);\n        setEvents(response);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await getLabels(token);\n        setLabels(response);\n        const mappedResponse = response.map((event: Event) => {\n          const label = response.filter((label: Label) => event.label === label._id)[0];\n          return { ...event, label };\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchEvents();\n  }, []);\n  console.log(events);\n  return (\n    <StyledCenter>\n      <CalendarGrid events={events} />\n    </StyledCenter>\n  );\n};\n\nexport default CalendarPage;\n","export const createRequiredObject = (name: string) => ({\n  required: `Field ${name} is required.`,\n});\n\nexport const validatePattern = (pattern: RegExp) => ({\n  pattern: {\n    value: pattern,\n    message: 'Incorrect characters.',\n  },\n});\n\nexport const emailValidation = validatePattern(\n  // eslint-disable-next-line no-control-regex\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n);\n\nexport const createRestrictedLengthObject = (name: string) => ({\n  ...createRequiredObject(name),\n  minLength: {\n    value: 6,\n    message: `Field ${name} must have at least 6 characters.`,\n  },\n  maxLength: {\n    value: 30,\n    message: `Field ${name} must have maximum 30 characters.`,\n  },\n});\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n`;\n","import APIpaths from 'constants/APIpaths';\n\nexport type LoginInputs = {\n  login: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const loginUser = async (data: LoginInputs) => {\n  const response = await fetch(APIpaths.LOGIN, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw new Error('Something went wrong.');\n};\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRestrictedLengthObject } from 'utils';\nimport { StyledWrapper } from './LoginPage.css';\nimport { loginUser, LoginInputs } from './LoginPage.api';\n\nconst LoginPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<LoginInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: LoginInputs) => {\n    setLoading(true);\n    try {\n      const response = await loginUser(data);\n      setLoading(false);\n      user.login(response.token);\n      history.push(paths.CALENDAR);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" type=\"submit\" data-testid=\"submit\">\n          Log in\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import APIpaths from 'constants/APIpaths';\n\nexport interface RegisterInputs {\n  login: string;\n  password: string;\n  email: string;\n}\n\nexport interface RegisterFormInputs extends RegisterInputs {\n  passwordRepeat: string;\n  [key: string]: string;\n}\n\nexport const registerUser = async (data: RegisterInputs) => {\n  const response = await fetch(APIpaths.REGISTER, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  throw new Error('Something went wrong.');\n};\n","import { Dashboard, LoginPage, CalendarPage, RegisterPage } from 'views';\nimport paths from './paths';\n\nconst { DASHBOARD, CALENDAR, LOGIN, REGISTER } = paths;\n\ninterface Route {\n  link: string;\n  name: string;\n}\n\nexport const routes: Array<Route> = [\n  { link: DASHBOARD, name: 'Home page' },\n  { link: CALENDAR, name: 'Your tracker' },\n  { link: LOGIN, name: 'Login' },\n  { link: REGISTER, name: 'Register' },\n];\n\nconst routesForRouter = [\n  {\n    path: DASHBOARD,\n    Component: Dashboard,\n    exact: true,\n  },\n  {\n    path: CALENDAR,\n    Component: CalendarPage,\n  },\n  { path: LOGIN, Component: LoginPage },\n  { path: REGISTER, Component: RegisterPage },\n];\n\nexport default routesForRouter;\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRequiredObject, createRestrictedLengthObject, emailValidation } from 'utils';\nimport { StyledWrapper } from 'views/LoginPage/LoginPage.css';\nimport { registerUser, RegisterFormInputs } from './RegisterPage.api';\n\nconst RegisterPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<RegisterFormInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: RegisterFormInputs) => {\n    if (data.password === data.passwordRepeat) {\n      setLoading(true);\n      try {\n        const response = await registerUser(data);\n        setLoading(false);\n        user.login(response.token);\n        history.push(paths.CALENDAR);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    } else {\n      setError('Passwords must be equal.');\n    }\n  };\n\n  return (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <h2>Create new account</h2>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          id=\"email\"\n          type=\"email\"\n          refVal={register({ ...createRequiredObject('email'), ...emailValidation })}\n          error={errors.email}\n          data-testid=\"email\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Input\n          name=\"passwordRepeat\"\n          label=\"Repeat password\"\n          id=\"passwordRepeat\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('repeat password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.passwordRepeat}\n          data-testid=\"passwordRepeat\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" type=\"submit\" data-testid=\"submit\">\n          Create account\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\ninterface ClicableProps {\n  open: boolean;\n}\n\ninterface LinkProps {\n  onClick: Function;\n  open: boolean;\n}\n\nexport const StyledOpenNav = styled.nav<ClicableProps>`\n  transform: ${({ open }) => `scale(${open ? '1' : '0'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `opacity ${theme.time.medium}ms`};\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  position: fixed;\n  background-color: ${({ theme }) => theme.colors.nav.background};\n  z-index: ${({ theme }) => theme.zIndex.medium};\n`;\n\nexport const StyledContainner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const StyledLink = styled(Link)<LinkProps>`\n  color: ${({ theme }) => theme.colors.text.nav};\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.m};\n  transform: ${({ open }) => `scale(${open ? '1' : '2'}) translateY(${open ? '0px' : '-50px'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme, open }) => (open ? `${theme.time.medium}ms` : '0')};\n`;\n","import React from 'react';\nimport { routes } from 'constants/routes';\nimport { StyledOpenNav, StyledLink, StyledContainner } from './OpenedNavigation.css';\n\ninterface OpenNavProps {\n  open: boolean;\n  handleClose: Function;\n}\n\nconst OpenedNavigation = ({ open, handleClose }: OpenNavProps) => (\n  <StyledOpenNav open={open}>\n    <StyledContainner>\n      {routes.map(({ name, link }) => (\n        <StyledLink open={open} to={link} key={name} onClick={() => handleClose()}>\n          {name}\n        </StyledLink>\n      ))}\n    </StyledContainner>\n  </StyledOpenNav>\n);\n\nexport default OpenedNavigation;\n","import React, { useState } from 'react';\nimport {\n  StyledNavButton,\n  StyledTLDot,\n  StyledTRDot,\n  StyledBLDot,\n  StyledBRDot,\n  StyledLine,\n  StyledRotatedLine,\n} from './Navigation.css';\nimport { OpenedNavigation } from './components';\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <StyledNavButton\n        open={open}\n        data-testid=\"navButton\"\n        onClick={() => setOpen((prevState) => !prevState)}\n      >\n        <StyledTLDot open={open} />\n        <StyledTRDot open={open} />\n        <StyledBLDot open={open} />\n        <StyledBRDot open={open} />\n        <StyledLine open={open} />\n        <StyledRotatedLine open={open} />\n      </StyledNavButton>\n      <OpenedNavigation open={open} handleClose={() => setOpen(false)} />\n    </>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\ninterface ButtonProps {\n  size?: string;\n  noMaxWidth?: boolean;\n  as?: any;\n}\n\nconst Button = styled.button<ButtonProps>`\n  color: ${({ theme }) => theme.colors.button.text};\n  background-color: ${({ theme }) => theme.colors.button.background};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  padding: ${({ theme, size }) => (size ? theme.margin[size] : theme.margin.s)};\n  font-size: ${({ theme, size }) => (size ? theme.font.sizes[size] : theme.font.sizes.s)};\n  min-width: ${({ noMaxWidth }) => (noMaxWidth ? 'none' : '150px')};\n  display: inline-block;\n  text-align: center;\n`;\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLogo = styled.header`\n  position: fixed;\n  top: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  text-align: center;\n  height: ${({ theme }) => theme.sizes.nav};\n  line-height: ${({ theme }) => theme.sizes.nav};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.xs};\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.common.black};\n  text-decoration: none;\n`;\n","import React from 'react';\nimport paths from 'constants/paths';\nimport { StyledLogo, StyledLink } from './Logo.css';\n\nconst Logo = () => (\n  <StyledLogo>\n    <StyledLink to={paths.DASHBOARD}>\n      <h1>Habbit tracker</h1>\n    </StyledLink>\n  </StyledLogo>\n);\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.main`\n  min-height: 100vh;\n  width: 100%;\n`;\n\nexport default StyledContainer;\n","import styled from 'styled-components';\n\ntype InputProps = {\n  error: boolean;\n};\n\nexport const StyledInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  max-width: 300px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.s};\n`;\n\nexport const StyledInput = styled.input<InputProps>`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  width: 100%;\n  max-width: 300px;\n  border: ${({ error, theme }) => error && `1px solid ${theme.colors.error.main}`};\n  &:focus {\n    outline: thin dotted;\n  }\n`;\n\nexport const StyledMessage = styled.p`\n  margin-top: ${({ theme }) => theme.margin.xs};\n  color: ${({ theme }) => theme.colors.error.main};\n  text-align: justify;\n`;\n","/* eslint-disable react/require-default-props */\nimport React, { InputHTMLAttributes } from 'react';\nimport { FieldError } from 'react-hook-form';\nimport { StyledInputWrapper, StyledInput, StyledLabel, StyledMessage } from './Input.css';\n\ninterface InputProps {\n  label: string;\n  refVal: any;\n  error?: FieldError;\n  rest?: Rest;\n}\n\ntype Rest = {\n  [prop: string]: string;\n};\n\nconst Input = ({\n  label,\n  id,\n  refVal,\n  error,\n  type = 'text',\n  ...rest\n}: InputProps & InputHTMLAttributes<HTMLInputElement>) => (\n  <StyledInputWrapper>\n    <StyledLabel htmlFor={id}>{label}</StyledLabel>\n    <StyledInput error={!!error} id={id} type={type} {...rest} ref={refVal} />\n    {error && <StyledMessage>{error?.message}</StyledMessage>}\n  </StyledInputWrapper>\n);\n\nexport default Input;\n","import styled from 'styled-components';\nimport { AlertTypes } from 'constants/enums';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype AlertProps = { type: AlertTypes };\n\nconst StyledAlert = styled.div<AlertProps>`\n  border: ${({ type, theme }) => `1px solid ${theme.colors[type].border}`};\n  background-color: ${({ type, theme }) => `${theme.colors[type].main}`};\n  color: ${({ type, theme }) => `${theme.colors[type].text}`};\n  border-radius: 5px;\n  padding: ${({ theme }) => theme.margin.xs};\n  font-size: ${({ theme }) => theme.font.sizes.s};\n  margin-bottom: ${({ theme }) => theme.margin.sm};\n`;\n\nexport { StyledAlert, StyledWrapper };\n","import React from 'react';\nimport { AlertTypes } from 'constants/enums';\nimport { StyledAlert, StyledWrapper } from './Alert.css';\n\ntype AlertProps = {\n  children?: string;\n  type?: AlertTypes;\n};\n\nconst Alert = ({ children = 'Ładowanie...', type = AlertTypes.ERROR }: AlertProps) => (\n  <StyledWrapper>\n    <StyledAlert data-testid=\"alert\" type={type}>\n      {children}\n    </StyledAlert>\n  </StyledWrapper>\n);\n\ntype MessageProps = {\n  error: string;\n  loading: boolean;\n  rest?: { [prop: string]: string };\n};\n\nconst AlertMessage = ({ error, loading, ...rest }: MessageProps) =>\n  error ? (\n    <Alert {...rest}>{error}</Alert>\n  ) : loading ? (\n    <Alert {...rest} type={AlertTypes.LOADING} />\n  ) : null;\n\nexport default AlertMessage;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        color: ${({ theme }) => theme.colors.text};\n        background-color: ${({ theme }) => theme.colors.body};\n        font-family: 'Roboto', sans-serif;\n        overflow-x: hidden;\n    }\n    * {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider, UserProvider } from 'context';\nimport { Navigation, Logo } from 'components';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport { Router } from '..';\n\nconst App = () => (\n  <ThemeProvider>\n    <UserProvider>\n      <GlobalStyle />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Logo />\n        <Navigation />\n        <Router />\n      </HashRouter>\n    </UserProvider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from 'constants/routes';\n\nconst Router = () => (\n  <Switch>\n    {routes.map(({ path, Component }) => (\n      <Route path={path} exact key={path}>\n        <Component />\n      </Route>\n    ))}\n  </Switch>\n);\n\nexport default Router;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/reset.css';\nimport { App } from 'root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}