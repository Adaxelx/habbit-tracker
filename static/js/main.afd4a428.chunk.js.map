{"version":3,"sources":["utils/types.ts","styles/themes/core.ts","styles/themes/default.ts","context/ThemeContext/ThemeContext.tsx","context/UserContext/UserContext.tsx","components/Navigation/Navigation.css.ts","constants/paths.ts","styles/styledElements.css.ts","views/Dashboard/Dashboard.css.ts","views/Dashboard/Dashboard.tsx","constants/calendar.ts","hooks/useCalendar/useCalendar.tsx","hooks/useQuery/useQuery.tsx","constants/enums.ts","hooks/useWindowSize/useWindowSize.jsx","utils/validators.ts","views/CalendarPage/CalendarPage.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.tsx","views/CalendarPage/components/CalendarGrid/CalendarGrid.css.ts","views/CalendarPage/components/CalendarGrid/CalendarGrid.tsx","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.css.ts","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.tsx","views/CalendarPage/components/DayCard/DayCard.css.ts","views/CalendarPage/components/DayCard/DayCard.tsx","views/CalendarPage/components/Habbit/Habbit.css.ts","views/CalendarPage/components/Habbit/Habbit.tsx","constants/APIpaths.ts","views/CalendarPage/CalendarPage.api.ts","views/CalendarPage/components/DayCardWrapper/DayCardWrapper.css.ts","views/CalendarPage/components/DayCardWrapper/DayCardWrapper.tsx","views/CalendarPage/CalendarPage.tsx","views/LoginPage/LoginPage.css.ts","views/LoginPage/LoginPage.api.ts","views/LoginPage/LoginPage.tsx","views/RegisterPage/RegisterPage.api.ts","constants/routes.ts","views/RegisterPage/RegisterPage.tsx","components/Navigation/components/OpenedNavigation/OpenedNavigation.css.ts","components/Navigation/components/OpenedNavigation/OpenedNavigation.tsx","components/Navigation/Navigation.tsx","components/Button/Button.ts","components/Logo/Logo.css.ts","components/Logo/Logo.tsx","components/Container/Container.tsx","components/Input/Input.css.ts","components/Input/Input.tsx","components/Alert/Alert.css.ts","components/Alert/Alert.tsx","styles/GlobalStyle.js","root/App/App.tsx","root/PrivateRoute/PrivateRoute.tsx","root/Router/Router.tsx","reportWebVitals.ts","index.tsx"],"names":["SIDES","font","base","family","light","regular","medium","bold","sizes","xs","s","sm","m","ml","l","core","colors","common","black","white","margin","time","short","long","zIndex","max","low","chooseFS","fontSize","isValidSize","Object","keys","find","fs","undefined","nav","dot","media","phone","tablet","desktop","lightBlue","defaultTheme","gridTile","size","body","calendar","navigation","text","primary","secondary","button","background","topLeft","topRight","bottomLeft","bottomRight","tile","backgroundActive","border","modalBackground","error","main","loading","ThemeContext","createContext","Provider","ThemeProvider","children","value","theme","cookies","Cookies","UserContext","token","login","logout","setCookieDate","date","Date","setDate","getDate","useUserContext","useContext","UserProvider","useState","get","setToken","user","newToken","set","path","expires","remove","StyledNavButton","styled","open","StyledDot","div","StyledTLDot","StyledTRDot","StyledBLDot","StyledBRDot","StyledLine","StyledRotatedLine","DASHBOARD","CALENDAR","LOGIN","REGISTER","FlexColCenter","section","StyledWrapper","StyledContentWrapper","StyledHeader","h2","StyledDescription","p","StyledSeparator","Dashboard","Container","as","Link","to","paths","weekDays","weekDaysFull","months","calculateDayInYear","now","start","getFullYear","diff","getTimezoneOffset","Math","floor","getISODate","toISOString","match","getDayParsed","firstDay","getDay","generateParsedDate","year","month","day","reversedParsedDate","split","reverse","join","getDayOfYear","parsed","getTime","useCalendar","events","from","shift","days","setDays","yearFrom","monthFrom","dayFrom","useEffect","endDay","startDay","dayOfWeek","eventsCopy","map","event","numericStart","dateStart","numericEnd","dateEnd","eventsArray","daysArray","dayInYear","difference","i","ceil","j","filter","daysOfWeek","includes","push","id","unshift","useQuery","AlertTypes","dependency","fn","setError","setLoading","data","setData","a","response","message","fetchData","useWindowSize","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","createRequiredObject","name","required","emailValidation","pattern","createRestrictedLengthObject","minLength","maxLength","StyledCenter","StyledButtonWrapper","StyledTile","StyledCircle","alone","color","position","StyledDay","generateCircles","edge","length","CalendarTile","handleDayChange","width","onClick","data-testid","StyledCalendar","StyledGrid","StyledDayGrid","CalendarGrid","moveDate","navId","header","eventsArr","label","idEvent","_id","StyledNavigation","StyledButton","StyledTitle","h3","CalendarNavigation","backToCalendar","LEFT","icon","faCaretLeft","RIGHT","faCaretRight","StyledCard","active","StyledWeekDay","DayCard","habbit","StyledContainer","StyledLabel","small","StyledHabbit","StyledTime","Habbit","title","timeEnd","timeStart","description","my","noMaxWidth","close","process","USER","EVENTS","LABELS","APIpaths","LOGOUT","getEvents","fetch","headers","Authorization","method","status","json","Error","DayCardWrapper","wrapper","useRef","fromParsed","toParsed","current","scrollWidth","scroll","firstDayOfWeek","startDate","today","setHours","todayTime","ref","index","cardDate","cardTime","CalendarPage","getMonth","actualMonth","setActualMonth","actualYear","setActualYear","daysInMonth","openCard","setOpenCard","setDay","dayNumber","loadingE","errorE","side","prevYear","prevMonth","handleChangeView","prevState","yearTo","monthTo","dayTo","generateWeek","fromWeek","toWeek","CalendarGridView","useMemo","mt","numericYear","numericMonth","numericDay","returnedDay","moveDateWeek","moveDateDay","loginUser","JSON","stringify","LoginPage","useForm","register","handleSubmit","errors","history","useHistory","onSubmit","noValidate","refVal","type","autoComplete","password","registerUser","routes","link","routesForRouter","Component","exact","isPrivate","passwordRepeat","email","StyledOpenNav","StyledContainner","StyledLink","OpenedNavigation","handleClose","Navigation","setOpen","Button","StyledLogo","Logo","StyledInputWrapper","StyledInput","input","StyledMessage","Input","rest","htmlFor","StyledAlert","Alert","ERROR","AlertMessage","LOADING","GlobalStyle","createGlobalStyle","App","basename","PrivateRoute","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afd4a428.chunk.js","sourcesContent":["import { MouseEventHandler } from 'react';\n\nexport type GridProps = {\n  events: Event[];\n  month: number;\n  year: number;\n  moveDate: Function;\n  handleDayChange: Function;\n};\n\nexport interface Event {\n  _id: string;\n  daysOfWeek: number[];\n  title: string;\n  timeStart?: string;\n  timeEnd?: string;\n  dateStart: string;\n  dateEnd: string;\n  label?: Label;\n  description?: string;\n  userId: string;\n  checked?: [\n    {\n      day: number;\n      month: number;\n      year: number;\n      _id: string;\n    },\n  ];\n}\n\nexport interface EventLoop extends Event {\n  numericStart: number;\n  numericEnd: number;\n}\n\nexport type Label = {\n  _id: string;\n  title: string;\n  color: string;\n  userId: string;\n};\n\nexport type CalendarTile = {\n  day: number;\n  events: EventLoop[];\n  id: number;\n};\n\nexport enum SIDES {\n  LEFT = -1,\n  RIGHT = 1,\n}\n\nexport type Color = { color?: string; id?: string };\n\nexport type NavProps = {\n  navId: string;\n  header: string;\n  moveDate: Function;\n  backToCalendar?: MouseEventHandler<HTMLHeadingElement>;\n};\n\nexport interface DayCardProps {\n  events: Event[];\n  header: string;\n  active: boolean;\n}\n\nexport type DateTuple = [number, number, number];\n\nexport type TokenType = string | undefined;\n","import { CoreTheme } from 'styled-components';\nimport { fontInterface } from 'styles/styled.d';\n\nconst font: fontInterface = {\n  base: '10px',\n  family: 'Arial',\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  sizes: {\n    xs: '0.75rem',\n    s: '1rem',\n    sm: '1.25rem',\n    m: '1.5rem',\n    ml: '2rem',\n    l: '3rem',\n  },\n};\n\nconst chooseFS = (fontSize: string) => {\n  const { sizes } = font;\n  const isValidSize: string | undefined = Object.keys(sizes).find((fs) => fs === fontSize);\n  if (isValidSize !== undefined) {\n    return sizes[isValidSize];\n  }\n  return sizes.xs;\n};\n\nconst core: CoreTheme = {\n  colors: {\n    common: {\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n  },\n  font,\n  margin: {\n    xs: '0.5rem',\n    s: '0.75rem',\n    sm: '1rem',\n    m: '1.25rem',\n    ml: '1.5rem',\n    l: '1.75rem',\n  },\n  time: {\n    short: 100,\n    medium: 300,\n    long: 500,\n  },\n  zIndex: {\n    max: 1000,\n    medium: 500,\n    low: 100,\n  },\n  chooseFS,\n  sizes: {\n    nav: '50px',\n    dot: '20px',\n  },\n  media: {\n    phone: { s: '320px' },\n    tablet: { s: '768px', l: '1024px' },\n    desktop: { s: '1366px', l: '1920px' },\n  },\n};\n\nexport default core;\n","import core from 'styles/themes/core';\nimport { DefaultTheme } from 'styled-components';\n\nconst lightBlue = '#AFE9FF';\n\nconst defaultTheme: DefaultTheme = {\n  ...core,\n  gridTile: {\n    size: 50,\n  },\n  colors: {\n    ...core.colors,\n    body: '#F3FFF2',\n    calendar: {\n      navigation: '#EDEFFF',\n    },\n    text: {\n      primary: core.colors.common.black,\n      secondary: '#808080',\n      nav: '#A5A5A5',\n    },\n    button: {\n      background: '#FFC136',\n      text: '#fff',\n    },\n    nav: {\n      topLeft: '#B7FF96',\n      topRight: '#89FFED',\n      bottomLeft: '#FDF194',\n      bottomRight: '#FFADFC',\n      background: '#A4FF9D',\n      button: '#FFED67',\n    },\n    tile: {\n      background: '#FFFCAF',\n      backgroundActive: lightBlue,\n      border: '#77CBFF',\n    },\n    modalBackground: lightBlue,\n    error: {\n      main: '#FF9191',\n      border: '#730000',\n      text: '#730000',\n    },\n    loading: {\n      main: '#a6fff9',\n      border: '#1b968e',\n      text: '#1b968e',\n    },\n    border: '#707070',\n  },\n};\n\nexport default defaultTheme;\n","import React, { createContext, useContext } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\n\nimport { defaultTheme } from 'styles/themes';\n\nconst ThemeContext = createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\n\ntype ThemeProps = {\n  children: Object;\n};\n\nconst ThemeProvider = ({ children }: ThemeProps) => (\n  <Provider value={defaultTheme}>\n    <SCThemeProvider theme={defaultTheme}>{children}</SCThemeProvider>\n  </Provider>\n);\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React, { createContext, useContext, useState } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\ninterface UserProviderProps {\n  token: string | undefined;\n  login: Function;\n  logout: Function;\n}\n\nconst UserContext = createContext<UserProviderProps>({\n  token: undefined,\n  login: () => {},\n  logout: () => {},\n});\n\nconst { Provider } = UserContext;\n\ntype UserProps = {\n  children: Object;\n};\n\nconst setCookieDate = () => {\n  const date = new Date();\n  date.setDate(date.getDate() + 14);\n  return date;\n};\n\nconst UserProvider = ({ children }: UserProps) => {\n  const [token, setToken] = useState<string | undefined>(cookies.get('token'));\n  const user: UserProviderProps = {\n    token,\n    login: (newToken: string) => {\n      cookies.set('token', newToken, {\n        path: '/',\n        expires: setCookieDate(),\n      });\n      setToken(newToken);\n    },\n    logout: () => {\n      cookies.remove('token', { path: '/' });\n      setToken(undefined);\n    },\n  };\n  return <Provider value={user}>{children}</Provider>;\n};\n\nexport const useUserContext = () => useContext(UserContext);\n\nexport default UserProvider;\n","import styled from 'styled-components';\n// import { getKey } from 'utils/objectsFunctions';\n\n// const topLeft = css`\n//   top: 0;\n//   left: 0;\n// `;\n\n// const topRight = css`\n//   top: 0;\n//   right: 0;\n// `;\n\n// const bottomLeft = css`\n//   bottom: 0;\n//   left: 0;\n// `;\n\n// const bottomRight = css`\n//   bottom: 0;\n//   right: 0;\n// `;\n\n// interface Position {\n//   topLeft: FlattenSimpleInterpolation;\n//   topRight: FlattenSimpleInterpolation;\n//   bottomLeft: FlattenSimpleInterpolation;\n//   bottomRight: FlattenSimpleInterpolation;\n//   [key: string]: FlattenSimpleInterpolation;\n// }\n\n// const positionObject: Position = { topLeft, topRight, bottomLeft, bottomRight };\n\n// interface DotProps {\n//   topLeft?: boolean;\n//   topRight?: boolean;\n//   bottomLeft?: boolean;\n//   bottomRight?: boolean;\n//   [key: string]: boolean | undefined;\n// }\n\n/* background-color: ${({ theme, ...rest }) => theme.colors.nav[getKey(rest)]};\n  ${({ theme, ...rest }) => positionObject[getKey(rest)]} */\n\ninterface ClicableProps {\n  open: boolean;\n}\n\nexport const StyledNavButton = styled.button<ClicableProps>`\n  position: fixed;\n  height: ${({ theme }) => theme.sizes.nav};\n  width: ${({ theme }) => theme.sizes.nav};\n  top: ${({ theme }) => theme.margin.sm};\n  background-color: transparent;\n  border: none;\n  right: ${({ theme }) => theme.margin.sm};\n  padding: 0;\n  ${({ open }) => open && `transform: rotate(-45deg);`}\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StyledDot = styled.div<ClicableProps>`\n  width: ${({ theme }) => theme.sizes.dot};\n  height: ${({ theme }) => theme.sizes.dot};\n  border-radius: 50%;\n  position: absolute;\n  opacity: ${({ open }) => (open ? '0' : '1')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledTLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topLeft};\n  top: 0;\n  left: 0;\n`;\n\nexport const StyledTRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topRight};\n  top: 0;\n  right: 0;\n`;\n\nexport const StyledBLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomLeft};\n  bottom: 0;\n  left: 0;\n`;\n\nexport const StyledBRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomRight};\n  bottom: 0;\n  right: 0;\n`;\n\nexport const StyledLine = styled.div<ClicableProps>`\n  position: absolute;\n  height: 3px;\n  width: ${({ theme }) => theme.sizes.nav};\n  background-color: ${({ theme }) => theme.colors.error.main};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledRotatedLine = styled(StyledLine)<ClicableProps>`\n  transform: rotate(90deg);\n  top: 50%;\n`;\n","const path = {\n  DASHBOARD: '/',\n  CALENDAR: '/calendar',\n  LOGIN: '/login',\n  REGISTER: '/register',\n};\n\nexport default path;\n","import styled from 'styled-components';\n\nexport const FlexColCenter = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  padding: 0 1rem;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n`;\n\nexport const StyledContentWrapper = styled(FlexColCenter)`\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    margin-right: ${({ theme }) => theme.margin.l};\n  }\n`;\n\nexport const StyledHeader = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.l};\n  margin: ${({ theme }) => theme.margin.sm} 0;\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n\nexport const StyledDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: justify;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.l};\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.sm};\n  }\n`;\n\nexport const StyledSeparator = styled.p`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  margin: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'components';\nimport paths from 'constants/paths';\nimport { FlexColCenter } from 'styles';\nimport {\n  StyledHeader,\n  StyledWrapper,\n  StyledDescription,\n  StyledSeparator,\n  StyledContentWrapper,\n} from './Dashboard.css';\n\nconst Dashboard = () => (\n  <Container>\n    <StyledWrapper>\n      <StyledContentWrapper>\n        <StyledHeader>Habbit tracker</StyledHeader>\n        <StyledDescription>\n          Track your progress in very simple and personalized app\n        </StyledDescription>\n      </StyledContentWrapper>\n      <FlexColCenter>\n        <Button as={Link} to={paths.REGISTER} size=\"m\">\n          Create account for free\n        </Button>\n        <StyledSeparator>or</StyledSeparator>\n        <Button as={Link} to={paths.LOGIN} size=\"m\">\n          Log in\n        </Button>\n      </FlexColCenter>\n    </StyledWrapper>\n  </Container>\n);\n\nexport default Dashboard;\n","/* eslint-disable prefer-const */\n\nimport { DateTuple, SIDES } from 'utils/types';\n\nexport const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nexport const weekDaysFull = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\nexport const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'Juny',\n  'Juni',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const calculateDayInYear = (date: string) => {\n  const now: any = new Date(date);\n  const start: any = new Date(now.getFullYear(), 0, 0);\n  const diff = now - start + (start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000;\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.floor(diff / oneDay);\n};\n\nexport const getISODate = (date: Date) => date.toISOString().match(/\\d{4}-\\d{2}-\\d{2}/)![0];\n\nexport const getDayParsed = (date: Date) => {\n  let firstDay = date.getDay();\n\n  if (firstDay === 0) {\n    firstDay = 7;\n  }\n  firstDay -= 1;\n  return firstDay;\n};\n\nexport const moveDateDay = (side: SIDES, day: DateTuple, setDay: Function) => {\n  const [numericYear, numericMonth, numericDay] = day;\n\n  const daysInMonth = new Date(numericYear, numericMonth + 1, 0).getDate();\n  if (side === SIDES.RIGHT) {\n    if (numericDay === daysInMonth) {\n      if (numericMonth === 11) {\n        setDay([numericYear + 1, 0, 1]);\n      } else {\n        setDay([numericYear, numericMonth + 1, 1]);\n      }\n    } else {\n      setDay([numericYear, numericMonth, numericDay + 1]);\n    }\n  } else if (numericDay === 1) {\n    if (numericMonth === 0) {\n      setDay([numericYear - 1, 11, 31]);\n    } else {\n      const daysInMonthCount = new Date(numericYear, numericMonth, 0).getDate();\n      setDay([numericYear, numericMonth - 1, daysInMonthCount]);\n    }\n  } else {\n    setDay([numericYear, numericMonth, numericDay - 1]);\n  }\n};\n\nexport const moveDateWeek = (side: SIDES, day: DateTuple, setDay: Function) => {\n  const [numericYear, numericMonth, numericDay] = day;\n\n  const daysInMonth = new Date(numericYear, numericMonth + 1, 0).getDate();\n  if (side === SIDES.RIGHT) {\n    if (numericDay + 7 > daysInMonth) {\n      const returnedDay = numericDay + 7 - daysInMonth;\n      if (numericMonth === 11) {\n        setDay([numericYear + 1, 0, returnedDay]);\n      } else {\n        setDay([numericYear, numericMonth + 1, returnedDay]);\n      }\n    } else {\n      setDay([numericYear, numericMonth, numericDay + 7]);\n    }\n  } else if (numericDay - 7 < 1) {\n    const daysInPreviousMonth = new Date(numericYear, numericMonth, 0).getDate();\n    const returnedDay = numericDay - 7 + daysInPreviousMonth;\n    if (numericMonth === 0) {\n      setDay([numericYear - 1, 11, returnedDay]);\n    } else {\n      setDay([numericYear, numericMonth - 1, returnedDay]);\n    }\n  } else {\n    setDay([numericYear, numericMonth, numericDay - 7]);\n  }\n};\n\nexport const generateParsedDate = (date: DateTuple) => {\n  const [year, month, day] = date;\n  return `${year}-${month < 9 ? `0${month + 1}` : month + 1}-${day < 10 ? `0${day}` : day}`;\n};\n\nexport const reversedParsedDate = (date: DateTuple) =>\n  generateParsedDate(date).split('-').reverse().join('.');\n\nexport const generateWeek = (day: DateTuple): [DateTuple, DateTuple] => {\n  const [year, month, dayNumber] = day;\n\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n  let [yearFrom, monthFrom, dayFrom] = [...day];\n  let [yearTo, monthTo, dayTo] = [...day];\n  if (dayNumber + 3 > daysInMonth) {\n    const returnedDay = dayNumber + 3 - daysInMonth;\n    if (month === 11) {\n      monthTo = 0;\n      yearTo += 1;\n    } else {\n      monthTo = month + 1;\n    }\n    dayTo = returnedDay;\n  } else {\n    dayTo = dayNumber + 3;\n  }\n  if (dayNumber - 3 < 1) {\n    const daysInPrevMonth = new Date(year, month, 0).getDate();\n    const returnedDay = dayNumber - 3 + daysInPrevMonth;\n    if (month === 0) {\n      monthFrom = 11;\n      yearFrom -= 1;\n    } else {\n      monthFrom = month - 1;\n    }\n    dayFrom = returnedDay;\n  } else {\n    dayFrom = dayNumber - 3;\n  }\n\n  return [\n    [yearFrom, monthFrom, dayFrom],\n    [yearTo, monthTo, dayTo],\n  ];\n};\n\nexport const getDayOfYear = (date: DateTuple) => {\n  const parsed = generateParsedDate(date);\n  const now = new Date(parsed);\n  const start = new Date(now.getFullYear(), 0, 0);\n  const diff =\n    now.getTime() -\n    start.getTime() +\n    (start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000;\n  const oneDay = 1000 * 60 * 60 * 24;\n  const day = Math.floor(diff / oneDay);\n  return day;\n};\n\nfunction isLeapYear(year: number) {\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n}\n\nexport function daysOfYear(year: number) {\n  return isLeapYear(year) ? 366 : 365;\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-loop-func */\nimport { useEffect, useState } from 'react';\nimport { Event, EventLoop, CalendarTile, DateTuple } from 'utils';\nimport { calculateDayInYear, getDayOfYear, getDayParsed } from 'constants/calendar';\n\nconst useCalendar = (events: Event[], from: DateTuple, to: DateTuple, shift?: boolean) => {\n  const [days, setDays] = useState<CalendarTile[]>([]);\n\n  const [yearFrom, monthFrom, dayFrom] = from;\n\n  useEffect(() => {\n    const firstDay = getDayParsed(new Date(yearFrom, monthFrom, dayFrom));\n    const endDay = getDayOfYear(to);\n    let startDay = getDayOfYear(from);\n\n    let dayOfWeek = firstDay;\n    let eventsCopy: EventLoop[] = [];\n    eventsCopy = events.map((event) => ({\n      ...event,\n      numericStart: calculateDayInYear(event.dateStart),\n      numericEnd: calculateDayInYear(event.dateEnd),\n    }));\n\n    let eventsArray: EventLoop[] = [];\n    const daysArray: CalendarTile[] = [];\n    let dayInYear = calculateDayInYear(`${yearFrom}-${monthFrom + 1}-${dayFrom}`);\n\n    const difference = endDay + 1 - startDay;\n\n    for (let i = 0; i < Math.ceil(difference / 7); i++) {\n      for (let j = 0; j < 7; j++) {\n        eventsArray = eventsArray.filter(\n          (event) => event.numericEnd > endDay && event.daysOfWeek.includes(dayOfWeek),\n        );\n\n        const day = dayFrom + i * 7 + j;\n\n        if (endDay < startDay) {\n          break;\n        }\n\n        eventsCopy = eventsCopy.filter((event) => {\n          if (\n            event.numericStart <= endDay &&\n            startDay <= event.numericEnd &&\n            !eventsArray.includes(event) &&\n            event.daysOfWeek.includes(dayOfWeek)\n          ) {\n            eventsArray.push(event);\n          }\n          return dayInYear <= event.numericEnd;\n        });\n\n        daysArray.push({ id: i * 13 + j * 17, day, events: eventsArray });\n\n        dayInYear += 1;\n        dayOfWeek++;\n        startDay++;\n        if (dayOfWeek >= 7) {\n          dayOfWeek = 0;\n        }\n      }\n    }\n\n    if (shift) {\n      for (let i = 0; i < 6; i++) {\n        if (i < firstDay) {\n          daysArray.unshift({ id: i * 167 + 1, day: -1, events: [] });\n        }\n      }\n    }\n    setDays(daysArray);\n  }, [events]);\n\n  return [days];\n};\n\nexport default useCalendar;\n","import { useState, useEffect } from 'react';\n\ntype PromiseAnyReturn = () => Promise<any>;\n\ntype MultipleFunction = Function | PromiseAnyReturn;\n\ntype QueryReturn<T> = [Array<T>, boolean, string];\n\nfunction useQuery<T>(dependency: Array<any>, fn: MultipleFunction): QueryReturn<T> {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<Array<T>>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fn();\n        setData(response);\n      } catch (err) {\n        setError(err.message);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, dependency);\n\n  return [data, loading, error];\n}\n\nexport default useQuery;\n","export enum AlertTypes {\n  ERROR = 'error',\n  LOADING = 'loading',\n}\n","import { useState, useLayoutEffect } from \"react\";\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n};\n\nexport default useWindowSize;\n","export const createRequiredObject = (name: string) => ({\n  required: `Field ${name} is required.`,\n});\n\nexport const validatePattern = (pattern: RegExp) => ({\n  pattern: {\n    value: pattern,\n    message: 'Incorrect characters.',\n  },\n});\n\nexport const emailValidation = validatePattern(\n  // eslint-disable-next-line no-control-regex\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n);\n\nexport const createRestrictedLengthObject = (name: string) => ({\n  ...createRequiredObject(name),\n  minLength: {\n    value: 6,\n    message: `Field ${name} must have at least 6 characters.`,\n  },\n  maxLength: {\n    value: 30,\n    message: `Field ${name} must have maximum 30 characters.`,\n  },\n});\n","import styled from 'styled-components';\n\nexport const StyledCenter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  max-width: 100%;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTile = styled.button`\n  border: none;\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  height: ${({ theme }) => `${theme.gridTile.size}px`};\n  position: relative;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.common.white};\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    width: ${({ theme }) => `${theme.gridTile.size * 2}px`};\n    height: ${({ theme }) => `${theme.gridTile.size * 2}px`};\n  }\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ntype CirlcleProps = {\n  size: number;\n  alone: boolean;\n  position: number;\n  color: string | undefined;\n};\n\nexport const StyledCircle = styled.div<CirlcleProps>`\n  position: absolute;\n  border-radius: 50%;\n  width: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  height: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  background-color: ${({ color }) => color};\n  top: ${({ position }) => `${position}px`};\n  left: ${({ position }) => `${position}px`};\n  ${({ alone }) => alone && 'transform: translate(-50%,-50%);top: 50%;left:50%'}\n`;\n\nexport const StyledDay = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: ${({ theme }) => theme.zIndex.low};\n`;\n","import React, { MouseEventHandler } from 'react';\nimport { useThemeContext } from 'context';\nimport { Color } from 'utils';\nimport { useWindowSize } from 'hooks';\nimport { StyledCircle, StyledTile, StyledDay } from './CalendarTile.css';\n\nconst generateCircles = (colors: Color[], edge: number) => {\n  const size = (edge * (1.3 + (colors.length - 2) * 0.1)) / colors.length;\n  const shift = (edge - size) / (colors.length - 1);\n  let position = -shift;\n  return colors.map((color) => {\n    position += shift;\n    return (\n      <StyledCircle\n        key={color.id}\n        position={position}\n        alone={colors.length === 1}\n        color={color.color}\n        size={size}\n      />\n    );\n  });\n};\n\ntype TileProps = {\n  colors?: Color[];\n  day: number;\n  handleDayChange: Function;\n};\n\nconst CalendarTile = ({ colors, day, handleDayChange }: TileProps) => {\n  const {\n    gridTile: { size },\n  } = useThemeContext();\n  const [width] = useWindowSize();\n\n  return (\n    <StyledTile onClick={handleDayChange as MouseEventHandler<HTMLButtonElement>}>\n      {day === -1 ? null : (\n        <>\n          {colors && generateCircles(colors, width > 768 ? size * 2 : size)}\n          <StyledDay data-testid=\"day\">{day}</StyledDay>\n        </>\n      )}\n    </StyledTile>\n  );\n};\n\nexport default CalendarTile;\n","import styled from 'styled-components';\n\nexport const StyledCalendar = styled.div`\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    margin-top: 5rem;\n  }\n`;\n\nexport const StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(0, 1fr));\n  grid-template-rows: auto;\n  max-width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-top: none;\n  background-color: #fff;\n`;\n\nexport const StyledDayGrid = styled(StyledGrid)`\n  background-color: ${({ theme }) => theme.colors.calendar.navigation};\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n  border-bottom: none;\n`;\n\nexport const StyledDay = styled.div`\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  padding: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { weekDays, months } from 'constants/calendar';\nimport { useCalendar } from 'hooks';\nimport { GridProps, DateTuple } from 'utils';\nimport { CalendarTile, CalendarNavigation } from '..';\nimport { StyledGrid, StyledDay, StyledDayGrid, StyledCalendar } from './CalendarGrid.css';\n\nconst CalendarGrid = ({ events, month, year, moveDate, handleDayChange }: GridProps) => {\n  const from: DateTuple = [year, month, 1];\n  const to: DateTuple = [year, month, new Date(year, month + 1, 0).getDate()];\n  const [days] = useCalendar(events, from, to, true);\n\n  /* podmienic działanie hooka zeby przyjmował events, date-start, date-end. Tutaj mozna to zrobic tam 1-month-year - new Date(year, month, 0).getDate();(zwraca dni w miesiacu)-month-year */\n\n  return (\n    <StyledCalendar>\n      <CalendarNavigation navId=\"main\" header={`${months[month]} ${year}`} moveDate={moveDate} />\n      <StyledDayGrid>\n        {weekDays.map((day) => (\n          <StyledDay key={day}>{day}</StyledDay>\n        ))}\n      </StyledDayGrid>\n      <StyledGrid>\n        {days.map(({ id, day, events: eventsArr }) => (\n          <CalendarTile\n            key={id}\n            handleDayChange={() => handleDayChange([year, month, day])}\n            colors={eventsArr.map(({ label, _id: idEvent }) =>\n              label ? { color: label?.color, id: `${idEvent}${id}` } : {},\n            )}\n            day={day}\n          />\n        ))}\n      </StyledGrid>\n    </StyledCalendar>\n  );\n};\n\nexport default CalendarGrid;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: ${({ theme }) => theme.margin.s} 0;\n`;\n\nexport const StyledButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n`;\n\nexport const StyledTitle = styled.h3`\n  width: 200px;\n  text-align: center;\n  line-height: 100%;\n  margin: 0;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    width: 400px;\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretLeft, faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SIDES, NavProps } from 'utils';\nimport { StyledNavigation, StyledButton, StyledTitle } from './CalendarNavigation.css';\n\nconst CalendarNavigation = ({ header, moveDate, navId, backToCalendar }: NavProps) => (\n  <StyledNavigation>\n    <StyledButton data-testid={`moveLeft-${navId}`} onClick={() => moveDate(SIDES.LEFT)}>\n      <FontAwesomeIcon icon={faCaretLeft} />\n    </StyledButton>\n    <StyledTitle onClick={backToCalendar} data-testid={`dateCalendar-${navId}`}>\n      {header}\n    </StyledTitle>\n    <StyledButton data-testid={`moveRight-${navId}`} onClick={() => moveDate(SIDES.RIGHT)}>\n      <FontAwesomeIcon icon={faCaretRight} />\n    </StyledButton>\n  </StyledNavigation>\n);\n\nexport default CalendarNavigation;\n","import styled from 'styled-components';\n\ninterface CardProps {\n  active: boolean;\n}\n\nexport const StyledCard = styled.div<CardProps>`\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.tile.backgroundActive : theme.colors.tile.background};\n  min-width: 275px;\n  height: 500px;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nexport const StyledWeekDay = styled.h3`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin: ${({ theme }) => theme.margin.m} 0;\n  text-align: center;\n`;\n","import React from 'react';\nimport { DayCardProps } from 'utils';\nimport { StyledCard, StyledWeekDay } from './DayCard.css';\nimport { Habbit } from '..';\n\nconst DayCard = ({ events, header, active }: DayCardProps) => (\n  <StyledCard active={active}>\n    <StyledWeekDay>{header}</StyledWeekDay>\n    {events.map((event) => (\n      <Habbit key={event._id} habbit={event} />\n    ))}\n  </StyledCard>\n);\n\nexport default DayCard;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n`;\n\ninterface LabelProps {\n  color: string;\n}\n\nexport const StyledLabel = styled.small<LabelProps>`\n  background-color: ${({ color }) => color};\n  padding: ${({ theme }) => theme.margin.s};\n  width: auto;\n  border-radius: 20px;\n`;\n\nexport const StyledHabbit = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0 ${({ theme }) => theme.margin.s};\n  border-left: 1px solid ${({ theme }) => theme.colors.tile.border};\n  margin: 0 ${({ theme }) => theme.margin.s};\n  margin-top: ${({ theme }) => theme.margin.xs};\n  overflow-y: scroll;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.ml};\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n  margin-top: 0;\n`;\n\nexport const StyledTime = styled.p`\n  color: gray;\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: justify;\n`;\n","import React from 'react';\nimport { Button } from 'components';\nimport { Event } from 'utils';\nimport {\n  StyledHabbit,\n  StyledTime,\n  StyledDescription,\n  StyledTitle,\n  StyledContainer,\n  StyledLabel,\n} from './Habbit.css';\n\nconst Habbit = ({ habbit }: { habbit: Event }) => {\n  const { title, timeEnd, timeStart, description, label } = habbit;\n  return (\n    <StyledContainer>\n      <Button size=\"s\" my=\"0.75rem\" noMaxWidth data-testid=\"edit\">\n        Edit habbit\n      </Button>\n      <Button size=\"s\" close noMaxWidth data-testid=\"delete\">\n        X\n      </Button>\n      <StyledHabbit>\n        {label && <StyledLabel color={label.color}>{label.title}</StyledLabel>}\n        <StyledTitle>{title}</StyledTitle>\n        <StyledTime>{`${timeStart}-${timeEnd}`}</StyledTime>\n        <StyledDescription>{description}</StyledDescription>\n      </StyledHabbit>\n    </StyledContainer>\n  );\n};\n\nexport default Habbit;\n","const APIurl = process.env.REACT_APP_BACKEND;\n\nconst DASHBOARD = `${APIurl}/`;\nconst USER = `${DASHBOARD}users/`;\nconst EVENTS = `${DASHBOARD}events/`;\nconst LABELS = `${DASHBOARD}labels/`;\n\nconst APIpaths = {\n  LOGIN: `${USER}login/`,\n  REGISTER: `${USER}register/`,\n  LOGOUT: `${USER}logout/`,\n  EVENTS,\n  LABELS,\n};\n\nexport default APIpaths;\n","import APIpaths from 'constants/APIpaths';\n\nexport const getEvents = async (token: string | undefined, from: string, to: string) => {\n  const response = await fetch(`${APIpaths.EVENTS}?from=${from}&to=${to}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n\n  if (response.status === 200) {\n    return response.json();\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  overflow-x: scroll;\n`;\n","import React, { useLayoutEffect, useRef } from 'react';\nimport { DateTuple, Event, TokenType } from 'utils';\nimport { useCalendar, useQuery, useWindowSize } from 'hooks';\nimport { getEvents } from 'views/CalendarPage/CalendarPage.api';\nimport { weekDaysFull, getDayParsed, generateParsedDate } from 'constants/calendar';\nimport { StyledWrapper } from './DayCardWrapper.css';\nimport { DayCard } from '..';\n\ninterface DayCardWrapperProps {\n  from: DateTuple;\n  to: DateTuple;\n  token: TokenType;\n}\n\nconst DayCardWrapper = ({ from, to, token }: DayCardWrapperProps) => {\n  const wrapper = useRef<HTMLDivElement>(null);\n  const [width] = useWindowSize();\n\n  const fromParsed = generateParsedDate(from);\n  const toParsed = generateParsedDate(to);\n\n  const [events] = useQuery<Event>([from, to, token], () => getEvents(token, fromParsed, toParsed));\n\n  const [days] = useCalendar(events, from, to);\n\n  useLayoutEffect(() => {\n    if (days.length > 1) {\n      if (wrapper && wrapper.current) {\n        if (wrapper.current.scrollWidth > width) {\n          const scroll = wrapper.current.scrollWidth / 2 - width / 2;\n          wrapper?.current?.scroll(scroll, 0);\n        }\n      }\n    }\n  }, [days, wrapper]);\n\n  const firstDayOfWeek = getDayParsed(new Date(fromParsed));\n  let startDate = new Date(fromParsed).getTime();\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const todayTime = today.getTime();\n\n  return (\n    <StyledWrapper ref={wrapper}>\n      {days.map(({ events: eventsArr, id }, i) => {\n        const index = firstDayOfWeek + i > 6 ? (firstDayOfWeek + i) % 7 : firstDayOfWeek + i;\n        const cardDate = new Date(startDate);\n        cardDate.setHours(0, 0, 0, 0);\n        const cardTime = cardDate.getTime();\n        startDate += 24 * 60 * 60 * 1000;\n        return (\n          <DayCard\n            active={todayTime === cardTime}\n            key={id}\n            header={weekDaysFull[index]}\n            events={eventsArr}\n          />\n        );\n      })}\n    </StyledWrapper>\n  );\n};\n\nexport default DayCardWrapper;\n","import React, { useState, useMemo } from 'react';\nimport { Alert, Button } from 'components';\nimport { useUserContext } from 'context';\nimport {\n  getISODate,\n  months,\n  moveDateDay,\n  moveDateWeek,\n  generateWeek,\n  reversedParsedDate,\n} from 'constants/calendar';\nimport { useQuery, useWindowSize } from 'hooks';\nimport { SIDES } from 'utils';\nimport { DateTuple, Event } from 'utils/types';\nimport { StyledButtonWrapper, StyledCenter } from './CalendarPage.css';\nimport { CalendarGrid, CalendarNavigation, DayCardWrapper } from './components';\nimport { getEvents } from './CalendarPage.api';\n\n/* eslint-disable */\n\nconst CalendarPage = () => {\n  const [date, setDate] = useState(new Date());\n  const [actualMonth, setActualMonth] = useState(date.getMonth());\n  const [actualYear, setActualYear] = useState(date.getFullYear());\n  const from = getISODate(new Date(actualYear, actualMonth, 2));\n  const daysInMonth = 33 - new Date(actualYear, actualMonth, 32).getDate();\n  const to = getISODate(new Date(actualYear, actualMonth, daysInMonth));\n  const { token } = useUserContext();\n\n  const [width] = useWindowSize();\n\n  const [openCard, setOpenCard] = useState(false);\n  const [day, setDay] = useState<DateTuple>([actualYear, actualMonth, date.getDate()]);\n  const [year, month, dayNumber] = day;\n\n  const [events, loadingE, errorE] = useQuery<Event>([from, to, token], () =>\n    getEvents(token, from, to),\n  );\n\n  const moveDate = (side: SIDES) => {\n    if (side === SIDES.LEFT) {\n      if (actualMonth === 0) {\n        setActualMonth(11);\n        setActualYear((prevYear) => prevYear - 1);\n      } else {\n        setActualMonth((prevMonth) => prevMonth + side);\n      }\n    } else {\n      if (actualMonth === 11) {\n        setActualMonth(0);\n        setActualYear((prevYear) => prevYear + 1);\n      } else {\n        setActualMonth((prevMonth) => prevMonth + side);\n      }\n    }\n  };\n\n  const handleChangeView = (day?: DateTuple) => {\n    setOpenCard((prevState) => !prevState);\n    if (day) {\n      setDay(day);\n    }\n  };\n\n  const [fromWeek, toWeek] = generateWeek(day);\n\n  const CalendarGridView = useMemo(() => {\n    return (\n      <>\n        <CalendarGrid\n          events={events}\n          month={actualMonth}\n          moveDate={moveDate}\n          year={actualYear}\n          handleDayChange={handleChangeView}\n        />\n        <Alert loading={loadingE} error={errorE} />\n        <StyledButtonWrapper>\n          <Button size=\"s\" noMaxWidth mt=\"16px\" data-testid=\"addh\">\n            Add habbit\n          </Button>\n          <Button size=\"s\" noMaxWidth mt=\"16px\" my=\"16px\" data-testid=\"addl\">\n            Add label\n          </Button>\n          <Button size=\"s\" noMaxWidth mt=\"16px\" data-testid=\"labell\">\n            Label list\n          </Button>\n        </StyledButtonWrapper>\n      </>\n    );\n  }, [events, actualMonth, actualYear, loadingE, errorE]);\n\n  return (\n    <StyledCenter>\n      {width >= 768 ? (\n        <>\n          {CalendarGridView}\n          <CalendarNavigation\n            navId=\"desktopDay\"\n            header={`${reversedParsedDate(fromWeek)} - ${reversedParsedDate(toWeek)}`}\n            moveDate={(side: SIDES) => moveDateWeek(side, day, setDay)}\n          />\n          <DayCardWrapper from={fromWeek} to={toWeek} token={token} />\n        </>\n      ) : !openCard ? (\n        CalendarGridView\n      ) : (\n        <>\n          <CalendarNavigation\n            navId=\"mobileDay\"\n            header={`${dayNumber} ${months[month]} ${year}`}\n            moveDate={(side: SIDES) => moveDateDay(side, day, setDay)}\n            backToCalendar={() => setOpenCard(false)}\n          />\n          <DayCardWrapper from={day} to={day} token={token} />\n        </>\n      )}\n    </StyledCenter>\n  );\n};\n\nexport default CalendarPage;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  &::last-child {\n    margin-bottom: 0;\n  }\n`;\n","import APIpaths from 'constants/APIpaths';\n\nexport type LoginInputs = {\n  login: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const loginUser = async (data: LoginInputs) => {\n  const response = await fetch(APIpaths.LOGIN, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRestrictedLengthObject } from 'utils';\nimport { StyledWrapper } from './LoginPage.css';\nimport { loginUser, LoginInputs } from './LoginPage.api';\n\nconst LoginPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<LoginInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: LoginInputs) => {\n    setLoading(true);\n    try {\n      const response = await loginUser(data);\n      setLoading(false);\n      user.login(response.token);\n      history.push(paths.CALENDAR);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  return user.token ? (\n    <Redirect to={paths.CALENDAR} />\n  ) : (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" mt=\"16px\" type=\"submit\" data-testid=\"submit\">\n          Log in\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import APIpaths from 'constants/APIpaths';\n\nexport interface RegisterInputs {\n  login: string;\n  password: string;\n  email: string;\n}\n\nexport interface RegisterFormInputs extends RegisterInputs {\n  passwordRepeat: string;\n  [key: string]: string;\n}\n\nexport const registerUser = async (data: RegisterInputs) => {\n  const response = await fetch(APIpaths.REGISTER, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import { Dashboard, LoginPage, CalendarPage, RegisterPage } from 'views';\nimport paths from './paths';\n\nconst { DASHBOARD, CALENDAR, LOGIN, REGISTER } = paths;\n\ninterface Route {\n  link: string;\n  name: string;\n}\n\nexport const routes: Array<Route> = [\n  { link: DASHBOARD, name: 'Home page' },\n  { link: CALENDAR, name: 'Your tracker' },\n  { link: LOGIN, name: 'Login' },\n  { link: REGISTER, name: 'Register' },\n];\n\nconst routesForRouter = [\n  {\n    path: DASHBOARD,\n    Component: Dashboard,\n    exact: true,\n  },\n  {\n    path: CALENDAR,\n    Component: CalendarPage,\n    isPrivate: true,\n  },\n  { path: LOGIN, Component: LoginPage },\n  { path: REGISTER, Component: RegisterPage },\n];\n\nexport default routesForRouter;\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRequiredObject, createRestrictedLengthObject, emailValidation } from 'utils';\nimport { StyledWrapper } from 'views/LoginPage/LoginPage.css';\nimport { registerUser, RegisterFormInputs } from './RegisterPage.api';\n\nconst RegisterPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<RegisterFormInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: RegisterFormInputs) => {\n    if (data.password === data.passwordRepeat) {\n      setLoading(true);\n      try {\n        const response = await registerUser(data);\n        setLoading(false);\n        user.login(response.token);\n        history.push(paths.CALENDAR);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    } else {\n      setError('Passwords must be equal.');\n    }\n  };\n\n  return user.token ? (\n    <Redirect to={paths.CALENDAR} />\n  ) : (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <h2>Create new account</h2>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          id=\"email\"\n          type=\"email\"\n          refVal={register({ ...createRequiredObject('email'), ...emailValidation })}\n          error={errors.email}\n          data-testid=\"email\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Input\n          name=\"passwordRepeat\"\n          label=\"Repeat password\"\n          id=\"passwordRepeat\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('repeat password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.passwordRepeat}\n          data-testid=\"passwordRepeat\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" type=\"submit\" data-testid=\"submit\">\n          Create account\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\ninterface ClicableProps {\n  open: boolean;\n}\n\ninterface LinkProps {\n  onClick: Function;\n  open: boolean;\n}\n\nexport const StyledOpenNav = styled.nav<ClicableProps>`\n  transform: ${({ open }) => `scale(${open ? '1' : '0'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `opacity ${theme.time.medium}ms`};\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  position: fixed;\n  background-color: ${({ theme }) => theme.colors.nav.background};\n  z-index: ${({ theme }) => theme.zIndex.medium};\n`;\n\nexport const StyledContainner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const StyledLink = styled(Link)<LinkProps>`\n  color: ${({ theme }) => theme.colors.text.nav};\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.m};\n  transform: ${({ open }) => `scale(${open ? '1' : '2'}) translateY(${open ? '0px' : '-50px'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme, open }) => (open ? `${theme.time.medium}ms` : '0')};\n`;\n","import React from 'react';\nimport { routes } from 'constants/routes';\nimport { StyledOpenNav, StyledLink, StyledContainner } from './OpenedNavigation.css';\n\ninterface OpenNavProps {\n  open: boolean;\n  handleClose: Function;\n}\n\nconst OpenedNavigation = ({ open, handleClose }: OpenNavProps) => (\n  <StyledOpenNav open={open}>\n    <StyledContainner>\n      {routes.map(({ name, link }) => (\n        <StyledLink open={open} to={link} key={name} onClick={() => handleClose()}>\n          {name}\n        </StyledLink>\n      ))}\n    </StyledContainner>\n  </StyledOpenNav>\n);\n\nexport default OpenedNavigation;\n","import React, { useState } from 'react';\nimport {\n  StyledNavButton,\n  StyledTLDot,\n  StyledTRDot,\n  StyledBLDot,\n  StyledBRDot,\n  StyledLine,\n  StyledRotatedLine,\n} from './Navigation.css';\nimport { OpenedNavigation } from './components';\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <StyledNavButton\n        open={open}\n        data-testid=\"navButton\"\n        onClick={() => setOpen((prevState) => !prevState)}\n      >\n        <StyledTLDot open={open} />\n        <StyledTRDot open={open} />\n        <StyledBLDot open={open} />\n        <StyledBRDot open={open} />\n        <StyledLine open={open} />\n        <StyledRotatedLine open={open} />\n      </StyledNavButton>\n      <OpenedNavigation open={open} handleClose={() => setOpen(false)} />\n    </>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\ninterface ButtonProps {\n  size?: string;\n  noMaxWidth?: boolean;\n  as?: any;\n  mt?: string;\n  my?: string;\n  close?: boolean;\n}\n\nconst Button = styled.button<ButtonProps>`\n  color: ${({ theme, close }) => (close ? theme.colors.common.black : theme.colors.button.text)};\n  background-color: ${({ theme, close }) =>\n    close ? theme.colors.error.main : theme.colors.button.background};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  padding: ${({ theme, size }) => (size ? theme.margin[size] : theme.margin.s)};\n  font-size: ${({ theme, size }) => (size ? theme.font.sizes[size] : theme.font.sizes.s)};\n  min-width: ${({ noMaxWidth }) => (noMaxWidth ? 'none' : '150px')};\n  display: inline-block;\n  text-align: center;\n  margin-top: ${({ mt }) => mt || 0};\n  margin-left: ${({ my }) => my || 0};\n  margin-right: ${({ my }) => my || 0};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLogo = styled.header`\n  position: fixed;\n  top: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  text-align: center;\n  height: ${({ theme }) => theme.sizes.nav};\n  line-height: ${({ theme }) => theme.sizes.nav};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.xs};\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.common.black};\n  text-decoration: none;\n`;\n","import React from 'react';\nimport paths from 'constants/paths';\nimport { StyledLogo, StyledLink } from './Logo.css';\n\nconst Logo = () => (\n  <StyledLogo>\n    <StyledLink to={paths.DASHBOARD}>\n      <h1>Habbit tracker</h1>\n    </StyledLink>\n  </StyledLogo>\n);\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.main`\n  min-height: 100vh;\n  width: 100%;\n`;\n\nexport default StyledContainer;\n","import styled from 'styled-components';\n\ntype InputProps = {\n  error: boolean;\n};\n\nexport const StyledInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  max-width: 300px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.s};\n`;\n\nexport const StyledInput = styled.input<InputProps>`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  width: 100%;\n  max-width: 300px;\n  border: ${({ error, theme }) => error && `1px solid ${theme.colors.error.main}`};\n  &:focus {\n    outline: thin dotted;\n  }\n`;\n\nexport const StyledMessage = styled.p`\n  margin-top: ${({ theme }) => theme.margin.xs};\n  color: ${({ theme }) => theme.colors.error.main};\n  text-align: justify;\n`;\n","/* eslint-disable react/require-default-props */\nimport React, { InputHTMLAttributes } from 'react';\nimport { FieldError } from 'react-hook-form';\nimport { StyledInputWrapper, StyledInput, StyledLabel, StyledMessage } from './Input.css';\n\ninterface InputProps {\n  label: string;\n  refVal: any;\n  error?: FieldError;\n  rest?: Rest;\n}\n\ntype Rest = {\n  [prop: string]: string;\n};\n\nconst Input = ({\n  label,\n  id,\n  refVal,\n  error,\n  type = 'text',\n  ...rest\n}: InputProps & InputHTMLAttributes<HTMLInputElement>) => (\n  <StyledInputWrapper>\n    <StyledLabel htmlFor={id}>{label}</StyledLabel>\n    <StyledInput error={!!error} id={id} type={type} {...rest} ref={refVal} />\n    {error && <StyledMessage>{error?.message}</StyledMessage>}\n  </StyledInputWrapper>\n);\n\nexport default Input;\n","import styled from 'styled-components';\nimport { AlertTypes } from 'constants/enums';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: ${({ theme }) => theme.margin.s};\n`;\n\ntype AlertProps = { type: AlertTypes };\n\nconst StyledAlert = styled.div<AlertProps>`\n  border: ${({ type, theme }) => `1px solid ${theme.colors[type].border}`};\n  background-color: ${({ type, theme }) => `${theme.colors[type].main}`};\n  color: ${({ type, theme }) => `${theme.colors[type].text}`};\n  border-radius: 5px;\n  padding: ${({ theme }) => theme.margin.xs};\n  font-size: ${({ theme }) => theme.font.sizes.s};\n`;\n\nexport { StyledAlert, StyledWrapper };\n","import React from 'react';\nimport { AlertTypes } from 'constants/enums';\nimport { StyledAlert, StyledWrapper } from './Alert.css';\n\ntype AlertProps = {\n  children?: string;\n  type?: AlertTypes;\n};\n\nconst Alert = ({ children = 'Ładowanie...', type = AlertTypes.ERROR }: AlertProps) => (\n  <StyledWrapper>\n    <StyledAlert data-testid=\"alert\" type={type}>\n      {children}\n    </StyledAlert>\n  </StyledWrapper>\n);\n\ntype MessageProps = {\n  error: string;\n  loading: boolean;\n  rest?: { [prop: string]: string };\n};\n\nconst AlertMessage = ({ error, loading, ...rest }: MessageProps) =>\n  error ? (\n    <Alert {...rest}>{error}</Alert>\n  ) : loading ? (\n    <Alert {...rest} type={AlertTypes.LOADING} />\n  ) : null;\n\nexport default AlertMessage;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        color: ${({ theme }) => theme.colors.text};\n        background-color: ${({ theme }) => theme.colors.body};\n        font-family: 'Roboto', sans-serif;\n        overflow-x: hidden;\n    }\n    * {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider, UserProvider } from 'context';\nimport { Navigation, Logo } from 'components';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport { Router } from '..';\n\nconst App = () => (\n  <ThemeProvider>\n    <UserProvider>\n      <GlobalStyle />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Logo />\n        <Navigation />\n        <Router />\n      </HashRouter>\n    </UserProvider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport { useUserContext } from 'context';\nimport { Redirect, Route } from 'react-router-dom';\nimport paths from 'constants/paths';\n\ntype PrivateRouteProps = {\n  path: string;\n  children: any;\n};\n\nconst PrivateRoute = ({ ...rest }: PrivateRouteProps) => {\n  const { token } = useUserContext();\n  return token ? <Route {...rest} /> : <Redirect to={paths.LOGIN} />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from 'constants/routes';\nimport PrivateRoute from 'root/PrivateRoute';\n\nconst Router = () => (\n  <Switch>\n    {routes.map(({ path, Component, isPrivate }) =>\n      !isPrivate ? (\n        <Route path={path} exact key={path}>\n          <Component />\n        </Route>\n      ) : (\n        <PrivateRoute path={path} key={path}>\n          <Component />\n        </PrivateRoute>\n      ),\n    )}\n  </Switch>\n);\n\nexport default Router;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/reset.css';\nimport { App } from 'root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}