{"version":3,"sources":["styles/themes/core.ts","styles/themes/default.ts","context/ThemeContext/ThemeContext.tsx","context/UserContext/UserContext.tsx","context/AlertContext/AlertContext.js","context/RefreshContext/RefreshContext.tsx","components/Navigation/Navigation.css.ts","constants/paths.ts","styles/styledElements.css.ts","views/Dashboard/Dashboard.css.ts","views/Dashboard/Dashboard.tsx","constants/calendar.ts","hooks/useCalendar/useCalendar.tsx","hooks/useQuery/useQuery.tsx","utils/types.ts","hooks/useWindowSize/useWindowSize.jsx","utils/validators.ts","constants/enums.ts","hooks/useMutation/useMutation.tsx","hooks/useDelete/useDelete.tsx","constants/APIpaths.ts","views/CalendarPage/CalendarPage.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.css.ts","views/CalendarPage/components/CalendarTile/CalendarTile.tsx","views/CalendarPage/components/CalendarGrid/CalendarGrid.css.ts","views/CalendarPage/components/CalendarGrid/CalendarGrid.tsx","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.css.ts","views/CalendarPage/components/CalendarNavigation/CalendarNavigation.tsx","views/CalendarPage/components/DayCard/DayCard.css.ts","views/CalendarPage/components/DayCard/DayCard.tsx","views/CalendarPage/CalendarPage.api.ts","views/CalendarPage/components/Habbit/Habbit.css.ts","views/CalendarPage/components/Habbit/Habbit.tsx","views/CalendarPage/components/DayCardWrapper/DayCardWrapper.css.ts","views/CalendarPage/components/DayCardWrapper/DayCardWrapper.tsx","views/CalendarPage/components/HabbitForm/HabbitForm.css.ts","views/CalendarPage/components/HabbitForm/HabbitForm.tsx","components/Input/Input.css.ts","views/CalendarPage/components/WeekDaysInput/WeekDaysInput.css.ts","views/CalendarPage/components/WeekDaysInput/WeekDaysInput.tsx","views/CalendarPage/components/LabelForm/LabelForm.tsx","views/CalendarPage/components/LabelList/LabelList.tsx","views/CalendarPage/components/CalendarGridView/CalendarGridView.tsx","views/CalendarPage/components/Label/Label.css.ts","views/CalendarPage/components/Label/Label.tsx","views/CalendarPage/CalendarPage.tsx","views/LoginPage/LoginPage.css.ts","views/LoginPage/LoginPage.api.ts","views/LoginPage/LoginPage.tsx","views/RegisterPage/RegisterPage.api.ts","constants/routes.ts","views/RegisterPage/RegisterPage.tsx","components/Navigation/Navigation.api.ts","components/Button/Button.ts","components/Navigation/components/OpenedNavigation/OpenedNavigation.css.ts","components/Navigation/components/OpenedNavigation/OpenedNavigation.tsx","components/Navigation/Navigation.tsx","components/Container/Container.tsx","components/Input/Input.tsx","components/Alert/Alert.css.ts","components/Alert/Alert.tsx","components/PopUp/PopUp.css.ts","components/PopUp/PopUp.tsx","components/DateInput/DateInput.css.ts","components/DateInput/DateInput.tsx","components/Select/Select.css.ts","components/Select/Select.tsx","components/AlertMessage/AlertMessage.css.ts","components/AlertMessage/AlertMessage.jsx","components/AlertsContainer/AlertsContainer.jsx","components/OfflineAlert/OfflineAlert.css.ts","components/OfflineAlert/OfflineAlert.tsx","components/DeleteModal/DeleteModal.css.ts","components/DeleteModal/DeleteModal.tsx","styles/GlobalStyle.js","root/App/App.tsx","root/PrivateRoute/PrivateRoute.tsx","root/Router/Router.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["font","base","family","light","regular","medium","bold","sizes","xs","s","sm","m","ml","l","core","colors","common","black","white","margin","time","short","long","zIndex","max","low","chooseFS","fontSize","isValidSize","Object","keys","find","fs","undefined","nav","dot","media","phone","tablet","desktop","lightBlue","defaultTheme","gridTile","size","body","calendar","navigation","text","primary","secondary","button","background","topLeft","topRight","bottomLeft","bottomRight","tile","backgroundActive","border","modalBackground","error","main","success","loading","ThemeContext","createContext","Provider","ThemeProvider","children","value","theme","cookies","Cookies","UserContext","token","login","logout","setCookieDate","date","Date","setDate","getDate","useUserContext","useContext","UserProvider","useState","get","setToken","user","newToken","set","path","expires","remove","AlertContext","open","message","setOpen","changeVisibility","changeMessage","showAlert","newMessage","newVariant","console","log","useAlertContext","AlertProvider","props","setMessage","variant","setVariant","data","newOpen","RefreshContext","refHabbit","refLabel","handleRefHabbit","handleRefLabel","useRefreshContext","RefreshProvider","setRefHabbit","setRefLabel","refresh","prev","StyledNavButton","styled","StyledDot","div","StyledTLDot","StyledTRDot","StyledBLDot","StyledBRDot","StyledLine","StyledRotatedLine","DASHBOARD","CALENDAR","LOGIN","REGISTER","FlexColCenter","section","StyledWrapper","StyledContentWrapper","StyledHeader","h2","StyledDescription","p","StyledSeparator","Dashboard","Container","as","Link","to","paths","weekDays","weekDaysFull","months","getISODate","toISOString","match","getDayParsed","firstDay","getDay","reversedParsedDate","getFullYear","getMonth","month","day","generateParsedDate","split","reverse","join","useCalendar2","events","from","activeFrom","activeTo","days","setDays","useEffect","startDate","getTime","daysArray","flag","i","j","filtered","filter","event","dateStart","dateEnd","daysOfWeek","includes","push","id","active","unshift","useQuery","SIDES","AlertTypes","dependency","fn","setError","setLoading","setData","a","response","fetchData","useWindowSize","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","createRequiredObject","name","required","emailValidation","pattern","createRestrictedLengthObject","minLength","maxLength","timeValidFuntion","timeLess","hours","minutes","hoursMin","minutesMin","createTimeValidation","min","validate","SUCCESS","useMutation","options","request","messageSuccess","alertC","useRef","useCallback","current","Array","isArray","forEach","func","useDelete","show","setShow","canDelete","setCanDelete","deleteRequest","handleOpen","handleClose","handleDelete","process","USER","EVENTS","LABELS","APIpaths","LOGOUT","StyledCenter","StyledButtonWrapper","StyledTile","StyledCircle","alone","color","position","StyledDay","generateCircles","edge","length","shift","map","CalendarTile","handleDayChange","width","data-testid","onClick","StyledCalendar","StyledGrid","StyledDayGrid","CalendarGrid","year","moveDate","navId","header","eventsArr","label","StyledNavigation","StyledButton","StyledTitle","h3","CalendarNavigation","backToCalendar","LEFT","icon","faCaretLeft","RIGHT","faCaretRight","StyledCard","StyledWeekDay","DayCard","labels","yearA","monthA","dayA","habbit","checked","findIndex","_id","getData","url","fetch","headers","Authorization","method","status","json","Error","postEvent","JSON","stringify","postLabel","deleteLabel","deleteEvent","checkEvent","StyledContainer","StyledLabel","small","checkedStyles","css","StyledHabbit","navigator","onLine","StyledTime","Habbit","title","timeEnd","timeStart","description","mutate","mutateCheck","loadingC","mx","disabled","noMaxWidth","close","shouldScroll","wrapper","scrollWidth","scroll","DayCardWrapper","dateClicked","prevDaysLength","setPrevDaysLength","ref","today","setHours","HabbitForm","useForm","defaultValues","register","handleSubmit","errors","control","reset","watch","onSubmit","datePlus7","datePassed","diff","noValidate","refVal","type","maxDate","minDate","rest","key","mt","StyledInputWrapper","StyledInput","input","StyledTextArea","textarea","StyledMessage","StyledSelect","WeekDaysInput","rules","render","onChange","weekDay","selected","copy","LabelForm","fullHeight","onChangeComplete","hex","LabelList","CalendarGridView","actualMonth","actualYear","handleChangeView","openHabbitForm","setOpenHabbitForm","openLabelForm","setOpenLabelForm","openLabelList","setOpenLabelList","StyledLabelContainer","StyledButtonContainer","Label","openL","setOpenL","handleRemove","mr","CalendarPage","movingDate","setMovingDate","useMemo","dateFrom","daysInMonth","dateTo","lastDayOfMonth","firstDayOfMonth","urlEvents","loadingE","errorE","loadingL","errorL","useCalendar","generateWeek","fromWeek","toWeek","side","prevDate","newDate","setMonth","loginUser","LoginPage","history","useHistory","autoComplete","password","registerUser","routes","link","routesForRouter","Component","exact","isPrivate","passwordRepeat","email","logoutUser","Button","StyledOpenNav","StyledContainner","StyledLink","OpenedNavigation","handleLogout","Navigation","prevState","Input","htmlFor","StyledAlert","Alert","ERROR","AlertMessage","LOADING","StyledBacground","StyledCloseButton","rotate","PopUp","DateInput","select","Select","val","alertAnimation","keyframes","conAnimation","StyledScale","AlertsContainer","context","OfflineAlert","visible","setVisible","StyledDeleteModal","isDelete","DeleteModal","GlobalStyle","createGlobalStyle","App","PrivateRoute","Router","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","origin","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.459ce6eb.chunk.js","sourcesContent":["import { CoreTheme } from 'styled-components';\nimport { fontInterface } from 'styles/styled.d';\n\nconst font: fontInterface = {\n  base: '10px',\n  family: 'Arial',\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  sizes: {\n    xs: '0.75rem',\n    s: '1rem',\n    sm: '1.25rem',\n    m: '1.5rem',\n    ml: '2rem',\n    l: '3rem',\n  },\n};\n\nconst chooseFS = (fontSize: string) => {\n  const { sizes } = font;\n  const isValidSize: string | undefined = Object.keys(sizes).find((fs) => fs === fontSize);\n  if (isValidSize !== undefined) {\n    return sizes[isValidSize];\n  }\n  return sizes.xs;\n};\n\nconst core: CoreTheme = {\n  colors: {\n    common: {\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n  },\n  font,\n  margin: {\n    xs: '0.5rem',\n    s: '0.75rem',\n    sm: '1rem',\n    m: '1.25rem',\n    ml: '1.5rem',\n    l: '1.75rem',\n  },\n  time: {\n    short: 100,\n    medium: 300,\n    long: 500,\n  },\n  zIndex: {\n    max: 1000,\n    medium: 500,\n    low: 100,\n  },\n  chooseFS,\n  sizes: {\n    nav: '50px',\n    dot: '20px',\n  },\n  media: {\n    phone: { s: '320px', sm: '360px' },\n    tablet: { s: '768px', l: '1024px' },\n    desktop: { s: '1366px', l: '1920px' },\n  },\n};\n\nexport default core;\n","import core from 'styles/themes/core';\nimport { DefaultTheme } from 'styled-components';\n\nconst lightBlue = '#AFE9FF';\n\nconst defaultTheme: DefaultTheme = {\n  ...core,\n  gridTile: {\n    size: 40,\n  },\n  colors: {\n    ...core.colors,\n    body: '#F3FFF2',\n    calendar: {\n      navigation: '#EDEFFF',\n    },\n    text: {\n      primary: core.colors.common.black,\n      secondary: '#808080',\n      nav: '#A5A5A5',\n    },\n    button: {\n      background: '#FFC136',\n      text: '#fff',\n    },\n    nav: {\n      topLeft: '#B7FF96',\n      topRight: '#89FFED',\n      bottomLeft: '#FDF194',\n      bottomRight: '#FFADFC',\n      background: '#A4FF9D',\n      button: '#FFED67',\n    },\n    tile: {\n      background: '#FFFCAF',\n      backgroundActive: lightBlue,\n      border: '#77CBFF',\n    },\n    modalBackground: lightBlue,\n    error: {\n      main: '#FF9191',\n      border: '#730000',\n      text: '#730000',\n    },\n    success: {\n      main: '#d9ffd9',\n      border: '#10b9b0',\n      text: '#5cb85c',\n    },\n    loading: {\n      main: '#a6fff9',\n      border: '#1b968e',\n      text: '#1b968e',\n    },\n    border: '#707070',\n  },\n};\n\nexport default defaultTheme;\n","import React, { createContext, useContext } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\n\nimport { defaultTheme } from 'styles/themes';\n\nconst ThemeContext = createContext(defaultTheme);\n\nconst { Provider } = ThemeContext;\n\ntype ThemeProps = {\n  children: Object;\n};\n\nconst ThemeProvider = ({ children }: ThemeProps) => (\n  <Provider value={defaultTheme}>\n    <SCThemeProvider theme={defaultTheme}>{children}</SCThemeProvider>\n  </Provider>\n);\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React, { createContext, useContext, useState } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\ninterface UserProviderProps {\n  token: string | undefined;\n  login: Function;\n  logout: Function;\n}\n\nexport const UserContext = createContext<UserProviderProps>({\n  token: undefined,\n  login: () => {},\n  logout: () => {},\n});\n\nconst { Provider } = UserContext;\n\ntype UserProps = {\n  children: Object;\n};\n\nconst setCookieDate = () => {\n  const date = new Date();\n  date.setDate(date.getDate() + 14);\n  return date;\n};\n\nconst UserProvider = ({ children }: UserProps) => {\n  const [token, setToken] = useState<string | undefined>(cookies.get('token'));\n  const user: UserProviderProps = {\n    token,\n    login: (newToken: string) => {\n      cookies.set('token', newToken, {\n        path: '/',\n        expires: setCookieDate(),\n      });\n      setToken(newToken);\n    },\n    logout: () => {\n      cookies.remove('token', { path: '/' });\n      setToken(undefined);\n    },\n  };\n  return <Provider value={user}>{children}</Provider>;\n};\n\nexport const useUserContext = () => useContext(UserContext);\n\nexport default UserProvider;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState, createContext, useContext } from 'react';\n\nexport const AlertContext = createContext({\n  open: false,\n  message: '',\n  setOpen: () => {},\n  changeVisibility: () => {},\n  changeMessage: () => {},\n  showAlert: (newMessage, newVariant) => {\n    console.log(newMessage, newVariant);\n  },\n});\n\nconst AlertProvider = (props) => {\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [variant, setVariant] = useState(0); // success\n  const data = {\n    open,\n    message,\n    variant,\n    changeVisibility: (newOpen) => setOpen(newOpen),\n    changeMessage: (newMessage, newVariant = 'danger') => {\n      setOpen(false);\n      setMessage(newMessage);\n      setVariant(newVariant);\n    },\n    showAlert: (newMessage, newVariant) => {\n      data.changeMessage(newMessage, newVariant);\n      data.changeVisibility(true);\n    },\n  };\n  return <AlertContext.Provider value={data} {...props} />;\n};\n\nexport const useAlertContext = () => useContext(AlertContext);\n\nexport default AlertProvider;\n","import React, { createContext, useContext, useState } from 'react';\n\ninterface RefProviderProps {\n  refHabbit: boolean;\n  refLabel: boolean;\n  handleRefHabbit: Function;\n  handleRefLabel: Function;\n}\n\nconst RefreshContext = createContext<RefProviderProps>({\n  refHabbit: false,\n  refLabel: false,\n  handleRefHabbit: () => {},\n  handleRefLabel: () => {},\n});\n\nconst { Provider } = RefreshContext;\n\ntype RefProps = {\n  children: Object;\n};\n\nconst RefreshProvider = ({ children }: RefProps) => {\n  const [refHabbit, setRefHabbit] = useState(false);\n  const [refLabel, setRefLabel] = useState(false);\n\n  const refresh: RefProviderProps = {\n    refHabbit,\n    refLabel,\n    handleRefHabbit: () => setRefHabbit((prev) => !prev),\n    handleRefLabel: () => setRefLabel((prev) => !prev),\n  };\n\n  return <Provider value={refresh}>{children}</Provider>;\n};\n\nexport const useRefreshContext = () => useContext(RefreshContext);\n\nexport default RefreshProvider;\n","import styled from 'styled-components';\n// import { getKey } from 'utils/objectsFunctions';\n\n// const topLeft = css`\n//   top: 0;\n//   left: 0;\n// `;\n\n// const topRight = css`\n//   top: 0;\n//   right: 0;\n// `;\n\n// const bottomLeft = css`\n//   bottom: 0;\n//   left: 0;\n// `;\n\n// const bottomRight = css`\n//   bottom: 0;\n//   right: 0;\n// `;\n\n// interface Position {\n//   topLeft: FlattenSimpleInterpolation;\n//   topRight: FlattenSimpleInterpolation;\n//   bottomLeft: FlattenSimpleInterpolation;\n//   bottomRight: FlattenSimpleInterpolation;\n//   [key: string]: FlattenSimpleInterpolation;\n// }\n\n// const positionObject: Position = { topLeft, topRight, bottomLeft, bottomRight };\n\n// interface DotProps {\n//   topLeft?: boolean;\n//   topRight?: boolean;\n//   bottomLeft?: boolean;\n//   bottomRight?: boolean;\n//   [key: string]: boolean | undefined;\n// }\n\n/* background-color: ${({ theme, ...rest }) => theme.colors.nav[getKey(rest)]};\n  ${({ theme, ...rest }) => positionObject[getKey(rest)]} */\n\ninterface ClicableProps {\n  open: boolean;\n}\n\nexport const StyledNavButton = styled.button<ClicableProps>`\n  position: fixed;\n  height: ${({ theme }) => theme.sizes.nav};\n  width: ${({ theme }) => theme.sizes.nav};\n  top: ${({ theme }) => theme.margin.sm};\n  background-color: transparent;\n  border: none;\n  right: ${({ theme }) => theme.margin.sm};\n  padding: 0;\n  ${({ open }) => open && `transform: rotate(-45deg);`}\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StyledDot = styled.div<ClicableProps>`\n  width: ${({ theme }) => theme.sizes.dot};\n  height: ${({ theme }) => theme.sizes.dot};\n  border-radius: 50%;\n  position: absolute;\n  opacity: ${({ open }) => (open ? '0' : '1')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledTLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topLeft};\n  top: 0;\n  left: 0;\n`;\n\nexport const StyledTRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.topRight};\n  top: 0;\n  right: 0;\n`;\n\nexport const StyledBLDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomLeft};\n  bottom: 0;\n  left: 0;\n`;\n\nexport const StyledBRDot = styled(StyledDot)`\n  background-color: ${({ theme }) => theme.colors.nav.bottomRight};\n  bottom: 0;\n  right: 0;\n`;\n\nexport const StyledLine = styled.div<ClicableProps>`\n  position: absolute;\n  height: 3px;\n  width: ${({ theme }) => theme.sizes.nav};\n  background-color: ${({ theme }) => theme.colors.error.main};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `${theme.time.medium}ms`};\n`;\n\nexport const StyledRotatedLine = styled(StyledLine)<ClicableProps>`\n  transform: rotate(90deg);\n  top: 50%;\n`;\n","const path = {\n  DASHBOARD: '/',\n  CALENDAR: '/calendar',\n  LOGIN: '/login',\n  REGISTER: '/register',\n};\n\nexport default path;\n","import styled from 'styled-components';\n\nexport const FlexColCenter = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  padding: 0 1rem;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n`;\n\nexport const StyledContentWrapper = styled(FlexColCenter)`\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    margin-right: ${({ theme }) => theme.margin.l};\n  }\n`;\n\nexport const StyledHeader = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.l};\n  margin: ${({ theme }) => theme.margin.sm} 0;\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n\nexport const StyledDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: justify;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.l};\n  @media (max-width: ${({ theme }) => theme.media.phone.s}) {\n    font-size: ${({ theme }) => theme.font.sizes.sm};\n  }\n`;\n\nexport const StyledSeparator = styled.p`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  margin: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'components';\nimport paths from 'constants/paths';\nimport { FlexColCenter } from 'styles';\nimport {\n  StyledHeader,\n  StyledWrapper,\n  StyledDescription,\n  StyledSeparator,\n  StyledContentWrapper,\n} from './Dashboard.css';\n\nconst Dashboard = () => (\n  <Container>\n    <StyledWrapper>\n      <StyledContentWrapper>\n        <StyledHeader>Habbit tracker</StyledHeader>\n        <StyledDescription>\n          Track your progress in very simple and personalized app\n        </StyledDescription>\n      </StyledContentWrapper>\n      <FlexColCenter>\n        <Button as={Link} to={paths.REGISTER} size=\"m\">\n          Create account for free\n        </Button>\n        <StyledSeparator>or</StyledSeparator>\n        <Button as={Link} to={paths.LOGIN} size=\"m\">\n          Log in\n        </Button>\n      </FlexColCenter>\n    </StyledWrapper>\n  </Container>\n);\n\nexport default Dashboard;\n","/* eslint-disable prefer-const */\n\nexport const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nexport const weekDaysFull = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\nexport const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'Juny',\n  'Juni',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const getISODate = (date: Date) => date.toISOString().match(/\\d{4}-\\d{2}-\\d{2}/)![0];\n\nexport const getDayParsed = (date: Date) => {\n  let firstDay = date.getDay();\n\n  if (firstDay === 0) {\n    firstDay = 7;\n  }\n  firstDay -= 1;\n  return firstDay;\n};\n\nexport const generateParsedDate = (date: Date) => {\n  const [year, month, day] = [date.getFullYear(), date.getMonth(), date.getDate()];\n  return `${year}-${month < 9 ? `0${month + 1}` : month + 1}-${day < 10 ? `0${day}` : day}`;\n};\n\nexport const reversedParsedDate = (date: Date) =>\n  generateParsedDate(date).split('-').reverse().join('.');\n\nexport const generateWeek = (day: Date): [Date, Date] => {\n  const from = new Date(day.getTime());\n\n  from.setDate(day.getDate() - 3);\n  from.setHours(0, 0, 0, 0);\n\n  const to = new Date(day);\n  to.setDate(day.getDate() + 3);\n  to.setHours(0, 0, 0, 0);\n  return [from, to];\n};\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-loop-func */\nimport { getDayParsed } from 'constants/calendar';\nimport { useEffect, useState } from 'react';\n\nimport { CalendarTile, Event } from 'utils';\n\nconst useCalendar2 = (\n  events: Event[],\n  from: Date,\n  to: Date,\n  activeFrom: Date,\n  activeTo: Date,\n): [CalendarTile[]] => {\n  const [days, setDays] = useState<CalendarTile[]>([]);\n\n  useEffect(() => {\n    const startDate = new Date(from.getTime());\n    let day = 0;\n    const daysArray = [];\n    let flag = false;\n    let firstDay = -1;\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 7; j++) {\n        const filtered = events.filter(\n          (event) =>\n            new Date(event.dateStart) <= startDate &&\n            new Date(event.dateEnd) >= startDate &&\n            event.daysOfWeek.includes(getDayParsed(startDate)),\n        );\n        flag = false;\n        if (activeFrom <= startDate && startDate < activeTo) {\n          if (activeFrom.getTime() === startDate.getTime()) {\n            firstDay = getDayParsed(startDate);\n          }\n\n          flag = true;\n          day++;\n        }\n\n        daysArray.push({\n          id: i * 13 + j * 17,\n          day,\n          date: new Date(startDate.getTime()),\n          events: filtered,\n          active: flag,\n        });\n        startDate.setDate(startDate.getDate() + 1);\n      }\n    }\n    for (let i = 0; i < 6; i++) {\n      if (i < firstDay) {\n        daysArray.unshift({ id: i * 167 + 1, day: -1, events: [], active: true });\n      }\n    }\n\n    setDays(daysArray);\n  }, [events, from, to]);\n\n  return [days];\n};\n\nexport default useCalendar2;\n","import { useState, useEffect } from 'react';\n\ntype PromiseAnyReturn = () => Promise<any>;\n\ntype MultipleFunction = Function | PromiseAnyReturn;\n\ntype QueryReturn<T> = [Array<T>, boolean, string];\n\nfunction useQuery<T>(dependency: Array<any>, fn: MultipleFunction): QueryReturn<T> {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<Array<T>>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fn();\n        setData(response);\n      } catch (err) {\n        setError(err.message);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, dependency);\n\n  return [data, loading, error];\n}\n\nexport default useQuery;\n","import { MouseEventHandler } from 'react';\n\nexport type GridProps = {\n  days: CalendarTile[];\n  month: number;\n  year: number;\n  moveDate: Function;\n  handleDayChange: Function;\n};\n\nexport interface EventInterface {\n  daysOfWeek: number[];\n  title: string;\n  timeStart: string;\n  timeEnd: string;\n  dateStart: string;\n  dateEnd: string;\n  description?: string;\n}\n\nexport interface EventSend extends EventInterface {\n  label?: string;\n}\n\nexport interface Event extends EventInterface {\n  _id: string;\n  userId: string;\n  label?: Label;\n  checked?: [\n    {\n      day: number;\n      month: number;\n      year: number;\n      _id: string;\n    },\n  ];\n}\n\nexport interface LabelSend {\n  title: string;\n  color: string;\n}\n\nexport interface Label extends LabelSend {\n  _id: string;\n  userId: string;\n}\n\nexport type CalendarTile = {\n  day: number;\n  events: Event[];\n  id: number;\n  active?: boolean;\n  date?: Date;\n};\n\nexport enum SIDES {\n  LEFT = -1,\n  RIGHT = 1,\n}\n\nexport type NavProps = {\n  navId: string;\n  header: string;\n  moveDate: Function;\n  backToCalendar?: MouseEventHandler<HTMLHeadingElement>;\n};\n\nexport type DateTuple = [number, number, number];\n\nexport interface DayCardProps {\n  events: Event[];\n  header: string;\n  active: boolean;\n  labels: Label[];\n  date: DateTuple;\n}\n\nexport type TokenType = string | undefined;\n\nexport enum AlertTypes {\n  ERROR,\n  SUCCESS,\n}\n\nexport interface FormProps {\n  open: boolean;\n  handleClose: any;\n}\n\nexport interface FormWithLabels extends FormProps {\n  labels: Label[];\n}\n\nexport interface FormHabbit extends FormWithLabels {\n  event?: Event;\n}\n\nexport interface FormLabel extends FormProps {\n  label?: Label;\n}\nexport interface HabbitProps {\n  habbit: Event;\n  labels: Label[];\n  checked: boolean;\n  day: DateTuple;\n}\n\nexport interface GridViewProps {\n  days: CalendarTile[];\n  actualMonth: number;\n  moveDate: Function;\n  actualYear: number;\n  handleChangeView: Function;\n  labels: Label[];\n}\n\nexport interface LabelProps {\n  label: Label;\n  handleDelete: Function;\n  disabled: boolean;\n}\n","import { useState, useLayoutEffect } from \"react\";\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n};\n\nexport default useWindowSize;\n","export const createRequiredObject = (name: string) => ({\n  required: `Field ${name} is required.`,\n});\n\nexport const validatePattern = (pattern: RegExp) => ({\n  pattern: {\n    value: pattern,\n    message: 'Incorrect characters.',\n  },\n});\n\nexport const emailValidation = validatePattern(\n  // eslint-disable-next-line no-control-regex\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n);\n\nexport const createRestrictedLengthObject = (name: string) => ({\n  ...createRequiredObject(name),\n  minLength: {\n    value: 6,\n    message: `Field ${name} must have at least 6 characters.`,\n  },\n  maxLength: {\n    value: 30,\n    message: `Field ${name} must have maximum 30 characters.`,\n  },\n});\n\nconst timeValidFuntion = (timeLess: string | undefined, time: string | undefined) => {\n  const message = 'Your time is not in boundaries.';\n\n  if (timeLess && time) {\n    const [hours, minutes] = time.split(':');\n    const [hoursMin, minutesMin] = timeLess.split(':');\n    if (hoursMin < hours) {\n      return true;\n    }\n    if (hoursMin === hours) {\n      if (minutesMin < minutes) {\n        return true;\n      }\n      return message;\n    }\n    return message;\n  }\n  return message;\n};\n\nexport const createTimeValidation = (min: string | undefined, max: string | undefined) => ({\n  validate: {\n    min: (value: string) => timeValidFuntion(min, value),\n    max: (value: string) => timeValidFuntion(value, max),\n  },\n});\n","export enum AlertTypes {\n  ERROR = 'error',\n  LOADING = 'loading',\n}\n","import { useAlertContext } from 'context';\nimport { useCallback, useRef, useState } from 'react';\nimport { AlertTypes } from 'utils';\n\nconst { SUCCESS } = AlertTypes;\n\ninterface Options {\n  request: Function;\n  messageSuccess?: string;\n  refresh?: Function | Array<Function>;\n}\n\ntype ReturnTuple = [any, boolean];\n\nconst useMutation = (options: Options): ReturnTuple => {\n  const { request, messageSuccess, refresh } = options;\n\n  const [loading, setLoading] = useState(false);\n  const alertC = useRef(useAlertContext());\n\n  const mutate = useCallback(async (data: any) => {\n    setLoading(true);\n    try {\n      await request(data);\n\n      alertC.current.showAlert(messageSuccess, SUCCESS);\n      if (refresh) {\n        if (Array.isArray(refresh)) {\n          refresh.forEach((func) => func());\n        } else {\n          refresh();\n        }\n      }\n    } catch (err) {\n      alertC.current.showAlert(err.message);\n    }\n    setLoading(false);\n  }, []);\n\n  return [mutate, loading];\n};\n\nexport default useMutation;\n","import { useEffect, useState } from 'react';\n\nconst useDelete = (request: Function) => {\n  const [show, setShow] = useState(false);\n  const [canDelete, setCanDelete] = useState(false);\n\n  useEffect(() => {\n    const deleteRequest = async () => {\n      if (canDelete) {\n        try {\n          await request();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n    deleteRequest();\n  }, [canDelete]);\n\n  return {\n    show,\n    handleOpen: () => setShow(true),\n    handleClose: () => setShow(false),\n    handleDelete: () => setCanDelete(true),\n  };\n};\n\nexport default useDelete;\n","const APIurl = process.env.REACT_APP_BACKEND;\n\nconst DASHBOARD = `${APIurl}/`;\nconst USER = `${DASHBOARD}users/`;\nconst EVENTS = `${DASHBOARD}events/`;\nconst LABELS = `${DASHBOARD}labels/`;\n\nconst APIpaths = {\n  DASHBOARD,\n  LOGIN: `${USER}login/`,\n  REGISTER: `${USER}register/`,\n  LOGOUT: `${USER}logout/`,\n  EVENTS,\n  LABELS,\n};\n\nexport default APIpaths;\n","import styled from 'styled-components';\n\nexport const StyledCenter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  max-width: 100%;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    justify-content: flex-start;\n    padding-top: 0;\n  }\n`;\n\nexport const StyledButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTile = styled.button`\n  border: none;\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  height: ${({ theme }) => `${theme.gridTile.size}px`};\n  position: relative;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.common.white};\n\n  @media (min-width: ${({ theme }) => theme.media.phone.sm}) {\n    width: ${({ theme }) => `${theme.gridTile.size * 1.25}px`};\n    height: ${({ theme }) => `${theme.gridTile.size * 1.25}px`};\n  }\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    width: ${({ theme }) => `${theme.gridTile.size * 2.5}px`};\n    height: ${({ theme }) => `${theme.gridTile.size * 2.5}px`};\n  }\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\ntype CirlcleProps = {\n  size: number;\n  alone: boolean;\n  position: number;\n  color: string | undefined;\n};\n\nexport const StyledCircle = styled.div<CirlcleProps>`\n  position: absolute;\n  border-radius: 50%;\n  width: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  height: ${({ size, alone }) => (alone ? `${size / 1.3}px` : `${size}px`)};\n  background-color: ${({ color }) => color};\n  top: ${({ position }) => `${position}px`};\n  left: ${({ position }) => `${position}px`};\n  ${({ alone }) => alone && 'transform: translate(-50%,-50%);top: 50%;left:50%'}\n`;\n\nexport const StyledDay = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: ${({ theme }) => theme.zIndex.low};\n`;\n","import React, { MouseEventHandler } from 'react';\nimport { useThemeContext } from 'context';\n\nimport { useWindowSize } from 'hooks';\nimport { StyledCircle, StyledTile, StyledDay } from './CalendarTile.css';\n\nconst generateCircles = (colors: string[], edge: number) => {\n  const size = (edge * (1.3 + (colors.length - 2) * 0.1)) / colors.length;\n  const shift = (edge - size) / (colors.length - 1);\n  let position = -shift;\n  return colors.map((color) => {\n    position += shift;\n    return (\n      <StyledCircle\n        key={position}\n        position={position}\n        alone={colors.length === 1}\n        color={color}\n        size={size}\n      />\n    );\n  });\n};\n\ntype TileProps = {\n  colors?: string[];\n  day: number;\n  handleDayChange: Function;\n};\n\nconst CalendarTile = ({ colors, day, handleDayChange }: TileProps) => {\n  const {\n    gridTile: { size },\n  } = useThemeContext();\n  const [width] = useWindowSize();\n\n  return (\n    <StyledTile\n      data-testid={`${day}-tileDay`}\n      onClick={handleDayChange as MouseEventHandler<HTMLButtonElement>}\n    >\n      {day === -1 ? null : (\n        <>\n          {colors &&\n            generateCircles(\n              colors,\n              width >= 360 ? (width >= 768 ? size * 2.5 : size * 1.25) : size,\n            )}\n          <StyledDay data-testid=\"day\">{day}</StyledDay>\n        </>\n      )}\n    </StyledTile>\n  );\n};\n\nexport default CalendarTile;\n","import styled from 'styled-components';\n\nexport const StyledCalendar = styled.div`\n  margin-top: 5rem;\n`;\n\nexport const StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(0, 1fr));\n  grid-template-rows: auto;\n  max-width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-top: none;\n  background-color: #fff;\n`;\n\nexport const StyledDayGrid = styled(StyledGrid)`\n  background-color: ${({ theme }) => theme.colors.calendar.navigation};\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n  border-bottom: none;\n  justify-items: center;\n`;\n\nexport const StyledDay = styled.div`\n  width: ${({ theme }) => `${theme.gridTile.size}px`};\n  padding: ${({ theme }) => theme.margin.s};\n`;\n","import React from 'react';\nimport { weekDays, months } from 'constants/calendar';\nimport { GridProps } from 'utils';\nimport { CalendarTile, CalendarNavigation } from '..';\nimport { StyledGrid, StyledDay, StyledDayGrid, StyledCalendar } from './CalendarGrid.css';\n\nconst CalendarGrid = ({ days, month, year, moveDate, handleDayChange }: GridProps) => (\n  <StyledCalendar>\n    <CalendarNavigation navId=\"main\" header={`${months[month]} ${year}`} moveDate={moveDate} />\n    <StyledDayGrid>\n      {weekDays.map((day) => (\n        <StyledDay key={day}>{day}</StyledDay>\n      ))}\n    </StyledDayGrid>\n    <StyledGrid>\n      {days.map(({ id, day, events: eventsArr, date }) => (\n        <CalendarTile\n          key={id}\n          handleDayChange={() => handleDayChange(date)}\n          colors={eventsArr.map(({ label }) => {\n            if (label?.color) {\n              return label.color;\n            }\n            return '#dedede';\n          })}\n          day={day}\n        />\n      ))}\n    </StyledGrid>\n  </StyledCalendar>\n);\n\nexport default CalendarGrid;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: ${({ theme }) => theme.margin.s} 0;\n`;\n\nexport const StyledButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n`;\n\nexport const StyledTitle = styled.h3`\n  width: 200px;\n  text-align: center;\n  line-height: 100%;\n  margin: 0;\n  @media (min-width: ${({ theme }) => theme.media.tablet.s}) {\n    width: 400px;\n    font-size: ${({ theme }) => theme.font.sizes.ml};\n  }\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretLeft, faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SIDES, NavProps } from 'utils';\nimport { StyledNavigation, StyledButton, StyledTitle } from './CalendarNavigation.css';\n\nconst CalendarNavigation = ({ header, moveDate, navId, backToCalendar }: NavProps) => (\n  <StyledNavigation>\n    <StyledButton data-testid={`moveLeft-${navId}`} onClick={() => moveDate(SIDES.LEFT)}>\n      <FontAwesomeIcon icon={faCaretLeft} />\n    </StyledButton>\n    <StyledTitle onClick={backToCalendar} data-testid={`dateCalendar-${navId}`}>\n      {header}\n    </StyledTitle>\n    <StyledButton data-testid={`moveRight-${navId}`} onClick={() => moveDate(SIDES.RIGHT)}>\n      <FontAwesomeIcon icon={faCaretRight} />\n    </StyledButton>\n  </StyledNavigation>\n);\n\nexport default CalendarNavigation;\n","import styled from 'styled-components';\n\ninterface CardProps {\n  active: boolean;\n}\n\nexport const StyledCard = styled.div<CardProps>`\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.tile.backgroundActive : theme.colors.tile.background};\n  min-width: 275px;\n  min-height: 500px;\n  max-height: 500px;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  overflow-y: scroll;\n`;\n\nexport const StyledWeekDay = styled.h3`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin: ${({ theme }) => theme.margin.m} 0;\n  text-align: center;\n`;\n","import React from 'react';\nimport { DayCardProps } from 'utils';\nimport { StyledCard, StyledWeekDay } from './DayCard.css';\nimport { Habbit } from '..';\n\nconst DayCard = ({ events, header, active, labels, date }: DayCardProps) => {\n  const [yearA, monthA, dayA] = date;\n  return (\n    <StyledCard data-testid={`${yearA}-${monthA}-${dayA}`} active={active}>\n      <StyledWeekDay>{header}</StyledWeekDay>\n      {events.map((event) => (\n        <Habbit\n          key={event._id}\n          habbit={event}\n          labels={labels}\n          day={date}\n          checked={\n            event?.checked?.findIndex(\n              ({ day, month, year }) => day === dayA && monthA === month && year === yearA,\n            ) !== -1\n          }\n        />\n      ))}\n    </StyledCard>\n  );\n};\n\nexport default DayCard;\n","import APIpaths from 'constants/APIpaths';\nimport { DateTuple, EventSend, LabelSend, TokenType } from 'utils';\n\nexport const getData = async (url: string, token: TokenType) => {\n  const response = await fetch(url, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'GET',\n  });\n\n  if (response.status === 200) {\n    return response.json();\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const postEvent = async (token: string | undefined, event: EventSend, id?: string) => {\n  const response = await fetch(`${APIpaths.EVENTS}${id ? `${id}/` : ''}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: id ? 'PUT' : 'POST',\n    body: JSON.stringify(event),\n  });\n\n  if (response.status === 201) {\n    return true;\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const postLabel = async (token: string | undefined, label: LabelSend, id?: string) => {\n  const response = await fetch(`${APIpaths.LABELS}${id ? `${id}/` : ''}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: id ? 'PUT' : 'POST',\n    body: JSON.stringify(label),\n  });\n  if (response.status === 200 && id) {\n    return response.json();\n  }\n  if (response.status === 201) {\n    return true;\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const deleteLabel = async (token: string | undefined, id: string) => {\n  const response = await fetch(`${APIpaths.LABELS}${id}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'DELETE',\n  });\n\n  if (response.status === 204) {\n    return true;\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const deleteEvent = async (token: string | undefined, id: string) => {\n  const response = await fetch(`${APIpaths.EVENTS}${id}`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'DELETE',\n  });\n\n  if (response.status === 204) {\n    return true;\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n\nexport const checkEvent = async (token: string | undefined, id: string, day: DateTuple) => {\n  const response = await fetch(`${APIpaths.EVENTS}check/${id}/`, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'PATCH',\n    body: JSON.stringify(day),\n  });\n\n  if (response.status === 200) {\n    return response.json();\n  }\n\n  const { message } = await response.json();\n  throw new Error(message);\n};\n","import styled, { css } from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n`;\n\ninterface LabelProps {\n  color: string;\n}\n\nexport const StyledLabel = styled.small<LabelProps>`\n  background-color: ${({ color }) => color};\n  padding: ${({ theme }) => theme.margin.s};\n  width: auto;\n  border-radius: 20px;\n`;\n\ninterface HabbitProps {\n  checked?: boolean;\n}\n\nconst checkedStyles = css`\n  text-decoration: line-through;\n  color: gray;\n`;\n\nexport const StyledHabbit = styled.div<HabbitProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0 ${({ theme }) => theme.margin.s};\n  border-left: 1px solid ${({ theme }) => theme.colors.tile.border};\n  margin: 0 ${({ theme }) => theme.margin.s};\n  margin-top: ${({ theme }) => theme.margin.xs};\n\n  &:hover {\n    ${() => navigator.onLine && 'cursor: pointer'};\n  }\n\n  ${({ checked }) => checked && checkedStyles};\n`;\n\nexport const StyledTitle = styled.h2`\n  font-size: ${({ theme }) => theme.font.sizes.ml};\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n  margin-top: 0;\n`;\n\nexport const StyledTime = styled.p`\n  color: gray;\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: justify;\n`;\n","import React, { useState } from 'react';\nimport { Button, DeleteModal } from 'components';\nimport { HabbitProps } from 'utils';\nimport { useMutation, useDelete } from 'hooks';\nimport { useUserContext, useRefreshContext } from 'context';\nimport { checkEvent, deleteEvent } from 'views/CalendarPage/CalendarPage.api';\nimport { HabbitForm } from '..';\nimport {\n  StyledHabbit,\n  StyledTime,\n  StyledDescription,\n  StyledTitle,\n  StyledContainer,\n  StyledLabel,\n} from './Habbit.css';\n\nconst Habbit = ({ habbit, labels, checked, day }: HabbitProps) => {\n  const { title, timeEnd, timeStart, description, label, _id } = habbit;\n\n  const [open, setOpen] = useState(false);\n  const { token } = useUserContext();\n\n  const { handleRefHabbit } = useRefreshContext();\n\n  const [mutate, loading] = useMutation({\n    request: () => deleteEvent(token, _id),\n    refresh: handleRefHabbit,\n    messageSuccess: 'Successfully deleted habbit.',\n  });\n  const [mutateCheck, loadingC] = useMutation({\n    request: () => checkEvent(token, _id, day),\n    refresh: handleRefHabbit,\n    messageSuccess: 'Successful state change.',\n  });\n\n  const { handleOpen, show, handleClose, handleDelete } = useDelete(mutate);\n\n  return (\n    <>\n      <DeleteModal open={show} handleClose={handleClose} handleDelete={handleDelete} />\n      <StyledContainer>\n        <Button\n          size=\"s\"\n          mx=\"0.75rem\"\n          disabled={!navigator.onLine || loading || loadingC}\n          noMaxWidth\n          data-testid=\"edit\"\n          onClick={() => setOpen(true)}\n        >\n          Edit habbit\n        </Button>\n        <Button\n          size=\"s\"\n          close\n          noMaxWidth\n          disabled={!navigator.onLine || loading || loadingC}\n          data-testid=\"delete\"\n          onClick={handleOpen}\n        >\n          X\n        </Button>\n        <StyledHabbit\n          data-testid={`habbit${_id}`}\n          checked={checked}\n          onClick={navigator.onLine && !loading && !loadingC ? () => mutateCheck() : () => {}}\n        >\n          {label && <StyledLabel color={label.color}>{label.title}</StyledLabel>}\n          <StyledTitle>{title}</StyledTitle>\n          <StyledTime>{`${timeStart}-${timeEnd}`}</StyledTime>\n          <StyledDescription>{description}</StyledDescription>\n        </StyledHabbit>\n        <HabbitForm open={open} handleClose={() => setOpen(false)} labels={labels} event={habbit} />\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default Habbit;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  overflow-x: scroll;\n`;\n","import React, { useLayoutEffect, useRef, useState } from 'react';\nimport { Label, CalendarTile } from 'utils';\nimport { useWindowSize } from 'hooks';\n\nimport { getDayParsed, weekDaysFull } from 'constants/calendar';\nimport { StyledWrapper } from './DayCardWrapper.css';\nimport { DayCard } from '..';\n\ninterface DayCardWrapperProps {\n  days: CalendarTile[];\n  labels: Label[];\n  dateClicked: Date;\n}\n\nconst shouldScroll = (\n  days: CalendarTile[],\n  wrapper: React.RefObject<HTMLDivElement>,\n  width: number,\n) => {\n  if (days.length > 1) {\n    if (wrapper && wrapper.current) {\n      if (wrapper.current.scrollWidth > width) {\n        const scroll = wrapper.current.scrollWidth / 2 - width / 2;\n        wrapper?.current?.scroll(scroll, 0);\n      }\n    }\n  }\n};\n\nconst DayCardWrapper = ({ days, labels, dateClicked }: DayCardWrapperProps) => {\n  const wrapper = useRef<HTMLDivElement>(null);\n  const [width] = useWindowSize();\n  const [prevDaysLength, setPrevDaysLength] = useState(days.length);\n\n  useLayoutEffect(() => {\n    shouldScroll(days, wrapper, width);\n  }, [dateClicked, wrapper]);\n\n  useLayoutEffect(() => {\n    if (prevDaysLength === 0) {\n      shouldScroll(days, wrapper, width);\n    }\n    setPrevDaysLength(days.length);\n  }, [days, wrapper]);\n\n  return (\n    <>\n      <StyledWrapper ref={wrapper}>\n        {days.map(({ events: eventsArr, id, date }) => {\n          const today = new Date();\n          today.setHours(0, 0, 0, 0);\n          if (date) {\n            return (\n              <DayCard\n                active={today.getTime() === date?.getTime()}\n                key={id}\n                header={weekDaysFull[getDayParsed(date)]}\n                events={eventsArr}\n                labels={labels}\n                date={[date.getFullYear(), date.getMonth(), date.getDate()]}\n              />\n            );\n          }\n          return null;\n        })}\n      </StyledWrapper>\n    </>\n  );\n};\n\nexport default DayCardWrapper;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React, { useEffect, useCallback } from 'react';\nimport { PopUp, Input, Button, DateInput, Select } from 'components';\nimport { FieldError, useForm } from 'react-hook-form';\nimport { useMutation } from 'hooks';\nimport { EventSend, createRestrictedLengthObject, FormHabbit, createTimeValidation } from 'utils';\nimport { useUserContext, useRefreshContext } from 'context';\nimport { postEvent } from 'views/CalendarPage/CalendarPage.api';\nimport { StyledWrapper } from './HabbitForm.css';\nimport { WeekDaysInput } from '..';\n\nconst HabbitForm = ({ handleClose, open, labels, event }: FormHabbit) => {\n  const { register, handleSubmit, errors, control, reset, watch } = useForm<EventSend>({\n    defaultValues: {\n      timeStart: '00:10',\n      timeEnd: '23:50',\n      label: '',\n      daysOfWeek: [],\n      dateStart: '',\n      dateEnd: '',\n    },\n  });\n\n  const { token } = useUserContext();\n  const { handleRefHabbit } = useRefreshContext();\n\n  const [mutate, loading] = useMutation({\n    request: (data: EventSend) => postEvent(token, data, event?._id),\n    refresh: [handleClose, handleRefHabbit],\n    messageSuccess: `Succesfuly ${event?._id ? 'edited' : 'added'} habbit.`,\n  });\n\n  useEffect(() => {\n    let defaultValues = {};\n    if (event) {\n      const { label, dateStart, dateEnd } = event;\n      defaultValues = {\n        ...event,\n        label: label?._id,\n        dateStart: new Date(dateStart),\n        dateEnd: new Date(dateEnd),\n      };\n      reset(defaultValues);\n    }\n  }, [event]);\n\n  const onSubmit = async (data: EventSend) => mutate(data);\n\n  const dateStart = watch('dateStart') ? new Date(watch('dateStart')) : undefined;\n  const dateEnd = watch('dateEnd') ? new Date(watch('dateEnd')) : undefined;\n\n  const datePlus7 = useCallback((datePassed, diff) => {\n    if (datePassed) {\n      const date = new Date(datePassed.getTime());\n      date.setDate(date.getDate() + diff);\n      return date;\n    }\n    return undefined;\n  }, []);\n\n  return (\n    <PopUp open={open} handleClose={handleClose} header=\"Add habbit\" disabled={loading}>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Input\n          name=\"title\"\n          label=\"Title\"\n          id=\"title\"\n          refVal={register(createRestrictedLengthObject('title'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.title}\n          data-testid=\"title\"\n        />\n        <Input\n          name=\"description\"\n          label=\"Description\"\n          id=\"description\"\n          refVal={register()}\n          error={errors.description}\n          data-testid=\"description\"\n          type=\"textarea\"\n        />\n        <WeekDaysInput control={control} error={(errors.daysOfWeek as unknown) as FieldError} />\n        <DateInput\n          control={control}\n          name=\"dateStart\"\n          header=\"Date start\"\n          maxDate={datePlus7(dateEnd, -7)}\n          error={errors.dateStart}\n        />\n        <DateInput\n          control={control}\n          name=\"dateEnd\"\n          header=\"Date end\"\n          minDate={datePlus7(dateStart, 7)}\n          error={errors.dateEnd}\n        />\n        <Input\n          name=\"timeStart\"\n          label=\"Time start\"\n          id=\"timeStart\"\n          refVal={register(createTimeValidation('00:00', watch('timeEnd')))}\n          error={errors.timeStart}\n          type=\"time\"\n          data-testid=\"timeStart\"\n        />\n        <Input\n          name=\"timeEnd\"\n          label=\"Time end\"\n          id=\"timeEnd\"\n          refVal={register(createTimeValidation(watch('timeStart'), '23:59'))}\n          error={errors.timeStart}\n          type=\"time\"\n          data-testid=\"timeEnd\"\n        />\n        <Select\n          name=\"label\"\n          label=\"Label\"\n          control={control}\n          options={labels?.map(({ _id, title, ...rest }) => ({ key: _id, value: title, ...rest }))}\n        />\n        <Button size=\"s\" mt=\"16px\" type=\"submit\" disabled={loading} data-testid=\"submit\">\n          Send\n        </Button>\n      </StyledWrapper>\n    </PopUp>\n  );\n};\n\nexport default HabbitForm;\n","import styled from 'styled-components';\n\ntype InputProps = {\n  error: boolean;\n};\n\nexport const StyledInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => theme.margin.sm};\n  width: 100%;\n  max-width: 300px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.s};\n`;\n\nexport const StyledInput = styled.input<InputProps>`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  width: 100%;\n  max-width: 300px;\n  border: ${({ error, theme }) => error && `1px solid ${theme.colors.error.main}`};\n  &:focus {\n    outline: thin dotted;\n  }\n`;\n\nexport const StyledTextArea = styled.textarea<InputProps>`\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  width: 100%;\n  max-width: 300px;\n  border: ${({ error, theme }) => error && `1px solid ${theme.colors.error.main}`};\n  &:focus {\n    outline: thin dotted;\n  }\n`;\n\nexport const StyledMessage = styled.p`\n  margin-top: ${({ theme }) => theme.margin.xs};\n  color: ${({ theme }) => theme.colors.error.main};\n  text-align: justify;\n`;\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n`;\n\ninterface WeekDayProps {\n  active: boolean;\n}\n\nexport const StyledWeekDay = styled.div<WeekDayProps>`\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.tile.background : theme.colors.common.white};\n  border: 1px solid black;\n  height: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n`;\n","import React from 'react';\nimport { Controller, Control, FieldError } from 'react-hook-form';\nimport { StyledLabel, StyledInputWrapper, StyledMessage } from 'components/Input/Input.css';\nimport { weekDays } from 'constants/calendar';\nimport { StyledWeekDay, StyledSelect } from './WeekDaysInput.css';\n\ninterface WeekInputProps {\n  control: Control<Record<string, any>>;\n  error?: FieldError | undefined;\n}\n\nconst WeekDaysInput = ({ control, error }: WeekInputProps) => (\n  <StyledInputWrapper>\n    <StyledLabel>Week days</StyledLabel>\n    <Controller\n      name=\"daysOfWeek\"\n      control={control}\n      rules={{\n        validate: (value) => {\n          const message = 'Min. 1 week day is required.';\n          return value ? value.length !== 0 || message : message;\n        },\n      }}\n      render={({ onChange, value }) => (\n        <StyledSelect>\n          {weekDays.map((weekDay, i) => (\n            <StyledWeekDay\n              active={value?.includes(i)}\n              onClick={() => {\n                const selected = i;\n                if (value) {\n                  let copy = [...value];\n                  copy = copy.filter((day) => day !== selected);\n                  if (copy.length === value.length) {\n                    copy.push(selected);\n                  }\n\n                  onChange(copy);\n                } else {\n                  onChange([selected]);\n                }\n              }}\n              key={weekDay}\n              data-testid={weekDay}\n            >\n              {weekDay}\n            </StyledWeekDay>\n          ))}\n        </StyledSelect>\n      )}\n    />\n    {error && <StyledMessage>{error?.message}</StyledMessage>}\n  </StyledInputWrapper>\n);\n\nexport default WeekDaysInput;\n","import React from 'react';\nimport { PopUp, Button, Input } from 'components';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useUserContext, useRefreshContext } from 'context';\nimport { FormLabel, LabelSend, createRestrictedLengthObject } from 'utils';\nimport { SketchPicker } from 'react-color';\nimport { StyledWrapper } from 'views/CalendarPage/components/HabbitForm/HabbitForm.css';\nimport { postLabel } from 'views/CalendarPage/CalendarPage.api';\nimport { useMutation } from 'hooks';\n\nconst LabelForm = ({ handleClose, open, label }: FormLabel) => {\n  const { register, handleSubmit, errors, control } = useForm<LabelSend>({\n    defaultValues: { color: '#50E3C2', ...label },\n  });\n  const { token } = useUserContext();\n\n  const { handleRefLabel } = useRefreshContext();\n\n  const [mutate, loading] = useMutation({\n    request: (data: LabelSend) => postLabel(token, data, label?._id),\n    refresh: [handleClose, handleRefLabel],\n    messageSuccess: `Succesfuly ${label?._id ? 'edited' : 'added'} label.`,\n  });\n\n  const onSubmit = async (data: LabelSend) => mutate(data);\n\n  return (\n    <PopUp\n      open={open}\n      handleClose={handleClose}\n      header=\"Add label\"\n      fullHeight={!!label?._id}\n      disabled={loading}\n    >\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Input\n          name=\"title\"\n          label=\"Title\"\n          id=\"title\"\n          refVal={register(createRestrictedLengthObject('title'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.title}\n          data-testid=\"title\"\n        />\n        <Controller\n          name=\"color\"\n          control={control}\n          render={({ onChange, value }) => (\n            <SketchPicker color={value} onChangeComplete={(color) => onChange(color.hex)} />\n          )}\n        />\n        <Button disabled={loading} size=\"s\" mt=\"16px\" type=\"submit\" data-testid=\"submit\">\n          Send\n        </Button>\n      </StyledWrapper>\n    </PopUp>\n  );\n};\n\nexport default LabelForm;\n","import React from 'react';\nimport { useUserContext, useRefreshContext } from 'context';\nimport { PopUp } from 'components';\nimport { FormWithLabels } from 'utils';\nimport { deleteLabel } from 'views/CalendarPage/CalendarPage.api';\nimport { useMutation } from 'hooks';\nimport { Label } from '..';\n\nconst LabelList = ({ handleClose, open, labels }: FormWithLabels) => {\n  const { token } = useUserContext();\n\n  const { handleRefHabbit, handleRefLabel } = useRefreshContext();\n\n  const [mutate, loading] = useMutation({\n    request: (id: string) => deleteLabel(token, id),\n    refresh: [handleRefLabel, handleRefHabbit],\n    messageSuccess: 'Succesfuly deleted label.',\n  });\n\n  const handleDelete = (id: string) => mutate(id);\n\n  return (\n    <PopUp open={open} handleClose={handleClose} header=\"Label list\" disabled={loading}>\n      <>\n        {labels?.map((label) => (\n          <Label label={label} key={label._id} disabled={loading} handleDelete={handleDelete} />\n        ))}\n      </>\n    </PopUp>\n  );\n};\n\nexport default LabelList;\n","import React, { useState } from 'react';\nimport { Button } from 'components';\nimport { StyledButtonWrapper } from 'views/CalendarPage/CalendarPage.css';\nimport { GridViewProps } from 'utils';\nimport { CalendarGrid, HabbitForm, LabelForm, LabelList } from '..';\n\nconst CalendarGridView = ({\n  days,\n  actualMonth,\n  moveDate,\n  actualYear,\n  handleChangeView,\n  labels,\n}: GridViewProps) => {\n  const [openHabbitForm, setOpenHabbitForm] = useState(false);\n  const [openLabelForm, setOpenLabelForm] = useState(false);\n  const [openLabelList, setOpenLabelList] = useState(false);\n\n  return (\n    <>\n      <CalendarGrid\n        days={days}\n        month={actualMonth}\n        moveDate={moveDate}\n        year={actualYear}\n        handleDayChange={handleChangeView}\n      />\n      <StyledButtonWrapper>\n        <Button\n          size=\"s\"\n          noMaxWidth\n          mt=\"16px\"\n          data-testid=\"addh\"\n          disabled={!navigator.onLine}\n          onClick={() => setOpenHabbitForm(true)}\n        >\n          Add habbit\n        </Button>\n        <Button\n          size=\"s\"\n          noMaxWidth\n          mt=\"16px\"\n          disabled={!navigator.onLine}\n          mx=\"16px\"\n          data-testid=\"addl\"\n          onClick={() => setOpenLabelForm(true)}\n        >\n          Add label\n        </Button>\n        <Button\n          size=\"s\"\n          noMaxWidth\n          mt=\"16px\"\n          data-testid=\"labell\"\n          onClick={() => setOpenLabelList(true)}\n        >\n          Label list\n        </Button>\n      </StyledButtonWrapper>\n      <HabbitForm\n        open={openHabbitForm}\n        handleClose={() => setOpenHabbitForm(false)}\n        labels={labels}\n      />\n      <LabelForm open={openLabelForm} handleClose={() => setOpenLabelForm(false)} />\n      <LabelList open={openLabelList} handleClose={() => setOpenLabelList(false)} labels={labels} />\n    </>\n  );\n};\n\nexport default CalendarGridView;\n","import styled from 'styled-components';\n\nexport const StyledLabelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: ${({ theme }) => theme.margin.s};\n  padding-top: 0;\n`;\n\nexport const StyledButtonContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.margin.xs};\n`;\n","import React, { useState } from 'react';\nimport { Button, DeleteModal } from 'components';\nimport { StyledLabel } from 'views/CalendarPage/components/Habbit/Habbit.css';\nimport { useDelete } from 'hooks';\nimport { LabelProps } from 'utils';\nimport { LabelForm } from '..';\nimport { StyledButtonContainer, StyledLabelContainer } from './Label.css';\n\nconst Label = ({ label, handleDelete, disabled }: LabelProps) => {\n  const { _id, color, title } = label;\n  const [openL, setOpenL] = useState(false);\n\n  const { handleOpen, show, handleClose, handleDelete: handleRemove } = useDelete(() =>\n    handleDelete(_id),\n  );\n  return (\n    <>\n      <DeleteModal open={show} handleClose={handleClose} handleDelete={handleRemove} />\n      <StyledLabelContainer key={_id}>\n        <StyledButtonContainer>\n          <Button\n            size=\"s\"\n            mr=\"0.75rem\"\n            disabled={!navigator.onLine || disabled}\n            noMaxWidth\n            data-testid=\"edit\"\n            onClick={() => setOpenL(true)}\n          >\n            Edit label\n          </Button>\n          <Button\n            size=\"s\"\n            disabled={!navigator.onLine || disabled}\n            close\n            noMaxWidth\n            data-testid={`delete${_id}`}\n            onClick={handleOpen}\n          >\n            X\n          </Button>\n        </StyledButtonContainer>\n        <StyledLabel color={color}>{title}</StyledLabel>\n        <LabelForm handleClose={() => setOpenL(false)} open={openL} label={label} />\n      </StyledLabelContainer>\n    </>\n  );\n};\n\nexport default Label;\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport React, { useState, useMemo } from 'react';\nimport { Alert } from 'components';\nimport { useUserContext, useRefreshContext } from 'context';\nimport { getISODate, generateWeek, reversedParsedDate } from 'constants/calendar';\nimport { useQuery, useCalendar } from 'hooks';\nimport { SIDES } from 'utils';\nimport { CalendarTile, Event, Label } from 'utils/types';\nimport APIpaths from 'constants/APIpaths';\nimport { StyledCenter } from './CalendarPage.css';\nimport { DayCardWrapper, CalendarGridView } from './components';\nimport { getData } from './CalendarPage.api';\n\nconst CalendarPage = () => {\n  const [date, setDate] = useState(new Date());\n  const [movingDate, setMovingDate] = useState(new Date());\n\n  const [dateFrom, dateTo, firstDayOfMonth, lastDayOfMonth] = useMemo(() => {\n    const actualMonth = date.getMonth();\n    const actualYear = date.getFullYear();\n    const dateFrom = new Date(actualYear, actualMonth, 1);\n    dateFrom.setDate(dateFrom.getDate() - 7);\n    const daysInMonth = 33 - new Date(actualYear, actualMonth, 32).getDate();\n    const dateTo = new Date(actualYear, actualMonth, daysInMonth);\n    const lastDayOfMonth = new Date(actualYear, actualMonth, daysInMonth);\n    const firstDayOfMonth = new Date(actualYear, actualMonth, 1);\n    dateTo.setDate(dateTo.getDate() + 6);\n    return [dateFrom, dateTo, firstDayOfMonth, lastDayOfMonth];\n  }, [date]);\n\n  const { token } = useUserContext();\n\n  const { refHabbit, refLabel } = useRefreshContext();\n  const urlEvents = useMemo(\n    () => `${APIpaths.EVENTS}?from=${getISODate(firstDayOfMonth)}&to=${getISODate(lastDayOfMonth)}`,\n    [firstDayOfMonth, lastDayOfMonth],\n  );\n\n  const [events, loadingE, errorE] = useQuery<Event>(\n    [firstDayOfMonth, lastDayOfMonth, token, refHabbit, refLabel],\n    () => getData(urlEvents, token),\n  );\n\n  const [labels, loadingL, errorL] = useQuery<Label>([token, refLabel], () =>\n    getData(APIpaths.LABELS, token),\n  );\n\n  const [days]: [CalendarTile[]] = useCalendar(\n    events,\n    dateFrom,\n    dateTo,\n    firstDayOfMonth,\n    lastDayOfMonth,\n  );\n\n  const moveDate = (side: SIDES) => {\n    if (side === SIDES.LEFT) {\n      setDate((prevDate) => {\n        const newDate = new Date(prevDate.getTime());\n        return new Date(newDate.setMonth(newDate.getMonth() - 1));\n      });\n      setMovingDate((prevDate) => {\n        const newDate = new Date(prevDate.getTime());\n        return new Date(newDate.setMonth(newDate.getMonth() - 1));\n      });\n    } else {\n      setDate((prevDate) => {\n        const newDate = new Date(prevDate.getTime());\n        return new Date(newDate.setMonth(newDate.getMonth() + 1));\n      });\n      setMovingDate((prevDate) => {\n        const newDate = new Date(prevDate.getTime());\n        return new Date(newDate.setMonth(newDate.getMonth() + 1));\n      });\n    }\n  };\n\n  const handleChangeView = (day?: Date) => {\n    if (day) {\n      setMovingDate(day);\n    }\n  };\n\n  const [fromWeek, toWeek] = generateWeek(movingDate);\n\n  return (\n    <StyledCenter>\n      <CalendarGridView\n        moveDate={moveDate}\n        days={days.filter(({ active }) => active)}\n        actualMonth={date.getMonth()}\n        actualYear={date.getFullYear()}\n        handleChangeView={handleChangeView}\n        labels={labels}\n      />\n      <Alert loading={loadingE || loadingL} error={errorE || errorL} />\n      <h2>{`${reversedParsedDate(fromWeek)} - ${reversedParsedDate(toWeek)}`}</h2>\n      <DayCardWrapper\n        days={days.filter(({ date }) => date && date >= fromWeek && date <= toWeek)}\n        labels={labels}\n        dateClicked={movingDate}\n      />\n    </StyledCenter>\n  );\n};\n\nexport default CalendarPage;\n","import styled from 'styled-components';\nimport { FlexColCenter } from 'styles';\n\nexport const StyledWrapper = styled(FlexColCenter)`\n  height: 100vh;\n  width: 100%;\n  &::last-child {\n    margin-bottom: 0;\n  }\n`;\n","import APIpaths from 'constants/APIpaths';\n\nexport type LoginInputs = {\n  login: string;\n  password: string;\n  [key: string]: string;\n};\n\nexport const loginUser = async (data: LoginInputs) => {\n  const response = await fetch(APIpaths.LOGIN, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRestrictedLengthObject } from 'utils';\nimport { StyledWrapper } from './LoginPage.css';\nimport { loginUser, LoginInputs } from './LoginPage.api';\n\nconst LoginPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<LoginInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: LoginInputs) => {\n    setLoading(true);\n    try {\n      const response = await loginUser(data);\n      setLoading(false);\n      user.login(response.token);\n      history.push(paths.CALENDAR);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  return user.token ? (\n    <Redirect to={paths.CALENDAR} />\n  ) : (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" mt=\"16px\" type=\"submit\" data-testid=\"submit\">\n          Log in\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import APIpaths from 'constants/APIpaths';\n\nexport interface RegisterInputs {\n  login: string;\n  password: string;\n  email: string;\n}\n\nexport interface RegisterFormInputs extends RegisterInputs {\n  passwordRepeat: string;\n  [key: string]: string;\n}\n\nexport const registerUser = async (data: RegisterInputs) => {\n  const response = await fetch(APIpaths.REGISTER, {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import { Dashboard, LoginPage, CalendarPage, RegisterPage } from 'views';\nimport paths from './paths';\n\nconst { DASHBOARD, CALENDAR, LOGIN, REGISTER } = paths;\n\ninterface Route {\n  link: string;\n  name: string;\n}\n\nexport const routes: Array<Route> = [\n  { link: DASHBOARD, name: 'Home page' },\n  { link: CALENDAR, name: 'Your tracker' },\n  { link: LOGIN, name: 'Login' },\n  { link: REGISTER, name: 'Register' },\n];\n\nconst routesForRouter = [\n  {\n    path: DASHBOARD,\n    Component: Dashboard,\n    exact: true,\n  },\n  {\n    path: CALENDAR,\n    Component: CalendarPage,\n    isPrivate: true,\n  },\n  { path: LOGIN, Component: LoginPage },\n  { path: REGISTER, Component: RegisterPage },\n];\n\nexport default routesForRouter;\n","import React, { useState } from 'react';\nimport { Input, Container, Button, Alert } from 'components';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport paths from 'constants/paths';\nimport { useUserContext } from 'context';\nimport { createRequiredObject, createRestrictedLengthObject, emailValidation } from 'utils';\nimport { StyledWrapper } from 'views/LoginPage/LoginPage.css';\nimport { registerUser, RegisterFormInputs } from './RegisterPage.api';\n\nconst RegisterPage = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const user = useUserContext();\n\n  const { register, handleSubmit, errors } = useForm<RegisterFormInputs>();\n  const history = useHistory();\n\n  const onSubmit = async (data: RegisterFormInputs) => {\n    if (data.password === data.passwordRepeat) {\n      setLoading(true);\n      try {\n        const response = await registerUser(data);\n        setLoading(false);\n        user.login(response.token);\n        history.push(paths.CALENDAR);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    } else {\n      setError('Passwords must be equal.');\n    }\n  };\n\n  return user.token ? (\n    <Redirect to={paths.CALENDAR} />\n  ) : (\n    <Container>\n      <StyledWrapper as=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <h2>Create new account</h2>\n        <Input\n          name=\"login\"\n          label=\"Login\"\n          id=\"login\"\n          refVal={register(createRestrictedLengthObject('login'))}\n          minLength={6}\n          maxLength={30}\n          error={errors.login}\n          data-testid=\"login\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          id=\"email\"\n          type=\"email\"\n          refVal={register({ ...createRequiredObject('email'), ...emailValidation })}\n          error={errors.email}\n          data-testid=\"email\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.password}\n          data-testid=\"password\"\n        />\n        <Input\n          name=\"passwordRepeat\"\n          label=\"Repeat password\"\n          id=\"passwordRepeat\"\n          type=\"password\"\n          refVal={register(createRestrictedLengthObject('repeat password'))}\n          autoComplete=\"on\"\n          minLength={6}\n          maxLength={30}\n          error={errors.passwordRepeat}\n          data-testid=\"passwordRepeat\"\n        />\n        <Alert error={error} loading={loading} />\n        <Button size=\"m\" type=\"submit\" data-testid=\"submit\">\n          Create account\n        </Button>\n      </StyledWrapper>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import APIpaths from 'constants/APIpaths';\nimport { TokenType } from 'utils';\n\nexport const logoutUser = async (token: TokenType) => {\n  const response = await fetch(APIpaths.LOGOUT, {\n    headers: { 'Content-Type': 'application/json', Authorization: `${token}` },\n    method: 'POST',\n  });\n  if (response.status === 200) {\n    return response.json();\n  }\n  const { message } = await response.json();\n  throw new Error(message || 'Something went wrong');\n};\n","import styled from 'styled-components';\n\ninterface ButtonProps {\n  size?: string;\n  noMaxWidth?: boolean;\n  as?: any;\n  mt?: string;\n  mx?: string;\n  mr?: string;\n  close?: boolean;\n}\n\nconst Button = styled.button<ButtonProps>`\n  color: ${({ theme }) => theme.colors.common.black};\n  background-color: ${({ theme, close }) =>\n    close ? theme.colors.error.main : theme.colors.button.background};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  padding: ${({ theme, size }) => (size ? theme.margin[size] : theme.margin.s)};\n  font-size: ${({ theme, size }) => (size ? theme.font.sizes[size] : theme.font.sizes.s)};\n  min-width: ${({ noMaxWidth }) => (noMaxWidth ? 'none' : '150px')};\n  display: inline-block;\n  text-align: center;\n  margin-top: ${({ mt }) => mt || 0};\n  margin-left: ${({ mx }) => mx || 0};\n  margin-right: ${({ mx, mr }) => mr || mx || 0};\n  &:hover {\n    cursor: pointer;\n  }\n  &:disabled {\n    filter: grayscale(1);\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Button from '../../../Button';\n\ninterface ClicableProps {\n  open: boolean;\n}\n\ninterface LinkProps {\n  onClick: Function;\n  open: boolean;\n}\n\nexport const StyledOpenNav = styled.nav<ClicableProps>`\n  transform: ${({ open }) => `scale(${open ? '1' : '0'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme }) => `opacity ${theme.time.medium}ms`};\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  position: fixed;\n  background-color: ${({ theme }) => theme.colors.nav.background};\n  z-index: ${({ theme }) => theme.zIndex.medium};\n`;\n\nexport const StyledButton = styled(Button)`\n  position: absolute;\n  bottom: ${({ theme }) => theme.margin.m};\n  right: ${({ theme }) => theme.margin.m};\n`;\n\nexport const StyledContainner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const StyledLink = styled(Link)<LinkProps>`\n  color: ${({ theme }) => theme.colors.text.nav};\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.font.sizes.m};\n  margin-bottom: ${({ theme }) => theme.margin.m};\n  transform: ${({ open }) => `scale(${open ? '1' : '2'}) translateY(${open ? '0px' : '-50px'})`};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: ${({ theme, open }) => (open ? `${theme.time.medium}ms` : '0')};\n`;\n","import React, { useRef } from 'react';\nimport { routes } from 'constants/routes';\nimport { useAlertContext, useUserContext } from 'context';\nimport { AlertTypes } from 'utils';\nimport { logoutUser } from '../../Navigation.api';\nimport { StyledOpenNav, StyledLink, StyledContainner, StyledButton } from './OpenedNavigation.css';\n\nconst { SUCCESS } = AlertTypes;\n\ninterface OpenNavProps {\n  open: boolean;\n  handleClose: Function;\n}\n\nconst OpenedNavigation = ({ open, handleClose }: OpenNavProps) => {\n  const { token, logout } = useUserContext();\n  const alertC = useRef(useAlertContext());\n\n  const handleLogout = async () => {\n    try {\n      await logoutUser(token);\n      alertC.current.showAlert('Successfully logged out', SUCCESS);\n      logout();\n    } catch (err) {\n      alertC.current.showAlert(err.message);\n    }\n  };\n\n  return (\n    <StyledOpenNav open={open}>\n      <StyledContainner>\n        {routes.map(({ name, link }) => (\n          <StyledLink open={open} to={link} key={name} onClick={() => handleClose()}>\n            {name}\n          </StyledLink>\n        ))}\n      </StyledContainner>\n      {token && (\n        <StyledButton\n          size=\"s\"\n          disabled={!navigator.onLine}\n          mx=\"0.75rem\"\n          data-testid=\"logout\"\n          onClick={handleLogout}\n        >\n          Logout\n        </StyledButton>\n      )}\n    </StyledOpenNav>\n  );\n};\n\nexport default OpenedNavigation;\n","import React, { useState } from 'react';\nimport {\n  StyledNavButton,\n  StyledTLDot,\n  StyledTRDot,\n  StyledBLDot,\n  StyledBRDot,\n  StyledLine,\n  StyledRotatedLine,\n} from './Navigation.css';\nimport { OpenedNavigation } from './components';\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <StyledNavButton\n        open={open}\n        data-testid=\"navButton\"\n        onClick={() => setOpen((prevState) => !prevState)}\n      >\n        <StyledTLDot open={open} />\n        <StyledTRDot open={open} />\n        <StyledBLDot open={open} />\n        <StyledBRDot open={open} />\n        <StyledLine open={open} />\n        <StyledRotatedLine open={open} />\n      </StyledNavButton>\n      <OpenedNavigation open={open} handleClose={() => setOpen(false)} />\n    </>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.main`\n  min-height: 100vh;\n  width: 100%;\n`;\n\nexport default StyledContainer;\n","/* eslint-disable react/require-default-props */\nimport React, { InputHTMLAttributes, TextareaHTMLAttributes } from 'react';\nimport { FieldError } from 'react-hook-form';\nimport {\n  StyledInputWrapper,\n  StyledInput,\n  StyledLabel,\n  StyledMessage,\n  StyledTextArea,\n} from './Input.css';\n\ninterface InputProps {\n  label: string;\n  refVal: any;\n  error?: FieldError;\n  rest?: Rest;\n}\n\ntype Rest = {\n  [prop: string]: string;\n};\n\nconst Input = ({\n  label,\n  id,\n  refVal,\n  error,\n  type = 'text',\n  ...rest\n}: InputProps &\n  InputHTMLAttributes<HTMLInputElement> &\n  TextareaHTMLAttributes<HTMLTextAreaElement>) => (\n  <StyledInputWrapper>\n    <StyledLabel htmlFor={id}>{label}</StyledLabel>\n    {type === 'textarea' ? (\n      <StyledTextArea error={!!error} id={id} {...rest} ref={refVal} />\n    ) : (\n      <StyledInput error={!!error} id={id} type={type} {...rest} ref={refVal} />\n    )}\n    {error && <StyledMessage>{error?.message}</StyledMessage>}\n  </StyledInputWrapper>\n);\n\nexport default Input;\n","import styled from 'styled-components';\nimport { AlertTypes } from 'constants/enums';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: ${({ theme }) => theme.margin.s};\n`;\n\ntype AlertProps = { type: AlertTypes };\n\nconst StyledAlert = styled.div<AlertProps>`\n  border: ${({ type, theme }) => `1px solid ${theme.colors[type].border}`};\n  background-color: ${({ type, theme }) => `${theme.colors[type].main}`};\n  color: ${({ type, theme }) => `${theme.colors[type].text}`};\n  border-radius: 5px;\n  padding: ${({ theme }) => theme.margin.xs};\n  font-size: ${({ theme }) => theme.font.sizes.s};\n`;\n\nexport { StyledAlert, StyledWrapper };\n","import React from 'react';\nimport { AlertTypes } from 'constants/enums';\nimport { StyledAlert, StyledWrapper } from './Alert.css';\n\ntype AlertProps = {\n  children?: string;\n  type?: AlertTypes;\n};\n\nexport const Alert = ({ children = 'Ładowanie...', type = AlertTypes.ERROR }: AlertProps) => (\n  <StyledWrapper>\n    <StyledAlert data-testid=\"alert\" type={type}>\n      {children}\n    </StyledAlert>\n  </StyledWrapper>\n);\n\ntype MessageProps = {\n  error: string;\n  loading: boolean;\n  rest?: { [prop: string]: string };\n};\n\nconst AlertMessage = ({ error, loading, ...rest }: MessageProps) =>\n  error ? (\n    <Alert {...rest}>{error}</Alert>\n  ) : loading ? (\n    <Alert {...rest} type={AlertTypes.LOADING} />\n  ) : null;\n\nexport default AlertMessage;\n","import styled from 'styled-components';\n\nexport const StyledBacground = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${({ theme }) => theme.zIndex.max};\n  background-color: rgba(0, 0, 0, 0.3);\n`;\n\ninterface WrapperProps {\n  fullHeight?: boolean;\n}\n\nexport const StyledWrapper = styled.div<WrapperProps>`\n  position: fixed;\n  width: ${({ theme, fullHeight }) =>\n    fullHeight ? '100%' : `calc(100% - ${theme.margin.sm} - ${theme.margin.sm})`};\n  height: ${({ theme }) => `calc(90vh - ${theme.margin.sm} -  ${theme.margin.sm})`};\n  top: ${({ theme, fullHeight }) => (fullHeight ? '0' : theme.margin.sm)};\n  left: 50%;\n  transform: translateX(-50%);\n  padding: ${({ theme }) => theme.margin.sm} 0;\n  background-color: ${({ theme }) => theme.colors.modalBackground};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  z-index: ${({ theme }) => theme.zIndex.max};\n  max-width: 350px;\n  overflow: scroll;\n`;\n\nexport const StyledHeader = styled.h2`\n  width: 100%;\n  text-align: center;\n  font-size: ${({ theme }) => theme.font.sizes.ml};\n`;\n\nexport const StyledCloseButton = styled.button`\n  width: 50px;\n  height: 50px;\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: 0;\n  border: none;\n  background-color: transparent;\n  &:hover {\n    cursor: pointer;\n  }\n  &:disabled {\n    filter: grayscale(1);\n  }\n`;\n\ninterface Line {\n  rotate: number;\n}\n\nexport const StyledLine = styled.div<Line>`\n  height: 100%;\n  width: 2px;\n  position: absolute;\n  top: 0%;\n  left: 50%;\n  background-color: ${({ theme }) => theme.colors.error.main};\n  transform: ${({ rotate }) => `rotate(${rotate}deg)`};\n`;\n","import React, { MouseEventHandler } from 'react';\nimport {\n  StyledWrapper,\n  StyledHeader,\n  StyledCloseButton,\n  StyledLine,\n  StyledBacground,\n} from './PopUp.css';\n\ninterface PopUpProps {\n  open: boolean;\n  handleClose: MouseEventHandler<HTMLButtonElement | HTMLDivElement>;\n  header: string;\n  children: React.ReactChild;\n  fullHeight?: boolean;\n  disabled?: boolean;\n}\n\nconst PopUp = ({ open, handleClose, header, children, fullHeight, disabled }: PopUpProps) =>\n  open ? (\n    <>\n      {!fullHeight && <StyledBacground onClick={handleClose} />}\n      <StyledWrapper fullHeight={fullHeight}>\n        <StyledCloseButton\n          disabled={disabled}\n          type=\"button\"\n          data-testid={`${header}-close`}\n          onClick={handleClose}\n        >\n          <StyledLine rotate={45} />\n          <StyledLine rotate={-45} />\n        </StyledCloseButton>\n        <StyledHeader data-testid={`${header}-header`}>{header}</StyledHeader>\n        {children}\n      </StyledWrapper>\n    </>\n  ) : null;\n\nexport default PopUp;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  width: 100%;\n  max-width: 300px;\n  margin-bottom: ${({ theme }) => theme.margin.sm};\n`;\n","import React from 'react';\nimport { Controller, Control, FieldError } from 'react-hook-form';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledLabel, StyledMessage } from 'components/Input/Input.css';\nimport { StyledWrapper } from './DateInput.css';\nimport './customDatePicker.css';\n\ninterface DateInputProps {\n  control: Control<Record<string, any>>;\n  name: string;\n  header: string;\n  maxDate?: Date;\n  minDate?: Date;\n  error: FieldError | undefined;\n}\n\nconst DateInput = ({ control, name, header, maxDate, minDate, error }: DateInputProps) => (\n  <StyledWrapper>\n    <StyledLabel htmlFor={name}>{header}</StyledLabel>\n    <Controller\n      name={name}\n      control={control}\n      rules={{ required: 'Date is required.' }}\n      render={({ onChange, value }) => (\n        <DatePicker\n          id={name}\n          data-testid={name}\n          maxDate={maxDate}\n          minDate={minDate}\n          selected={value}\n          onChange={onChange}\n        />\n      )}\n    />\n    {error && <StyledMessage>{error?.message}</StyledMessage>}\n  </StyledWrapper>\n);\n\nexport default DateInput;\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.select`\n  width: 100%;\n  max-width: 300px;\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n`;\n","import React from 'react';\nimport { Control, Controller } from 'react-hook-form';\nimport { StyledInputWrapper, StyledLabel } from 'components/Input/Input.css';\nimport { StyledSelect } from './Select.css';\n\ninterface Option {\n  key: string;\n  value: string;\n}\n\ninterface SelectProps<T> {\n  options: Array<T>;\n  control: Control<Record<string, any>>;\n  name: string;\n  label: string;\n}\n\nconst Select = <T extends Option>({ options, control, name, label }: SelectProps<T>) => (\n  <StyledInputWrapper>\n    <StyledLabel>{label}</StyledLabel>\n    <Controller\n      name={name}\n      control={control}\n      render={({ onChange, value }) => (\n        <StyledSelect data-testid={name} value={value} onChange={onChange}>\n          <option key=\"1\" value=\"\">\n            ----Brak labelu----\n          </option>\n          {options.map(({ key, value: val }) => (\n            <option key={key} value={key}>\n              {val}\n            </option>\n          ))}\n        </StyledSelect>\n      )}\n    />\n  </StyledInputWrapper>\n);\n\nexport default Select;\n","import styled, { keyframes, css } from 'styled-components';\nimport { AlertTypes } from 'utils';\n\nconst { ERROR, SUCCESS } = AlertTypes;\n\nconst alertAnimation = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(-50%);\n  }\n\n  12% {\n    opacity: 1;\n    transform: translateY(0%);\n  }\n  88% {\n    opacity: 1;\n    transform: translateY(0%);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(-50%);\n  }\n`;\n\nconst conAnimation = keyframes`\n  0% {\n    transform: translateX(-50%) scale(0);\n  }\n  1% {\n    transform: translateX(-50%) scale(1);\n  }\n  99% {\n    transform: translateX(-50%) scale(1);\n  }\n  100% {\n    transform: translateX(-50%) scale(0);\n  }\n`;\n\ninterface AlertProps {\n  type: AlertTypes;\n}\n\nconst error = css`\n  background-color: ${({ theme }) => theme.colors.error.main};\n  color: ${({ theme }) => theme.colors.error.text};\n  border: 1px solid ${({ theme }) => theme.colors.error.border};\n`;\nconst success = css`\n  background-color: ${({ theme }) => theme.colors.success.main};\n  color: ${({ theme }) => theme.colors.success.text};\n  border: 1px solid ${({ theme }) => theme.colors.success.border};\n`;\n\nexport const StyledAlert = styled.div<AlertProps>`\n  transition: 0.15s linear;\n  opacity: 1;\n  animation: ${alertAnimation} 6s forwards;\n  width: 100%;\n  max-width: 300px;\n  padding: ${({ theme }) => theme.margin.s};\n  text-align: justify;\n  ${({ type }) => {\n    switch (type) {\n      case ERROR:\n        return error;\n      case SUCCESS:\n        return success;\n      default:\n        return error;\n    }\n  }};\n`;\n\nexport const StyledScale = styled.div`\n  position: fixed;\n  top: 1rem;\n  left: 50%;\n  z-index: 1100;\n  padding: 0 0.5rem;\n  transform: translateX(-50%);\n  animation: ${conAnimation} 6s forwards;\n`;\n","import React from 'react';\nimport { StyledAlert, StyledScale } from './AlertMessage.css';\n\nconst AlertMessage = ({ message, variant, handleClose }) => (\n  <StyledScale>\n    <StyledAlert type={variant} onClick={() => handleClose(false)}>\n      {message}\n    </StyledAlert>\n  </StyledScale>\n);\n\nexport default AlertMessage;\n","import React from 'react';\nimport { useAlertContext } from 'context';\nimport { AlertMessage } from 'components';\n\nconst AlertsContainer = () => {\n  const context = useAlertContext();\n\n  return context.open ? (\n    <AlertMessage\n      message={context.message}\n      handleClose={context.changeVisibility}\n      variant={context.variant}\n    />\n  ) : null;\n};\n\nexport default AlertsContainer;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 9999;\n`;\n","import React, { useState } from 'react';\nimport { AlertTypes } from 'constants/enums';\nimport { StyledWrapper } from './OfflineAlert.css';\nimport { PlainAlert } from '..';\n\nconst OfflineAlert = () => {\n  const [visible, setVisible] = useState(true);\n  return !navigator.onLine && visible ? (\n    <StyledWrapper onClick={() => setVisible(false)}>\n      <PlainAlert type={AlertTypes.LOADING}>\n        No internet connnection. Data is loaded from cache.\n      </PlainAlert>\n    </StyledWrapper>\n  ) : null;\n};\n\nexport default OfflineAlert;\n","import styled from 'styled-components';\n\ninterface DeleteModalProps {\n  open: boolean;\n}\n\nexport const StyledDeleteModal = styled.div<DeleteModalProps>`\n  position: fixed;\n  top: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  max-width: 500px;\n  padding: ${({ theme }) => theme.margin.s};\n  background-color: white;\n  font-size: ${({ theme }) => theme.font.sizes.sm};\n  text-align: justify;\n  border: 2px solid ${({ theme }) => theme.colors.border};\n  z-index: 9998;\n`;\n\ninterface ButtonProps {\n  isDelete?: boolean;\n}\n\nexport const StyledButton = styled.button<ButtonProps>`\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme, isDelete }) =>\n    isDelete ? theme.colors.error.main : theme.colors.success.main};\n  padding: ${({ theme }) => theme.margin.xs};\n  margin-right: ${({ theme }) => theme.margin.xs};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${({ theme }) => theme.margin.xs};\n`;\n","import React, { MouseEventHandler } from 'react';\nimport { StyledCloseButton, StyledLine } from 'components/PopUp/PopUp.css';\nimport { StyledDeleteModal, StyledButton, StyledWrapper } from './DeleteModal.css';\n\ninterface DeleteModalProps {\n  open: boolean;\n  handleClose: Function;\n  handleDelete: Function;\n}\n\nconst DeleteModal = ({ open, handleClose, handleDelete }: DeleteModalProps) =>\n  open ? (\n    <StyledDeleteModal open={open}>\n      <StyledCloseButton\n        type=\"button\"\n        data-testid=\"deleteModal-close\"\n        onClick={handleClose as MouseEventHandler<HTMLButtonElement>}\n      >\n        <StyledLine rotate={45} />\n        <StyledLine rotate={-45} />\n      </StyledCloseButton>\n      <p>Are you sure to delete this item? This action is not reversible.</p>\n      <StyledWrapper>\n        <StyledButton\n          data-testid=\"delete-keep\"\n          onClick={handleClose as MouseEventHandler<HTMLButtonElement>}\n        >\n          Keep\n        </StyledButton>\n        <StyledButton\n          isDelete\n          data-testid=\"deleteItem\"\n          onClick={handleDelete as MouseEventHandler<HTMLButtonElement>}\n        >\n          Delete\n        </StyledButton>\n      </StyledWrapper>\n    </StyledDeleteModal>\n  ) : null;\n\nexport default DeleteModal;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        color: ${({ theme }) => theme.colors.text};\n        background-color: ${({ theme }) => theme.colors.body};\n        font-family: 'Roboto', sans-serif;\n        overflow-x: hidden;\n    }\n    * {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, UserProvider, AlertProvider, RefreshProvider } from 'context';\nimport { Navigation, AlertsContainer, OfflineAlert } from 'components';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport { Router } from '..';\n\nconst App = () => (\n  <ThemeProvider>\n    <RefreshProvider>\n      <AlertProvider>\n        <UserProvider>\n          <GlobalStyle />\n          <BrowserRouter>\n            <OfflineAlert />\n            <AlertsContainer />\n            <Navigation />\n            <Router />\n          </BrowserRouter>\n        </UserProvider>\n      </AlertProvider>\n    </RefreshProvider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport { useUserContext } from 'context';\nimport { Redirect, Route } from 'react-router-dom';\nimport paths from 'constants/paths';\n\ntype PrivateRouteProps = {\n  path: string;\n  children: any;\n};\n\nconst PrivateRoute = ({ ...rest }: PrivateRouteProps) => {\n  const { token } = useUserContext();\n  return token ? <Route {...rest} /> : <Redirect to={paths.LOGIN} />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from 'constants/routes';\nimport PrivateRoute from 'root/PrivateRoute';\n\nconst Router = () => (\n  <Switch>\n    {routes.map(({ path, Component, isPrivate }) =>\n      !isPrivate ? (\n        <Route path={path} exact key={path}>\n          <Component />\n        </Route>\n      ) : (\n        <PrivateRoute path={path} key={path}>\n          <Component />\n        </PrivateRoute>\n      ),\n    )}\n  </Switch>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/reset.css';\nimport { App } from 'root';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}